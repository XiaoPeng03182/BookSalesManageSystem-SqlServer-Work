Index: app/src/main/java/com/example/booksalesmanagement/BottomNavigationViewActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/BottomNavigationViewActivity.kt b/app/src/main/java/com/example/booksalesmanagement/BottomNavigationViewActivity.kt
new file mode 100644
--- /dev/null	(date 1716042169805)
+++ b/app/src/main/java/com/example/booksalesmanagement/BottomNavigationViewActivity.kt	(date 1716042169805)
@@ -0,0 +1,35 @@
+package com.example.booksalesmanagement
+
+import android.os.Bundle
+import com.google.android.material.bottomnavigation.BottomNavigationView
+import androidx.appcompat.app.AppCompatActivity
+import androidx.navigation.findNavController
+import androidx.navigation.ui.AppBarConfiguration
+import androidx.navigation.ui.setupActionBarWithNavController
+import androidx.navigation.ui.setupWithNavController
+import com.example.booksalesmanagement.databinding.ActivityBottomNavigationViewBinding
+
+class BottomNavigationViewActivity : AppCompatActivity() {
+
+    private lateinit var binding: ActivityBottomNavigationViewBinding
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+
+        binding = ActivityBottomNavigationViewBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        //初始化
+        initBottomNavigationViewActivity()
+
+    }
+
+    private fun initBottomNavigationViewActivity() {
+        val navView: BottomNavigationView = binding.navView
+
+        val navController =
+            findNavController(R.id.nav_host_fragment_activity_bottom_navigation_view)
+
+        navView.setupWithNavController(navController)
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values-night/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/themes.xml b/app/src/main/res/values-night/themes.xml
new file mode 100644
--- /dev/null	(date 1716042169844)
+++ b/app/src/main/res/values-night/themes.xml	(date 1716042169844)
@@ -0,0 +1,7 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Base.Theme.BookSalesManagement" parent="Theme.Material3.DayNight.NoActionBar">
+        <!-- Customize your dark theme here. -->
+        <!-- <item name="colorPrimary">@color/my_dark_primary</item> -->
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeFragment.kt b/app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeFragment.kt
new file mode 100644
--- /dev/null	(date 1716042169808)
+++ b/app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeFragment.kt	(date 1716042169808)
@@ -0,0 +1,245 @@
+package com.example.booksalesmanagement.fragment.home
+
+import android.annotation.SuppressLint
+import android.os.Bundle
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.Menu
+import android.view.MenuInflater
+import android.view.MenuItem
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.view.GravityCompat
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+import androidx.recyclerview.widget.GridLayoutManager
+import com.example.booksalesmanagement.R
+import com.example.booksalesmanagement.adapter.BookCoverItemBean
+import com.example.booksalesmanagement.adapter.bookcover.BookCoverAdapter
+import com.example.booksalesmanagement.bean.SC
+import com.example.booksalesmanagement.database.ConnectionSqlServer
+import com.example.booksalesmanagement.databinding.FragmentHomeBinding
+import com.google.android.material.snackbar.Snackbar
+import java.lang.StringBuilder
+import kotlin.concurrent.thread
+
+class HomeFragment : Fragment() {
+
+    private var _binding: FragmentHomeBinding? = null
+
+    private val binding get() = _binding!!
+
+    val books = mutableListOf(
+        BookCoverItemBean("Apple", R.drawable.apple, 90.0), BookCoverItemBean(
+            "Banana",
+            R.drawable.banana, 99.9
+        ), BookCoverItemBean("Orange", R.drawable.orange, 85.1), BookCoverItemBean(
+            "Watermelon",
+            R.drawable.watermelon, 122.1
+        ), BookCoverItemBean("Pear", R.drawable.pear, 85.1), BookCoverItemBean(
+            "Grape",
+            R.drawable.grape, 122.1
+        ), BookCoverItemBean("Pineapple", R.drawable.pineapple, 85.1), BookCoverItemBean(
+            "Strawberry",
+            R.drawable.strawberry, 122.1
+        ), BookCoverItemBean("Cherry", R.drawable.cherry, 85.1), BookCoverItemBean(
+            "Mango",
+            R.drawable.mango, 122.1
+        )
+    )
+
+    val bookList = ArrayList<BookCoverItemBean>()
+
+    @SuppressLint("ResourceAsColor")
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        val homeViewModel =
+            ViewModelProvider(this).get(HomeViewModel::class.java)
+        _binding = FragmentHomeBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+
+        //如果VieModel中变量的值发生变化，会触发观察者中的方法，从而更新UI界面
+        homeViewModel.msgLiveData.observe(viewLifecycleOwner) {
+            //binding.tvShowMsg.text = it
+        }
+
+        /*
+        启用 Fragment 的选项菜单：在 onCreate 或 onCreateView 中调用 setHasOptionsMenu(true)。
+         */
+        // 告知 Fragment 它有选项菜单
+        setHasOptionsMenu(true)
+
+        //setSupportActionBar(binding.toolbar)
+        // 设置 Toolbar
+        (activity as? AppCompatActivity)?.setSupportActionBar(binding.toolbar)
+
+        /*        binding.btnGetMsg.setOnClickListener {
+                    //getMsgFromSqlServer()
+                    homeViewModel.fetchDataFromServer()
+                }*/
+
+        //初始化图书信息
+        initBooks()
+
+        val layoutManager = GridLayoutManager(requireContext(), 2)
+        binding.recyclerView.layoutManager = layoutManager
+        val adapter = BookCoverAdapter(requireContext(), bookList)
+        binding.recyclerView.adapter = adapter
+
+        //设置toolbar上的呼出左侧drawerLayout的导航图标
+        (activity as? AppCompatActivity)?.supportActionBar?.let {
+            it.setDisplayHomeAsUpEnabled(true)
+            it.setHomeAsUpIndicator(R.drawable.ic_menu)
+        }
+
+        //设置drawerLayout的副页的菜单选项监听
+        binding.navView.setCheckedItem(R.id.navCall)  //设置默认选中
+        binding.navView.setNavigationItemSelectedListener {item->
+            when (item.itemId) {
+                R.id.navCall -> {
+                    Toast.makeText(requireContext(), "navCall", Toast.LENGTH_SHORT).show()
+                    // Handle the home action
+                }
+
+                R.id.navFriends -> {
+                    Toast.makeText(requireContext(), "navFriends", Toast.LENGTH_SHORT).show()
+                    // Handle the backup action
+                }
+
+                R.id.navLocation -> {
+                    Toast.makeText(requireContext(), "navLocation", Toast.LENGTH_SHORT).show()
+                    // Handle the delete action
+                }
+
+                R.id.navMail -> {
+                    Toast.makeText(requireContext(), "navMail", Toast.LENGTH_SHORT).show()
+                    // Handle the settings action
+                }
+
+                R.id.navTask -> {
+                    Toast.makeText(requireContext(), "navTask", Toast.LENGTH_SHORT).show()
+                    // Handle the help action
+                }
+
+                else -> {
+                    // Handle other cases if needed
+                }
+            }
+
+
+            binding.drawLayout.closeDrawers()  //关闭drawerLayout的副页
+            true
+        }
+
+        binding.fab.setOnClickListener { view ->
+            //Toast.makeText(this,"FAB clicked",Toast.LENGTH_SHORT).show()
+            Snackbar.make(view, "Data deleted", Snackbar.LENGTH_SHORT)
+                .setAction("Undo") {
+                    Toast.makeText(requireContext(), "Data restored", Toast.LENGTH_SHORT).show()
+                }
+                .show()
+        }
+
+        binding.swipeRefreshLayout.setColorSchemeColors(R.color.colorAccent)
+        binding.swipeRefreshLayout.setOnRefreshListener {
+            refreshBooks(adapter)
+        }
+
+        return root
+    }
+
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+
+    private fun refreshBooks(adapter: BookCoverAdapter) {
+        thread {
+            Thread.sleep(500)
+            activity?.runOnUiThread { //进入主线程修改视图；
+                initBooks()
+                adapter.notifyDataSetChanged()
+                binding.swipeRefreshLayout.isRefreshing = false
+            }
+        }
+    }
+
+    private fun initBooks() {
+        bookList.clear()
+        repeat(50) {
+            val index = (0 until books.size).random()
+            bookList.add(books[index])
+        }
+    }
+
+    //onCreateOptionsMenu()方法中加载了toolbar.xml这个菜单文件
+    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
+        inflater.inflate(R.menu.toolbar, menu)
+        super.onCreateOptionsMenu(menu, inflater)
+    }
+
+    //在onOptionsItemSelected()方法中处理各个按钮的点击事件。
+    override fun onOptionsItemSelected(item: MenuItem): Boolean {
+        when (item.itemId) {
+            android.R.id.home -> {
+                Toast.makeText(requireContext(), "You clicked home", Toast.LENGTH_SHORT).show()
+                binding.drawLayout.openDrawer(GravityCompat.START)
+                return true
+            }
+
+            R.id.backup -> {
+                Toast.makeText(requireContext(), "You clicked Backup", Toast.LENGTH_SHORT).show()
+                return true
+            }
+
+            R.id.delete -> {
+                Toast.makeText(requireContext(), "You clicked Delete", Toast.LENGTH_SHORT).show()
+                return true
+            }
+
+            R.id.settings -> {
+                Toast.makeText(requireContext(), "You clicked Settings", Toast.LENGTH_SHORT).show()
+                return true
+            }
+        }
+        return super.onOptionsItemSelected(item)
+    }
+
+
+    private fun getMsgFromSqlServer() {
+        // 调用SQL Server数据库的代码
+        val sb = StringBuilder()
+        var SC = ArrayList<SC>()
+        var Cno: String? = null
+        thread {
+            try {
+                ConnectionSqlServer.getConnection("lp")
+                SC = ConnectionSqlServer.querySCMsg()
+                //Cno = ConnectionSqlServer.queryCourseMsg()
+            } catch (e: Exception) {
+                e.printStackTrace()
+            }
+
+            for (sc in SC) {
+                sb.append("学号：" + sc.Sno)
+                sb.append("课程号：" + sc.Cno)
+                sb.append("成绩：" + sc.Score)
+                sb.append("\n")
+            }
+
+            /*            activity?.runOnUiThread {
+                            binding.tvShowMsg.text = sb.toString()
+                        }*/
+
+            //binding.tvShowMsg.text = Cno
+            Log.e("TAG", "getMsgFromSqlServer: " + sb.toString())
+            Log.e("TAG", "getMsgFromSqlServer: " + Cno)
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi/ic_launcher_round.xml
new file mode 100644
--- /dev/null	(date 1716042169842)
+++ b/app/src/main/res/mipmap-anydpi/ic_launcher_round.xml	(date 1716042169842)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi/ic_launcher.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi/ic_launcher.xml b/app/src/main/res/mipmap-anydpi/ic_launcher.xml
new file mode 100644
--- /dev/null	(date 1716042169841)
+++ b/app/src/main/res/mipmap-anydpi/ic_launcher.xml	(date 1716042169841)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/.gitignore b/app/.gitignore
new file mode 100644
--- /dev/null	(date 1716042169738)
+++ b/app/.gitignore	(date 1716042169738)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
new file mode 100644
--- /dev/null	(date 1716042169802)
+++ b/app/proguard-rules.pro	(date 1716042169802)
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
+
+-keep class com.alibaba.sdk.android.oss.** { *; }
+-dontwarn okio.**
+-dontwarn org.apache.commons.codec.binary.**
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
new file mode 100644
--- /dev/null	(date 1716042169738)
+++ b/app/build.gradle.kts	(date 1716042169738)
@@ -0,0 +1,71 @@
+plugins {
+    id("com.android.application")
+    id("org.jetbrains.kotlin.android")
+}
+
+android {
+    namespace = "com.example.booksalesmanagement"
+    compileSdk = 34
+
+    buildFeatures {
+        viewBinding = true
+    }
+
+    defaultConfig {
+        applicationId = "com.example.booksalesmanagement"
+        minSdk = 29
+        targetSdk = 34
+        versionCode = 1
+        versionName = "1.0"
+
+        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+    }
+
+    buildTypes {
+        release {
+            isMinifyEnabled = false
+            proguardFiles(
+                getDefaultProguardFile("proguard-android-optimize.txt"),
+                "proguard-rules.pro"
+            )
+        }
+    }
+    compileOptions {
+        sourceCompatibility = JavaVersion.VERSION_1_8
+        targetCompatibility = JavaVersion.VERSION_1_8
+    }
+    kotlinOptions {
+        jvmTarget = "1.8"
+    }
+}
+
+dependencies {
+
+    //SqlServer数据库连接
+    implementation(files("libs\\sqljdbc_11.2\\chs\\mssql-jdbc-11.2.0.jre8.jar"))
+    implementation(files("libs\\jtds-1.2.7.jar"))
+
+    //下拉刷新布局
+    implementation ("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")
+    //图片圆形化组件
+    implementation("de.hdodenhof:circleimageview:3.1.0")
+    //图片加载器
+    implementation ("com.github.bumptech.glide:glide:4.9.0")
+
+    //阿里云Oss云存储服务SDK
+    implementation ("com.aliyun.dpa:oss-android-sdk:2.9.13")
+
+    implementation("androidx.core:core-ktx:1.9.0")
+    implementation("androidx.appcompat:appcompat:1.6.1")
+    implementation("com.google.android.material:material:1.12.0")
+    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
+
+    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.7.0")
+    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0")
+    implementation("androidx.navigation:navigation-fragment-ktx:2.7.7")
+    implementation("androidx.navigation:navigation-ui-ktx:2.7.7")
+
+    testImplementation("junit:junit:4.13.2")
+    androidTestImplementation("androidx.test.ext:junit:1.1.5")
+    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
+}
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
--- /dev/null	(date 1716042169849)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1716042169849)
@@ -0,0 +1,6 @@
+#Fri May 17 17:07:33 CST 2024
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+distributionUrl=https\://mirrors.cloud.tencent.com/gradle/gradle-8.0-bin.zip
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
new file mode 100644
--- /dev/null	(date 1716042169804)
+++ b/app/src/main/AndroidManifest.xml	(date 1716042169804)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+
+
+    <application
+        android:allowBackup="true"
+        android:dataExtractionRules="@xml/data_extraction_rules"
+        android:fullBackupContent="@xml/backup_rules"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/BookSalesManagementTheme"
+        android:usesCleartextTraffic="true"
+        tools:targetApi="31">
+        <activity
+            android:name=".imagetext.ConnectAlibabaBucketActivity"
+            android:exported="false" />
+        <activity
+            android:name=".activity.BookProductDetailsActivity"
+            android:exported="false" />
+        <activity
+            android:name=".BottomNavigationViewActivity"
+            android:exported="false"
+            android:label="@string/title_activity_bottom_navigation_view"
+            android:theme="@style/BookSalesManagementTheme" />
+        <activity
+            android:name=".MainActivity"
+            android:exported="true"
+            android:theme="@style/BookSalesManagementTheme">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/src/main/res/xml/data_extraction_rules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/data_extraction_rules.xml b/app/src/main/res/xml/data_extraction_rules.xml
new file mode 100644
--- /dev/null	(date 1716042169846)
+++ b/app/src/main/res/xml/data_extraction_rules.xml	(date 1716042169846)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+   Sample data extraction rules file; uncomment and customize as necessary.
+   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
+   for details.
+-->
+<data-extraction-rules>
+    <cloud-backup>
+        <!-- TODO: Use <include> and <exclude> to control what is backed up.
+        <include .../>
+        <exclude .../>
+        -->
+    </cloud-backup>
+    <!--
+    <device-transfer>
+        <include .../>
+        <exclude .../>
+    </device-transfer>
+    -->
+</data-extraction-rules>
\ No newline at end of file
Index: app/src/main/res/xml/backup_rules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/backup_rules.xml b/app/src/main/res/xml/backup_rules.xml
new file mode 100644
--- /dev/null	(date 1716042169846)
+++ b/app/src/main/res/xml/backup_rules.xml	(date 1716042169846)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+   Sample backup rules file; uncomment and customize as necessary.
+   See https://developer.android.com/guide/topics/data/autobackup
+   for details.
+   Note: This file is ignored for devices older that API 31
+   See https://developer.android.com/about/versions/12/backup-restore
+-->
+<full-backup-content>
+    <!--
+   <include domain="sharedpref" path="."/>
+   <exclude domain="sharedpref" path="device.xml"/>
+-->
+</full-backup-content>
\ No newline at end of file
Index: app/src/main/res/menu/bottom_nav_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_nav_menu.xml b/app/src/main/res/menu/bottom_nav_menu.xml
new file mode 100644
--- /dev/null	(date 1716042169841)
+++ b/app/src/main/res/menu/bottom_nav_menu.xml	(date 1716042169841)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:id="@+id/navigation_home"
+        android:icon="@drawable/ic_home_black_24dp"
+        android:title="@string/title_home" />
+
+    <item
+        android:id="@+id/navigation_dashboard"
+        android:icon="@drawable/ic_dashboard_black_24dp"
+        android:title="@string/title_dashboard" />
+
+    <item
+        android:id="@+id/navigation_notifications"
+        android:icon="@drawable/ic_notifications_black_24dp"
+        android:title="@string/title_notifications" />
+
+</menu>
\ No newline at end of file
Index: app/src/main/res/menu/nav_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/nav_menu.xml b/app/src/main/res/menu/nav_menu.xml
new file mode 100644
--- /dev/null	(date 1716042169841)
+++ b/app/src/main/res/menu/nav_menu.xml	(date 1716042169841)
@@ -0,0 +1,24 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <group android:checkableBehavior="single">
+        <item
+            android:id="@+id/navCall"
+            android:icon="@drawable/nav_call"
+            android:title="Call" />
+        <item
+            android:id="@+id/navFriends"
+            android:icon="@drawable/nav_friends"
+            android:title="Friends" />
+        <item
+            android:id="@+id/navLocation"
+            android:icon="@drawable/nav_location"
+            android:title="Location" />
+        <item
+            android:id="@+id/navMail"
+            android:icon="@drawable/nav_mail"
+            android:title="Mail" />
+        <item
+            android:id="@+id/navTask"
+            android:icon="@drawable/nav_task"
+            android:title="Tasks" />
+    </group>
+</menu>
\ No newline at end of file
Index: app/src/main/res/menu/toolbar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/toolbar.xml b/app/src/main/res/menu/toolbar.xml
new file mode 100644
--- /dev/null	(date 1716042169841)
+++ b/app/src/main/res/menu/toolbar.xml	(date 1716042169841)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <item
+        android:id="@+id/backup"
+        android:icon="@drawable/ic_backup"
+        android:title="Backup"
+        app:showAsAction="always"/>
+    <!--always表示永远显示在Toolbar中，如果屏幕空间不够则不显示；-->
+
+    <item
+        android:id="@+id/delete"
+        android:icon="@drawable/ic_delete"
+        android:title="Delete"
+        app:showAsAction="ifRoom" />
+    <!--ifRoom表示屏幕空间足够的情况下显示在 Toolbar中，不够的话就显示在菜单当中；-->
+
+    <item
+        android:id="@+id/settings"
+        android:icon="@drawable/ic_settings"
+        android:title="Settings"
+        app:showAsAction="never" />
+    <!--never则表示永远显示在菜单当中。
+    注意，Toolbar 中的action按钮只会显示图标，
+    菜单中的action按钮只会显示文字。-->
+
+</menu>
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardViewModel.kt b/app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardViewModel.kt
new file mode 100644
--- /dev/null	(date 1716042169807)
+++ b/app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardViewModel.kt	(date 1716042169807)
@@ -0,0 +1,13 @@
+package com.example.booksalesmanagement.fragment.dashboard
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+
+class DashboardViewModel : ViewModel() {
+
+    private val _text = MutableLiveData<String>().apply {
+        value = "This is dashboard Fragment"
+    }
+    val text: LiveData<String> = _text
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/imagetext/FileUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/imagetext/FileUtils.java b/app/src/main/java/com/example/booksalesmanagement/imagetext/FileUtils.java
new file mode 100644
--- /dev/null	(date 1716042169810)
+++ b/app/src/main/java/com/example/booksalesmanagement/imagetext/FileUtils.java	(date 1716042169810)
@@ -0,0 +1,75 @@
+package com.example.booksalesmanagement.imagetext;
+
+import android.content.Context;
+import android.content.ContextWrapper;
+import android.graphics.Bitmap;
+import android.graphics.Canvas;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Environment;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+
+public class FileUtils {
+
+
+
+    public static String saveDrawableToInternalStorage(Context context, int drawableId, String filename) {
+        // 1. 将 drawable 资源加载为 Drawable 对象
+        Drawable drawable = context.getDrawable(drawableId);
+        if (drawable == null) {
+            return null; // 资源加载失败
+        }
+
+        // 2. 将 Drawable 对象转换为 Bitmap 对象
+        Bitmap bitmap = drawableToBitmap(drawable);
+
+        // 3. 将 Bitmap 对象保存到应用的文件目录中
+        String filePath = saveBitmapToInternalStorage(context, bitmap, filename);
+
+        return filePath;
+    }
+
+    private static Bitmap drawableToBitmap(Drawable drawable) {
+        if (drawable instanceof BitmapDrawable) {
+            return ((BitmapDrawable) drawable).getBitmap();
+        }
+
+        // 如果不是 BitmapDrawable，则创建一个新的 Bitmap 对象来绘制 Drawable
+        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
+        Canvas canvas = new Canvas(bitmap);
+        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
+        drawable.draw(canvas);
+
+        return bitmap;
+    }
+
+    private static String saveBitmapToInternalStorage(Context context, Bitmap bitmap, String filename) {
+        // 获取应用的内部文件目录
+        File directory = context.getApplicationContext().getDir("images", Context.MODE_PRIVATE);
+        // 创建一个文件对象，指定文件名和保存路径
+        File file = new File(directory, filename);
+
+        FileOutputStream fos = null;
+        try {
+            // 创建文件输出流，将 Bitmap 写入文件
+            fos = new FileOutputStream(file);
+            bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos); // 将 Bitmap 压缩为 PNG 格式，质量为 100%
+            fos.flush();
+            return file.getAbsolutePath(); // 返回保存的文件路径
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            try {
+                if (fos != null) {
+                    fos.close();
+                }
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
Index: app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardFragment.kt b/app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardFragment.kt
new file mode 100644
--- /dev/null	(date 1716042169807)
+++ b/app/src/main/java/com/example/booksalesmanagement/fragment/dashboard/DashboardFragment.kt	(date 1716042169807)
@@ -0,0 +1,42 @@
+package com.example.booksalesmanagement.fragment.dashboard
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+import com.example.booksalesmanagement.databinding.FragmentDashboardBinding
+
+class DashboardFragment : Fragment() {
+
+    private var _binding: FragmentDashboardBinding? = null
+
+    // This property is only valid between onCreateView and
+    // onDestroyView.
+    private val binding get() = _binding!!
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        val dashboardViewModel =
+            ViewModelProvider(this).get(DashboardViewModel::class.java)
+
+        _binding = FragmentDashboardBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+
+        val textView: TextView = binding.textDashboard
+        dashboardViewModel.text.observe(viewLifecycleOwner) {
+            textView.text = it
+        }
+        return root
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_bottom_navigation_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_bottom_navigation_view.xml b/app/src/main/res/layout/activity_bottom_navigation_view.xml
new file mode 100644
--- /dev/null	(date 1716042169838)
+++ b/app/src/main/res/layout/activity_bottom_navigation_view.xml	(date 1716042169838)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    >
+
+        <!--android:paddingTop="?attr/actionBarSize"-->
+        <fragment
+            android:id="@+id/nav_host_fragment_activity_bottom_navigation_view"
+            android:name="androidx.navigation.fragment.NavHostFragment"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:fitsSystemWindows="true"
+            app:defaultNavHost="true"
+            app:layout_constraintBottom_toTopOf="@+id/nav_view"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0"
+            app:navGraph="@navigation/mobile_navigation" />
+
+        <com.google.android.material.bottomnavigation.BottomNavigationView
+            android:id="@+id/nav_view"
+            android:layout_width="0dp"
+            android:fitsSystemWindows="true"
+            android:layout_height="wrap_content"
+            android:background="?android:attr/windowBackground"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="1.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:menu="@menu/bottom_nav_menu" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout/fragment_notifications.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_notifications.xml b/app/src/main/res/layout/fragment_notifications.xml
new file mode 100644
--- /dev/null	(date 1716042169840)
+++ b/app/src/main/res/layout/fragment_notifications.xml	(date 1716042169840)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".fragment.notifications.NotificationsFragment">
+
+    <TextView
+        android:id="@+id/text_notifications"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="8dp"
+        android:textAlignment="center"
+        android:textSize="20sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
new file mode 100644
--- /dev/null	(date 1716042169840)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1716042169840)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawLayout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".MainActivity">
+
+    <androidx.coordinatorlayout.widget.CoordinatorLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <com.google.android.material.appbar.AppBarLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <androidx.appcompat.widget.Toolbar
+                android:id="@+id/toolbar"
+                android:layout_width="match_parent"
+                android:layout_height="?attr/actionBarSize"
+                android:background="@color/colorPrimary"
+                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+                app:layout_scrollFlags="scroll|enterAlways|snap"
+                app:popupTheme="@style/ThemeOverlay.AppCompat.Light" />
+            <!--能让Toolbar单独使用深色主题
+                popupTheme属性，单独将弹出的菜单项指定成了浅色主题-->
+        </com.google.android.material.appbar.AppBarLayout>
+
+        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
+            android:id="@+id/swipeRefreshLayout"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/recyclerView"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                app:layout_behavior="@string/appbar_scrolling_view_behavior" />
+        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
+
+        <com.google.android.material.floatingactionbutton.FloatingActionButton
+            android:id="@+id/fab"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="bottom|end"
+            android:layout_marginBottom="58dp"
+            android:layout_marginEnd="10dp"
+            android:contentDescription="悬浮按钮"
+            android:elevation="200dp"
+            android:src="@drawable/ic_done"
+            app:layout_behavior="com.google.android.material.behavior.HideBottomViewOnScrollBehavior"
+            app:layout_anchorGravity="bottom|end" />
+
+    </androidx.coordinatorlayout.widget.CoordinatorLayout>
+
+    <com.google.android.material.navigation.NavigationView
+        android:id="@+id/navView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        app:headerLayout="@layout/nav_header"
+        app:menu="@menu/nav_menu" />
+
+</androidx.drawerlayout.widget.DrawerLayout>
\ No newline at end of file
Index: app/src/main/res/layout/nav_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/nav_header.xml b/app/src/main/res/layout/nav_header.xml
new file mode 100644
--- /dev/null	(date 1716042169840)
+++ b/app/src/main/res/layout/nav_header.xml	(date 1716042169840)
@@ -0,0 +1,29 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="180dp"
+    android:padding="10dp"
+    android:background="@color/colorPrimary">
+
+    <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/iconImage"
+        android:layout_width="70dp"
+        android:layout_height="70dp"
+        android:layout_centerInParent="true"
+        android:src="@drawable/nav_icon" />
+    <TextView
+        android:id="@+id/mailText"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:text="@string/tonygreendev_gmail_com"
+        android:textColor="#FFF"
+        android:textSize="14sp" />
+    <TextView
+        android:id="@+id/userText"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_above="@id/mailText"
+        android:text="@string/tony_green"
+        android:textColor="#FFF"
+        android:textSize="14sp" />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsFragment.kt b/app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsFragment.kt
new file mode 100644
--- /dev/null	(date 1716042169809)
+++ b/app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsFragment.kt	(date 1716042169809)
@@ -0,0 +1,42 @@
+package com.example.booksalesmanagement.fragment.notifications
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+import com.example.booksalesmanagement.databinding.FragmentNotificationsBinding
+
+class NotificationsFragment : Fragment() {
+
+    private var _binding: FragmentNotificationsBinding? = null
+
+    // This property is only valid between onCreateView and
+    // onDestroyView.
+    private val binding get() = _binding!!
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        val notificationsViewModel =
+            ViewModelProvider(this).get(NotificationsViewModel::class.java)
+
+        _binding = FragmentNotificationsBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+
+        val textView: TextView = binding.textNotifications
+        notificationsViewModel.text.observe(viewLifecycleOwner) {
+            textView.text = it
+        }
+        return root
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
\ No newline at end of file
Index: LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LICENSE b/LICENSE
new file mode 100644
--- /dev/null	(date 1716042169674)
+++ b/LICENSE	(date 1716042169674)
@@ -0,0 +1,201 @@
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
Index: app/src/main/res/layout/book_cover_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/book_cover_item.xml b/app/src/main/res/layout/book_cover_item.xml
new file mode 100644
--- /dev/null	(date 1716042169839)
+++ b/app/src/main/res/layout/book_cover_item.xml	(date 1716042169839)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.material.card.MaterialCardView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_margin="5dp"
+    app:cardCornerRadius="4dp">
+
+    <!-- 卡片视图的内容 -->
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <ImageView
+            android:id="@+id/bookImage"
+            android:layout_width="match_parent"
+            android:layout_height="100dp"
+            android:scaleType="centerCrop" />
+        <!--这个属性可以指定图片的缩放模式。由于各张 水果图片的长宽比例可能会不一致，
+        为了让所有的图片都能填充满整个ImageView，这里使用 了centerCrop模式，
+        它可以让图片保持原有比例填充满ImageView，并将超出屏幕的部分裁 剪掉。-->
+
+        <TextView
+            android:id="@+id/bookName"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:layout_margin="5dp"
+            android:textSize="16sp" />
+    </LinearLayout>
+
+</com.google.android.material.card.MaterialCardView>
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsViewModel.kt b/app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsViewModel.kt
new file mode 100644
--- /dev/null	(date 1716042169809)
+++ b/app/src/main/java/com/example/booksalesmanagement/fragment/notifications/NotificationsViewModel.kt	(date 1716042169809)
@@ -0,0 +1,13 @@
+package com.example.booksalesmanagement.fragment.notifications
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+
+class NotificationsViewModel : ViewModel() {
+
+    private val _text = MutableLiveData<String>().apply {
+        value = "This is notifications Fragment"
+    }
+    val text: LiveData<String> = _text
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
new file mode 100644
--- /dev/null	(date 1716042169839)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1716042169839)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+
+    tools:context=".MainActivity">
+
+    <Button
+        android:id="@+id/btn_GetMsg"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="发送请求"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.235" />
+
+    <TextView
+        android:id="@+id/tv_ShowMsg"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:text="Hello World!"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.335" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_book_product_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_book_product_details.xml b/app/src/main/res/layout/activity_book_product_details.xml
new file mode 100644
--- /dev/null	(date 1716042169838)
+++ b/app/src/main/res/layout/activity_book_product_details.xml	(date 1716042169838)
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context=".activity.BookProductDetailsActivity">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/appBar"
+        android:layout_width="match_parent"
+        android:layout_height="250dp"
+        android:fitsSystemWindows="true">
+
+        <com.google.android.material.appbar.CollapsingToolbarLayout
+            android:id="@+id/collapsingToolbarLayout"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:fitsSystemWindows="true"
+            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+            app:contentScrim="@color/colorPrimary"
+            app:layout_scrollFlags="scroll|exitUntilCollapsed">
+
+            <ImageView
+                android:id="@+id/bookImageView"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:fitsSystemWindows="true"
+                android:scaleType="centerCrop"
+                app:layout_collapseMode="parallax" />
+
+            <androidx.appcompat.widget.Toolbar
+                android:id="@+id/toolbar"
+                android:layout_width="match_parent"
+                android:layout_height="?attr/actionBarSize"
+                app:layout_collapseMode="pin" />
+
+        </com.google.android.material.appbar.CollapsingToolbarLayout>
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <com.google.android.material.card.MaterialCardView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="15dp"
+                android:layout_marginTop="35dp"
+                android:layout_marginEnd="15dp"
+                android:layout_marginBottom="15dp"
+                app:cardCornerRadius="4dp">
+
+                <TextView
+                    android:id="@+id/bookContentText"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_margin="10dp" />
+
+            </com.google.android.material.card.MaterialCardView>
+
+        </LinearLayout>
+
+    </androidx.core.widget.NestedScrollView>
+
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="16dp"
+        android:src="@drawable/ic_comment"
+        app:layout_anchor="@id/appBar"
+        app:layout_anchorGravity="bottom|end" />
+
+    <!--app:layout_anchor属性指定 了一个锚点，我们将锚点设置为AppBarLayout，
+        这样悬浮按钮就会出现在水果标题栏的区域内，
+        app:layout_anchorGravity属性将悬浮按钮定位在标题栏区域的右下角。-->
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_dashboard.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_dashboard.xml b/app/src/main/res/layout/fragment_dashboard.xml
new file mode 100644
--- /dev/null	(date 1716042169839)
+++ b/app/src/main/res/layout/fragment_dashboard.xml	(date 1716042169839)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".fragment.dashboard.DashboardFragment">
+
+    <TextView
+        android:id="@+id/text_dashboard"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="8dp"
+        android:textAlignment="center"
+        android:textSize="20sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: README.en.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.en.md b/README.en.md
new file mode 100644
--- /dev/null	(date 1716042169679)
+++ b/README.en.md	(date 1716042169679)
@@ -0,0 +1,36 @@
+# BookSalesManageSystem-SqlServer-Work
+
+#### Description
+在线图书销售管理系统-Android对接SqlServer
+
+#### Software Architecture
+Software architecture description
+
+#### Installation
+
+1.  xxxx
+2.  xxxx
+3.  xxxx
+
+#### Instructions
+
+1.  xxxx
+2.  xxxx
+3.  xxxx
+
+#### Contribution
+
+1.  Fork the repository
+2.  Create Feat_xxx branch
+3.  Commit your code
+4.  Create Pull Request
+
+
+#### Gitee Feature
+
+1.  You can use Readme\_XXX.md to support different languages, such as Readme\_en.md, Readme\_zh.md
+2.  Gitee blog [blog.gitee.com](https://blog.gitee.com)
+3.  Explore open source project [https://gitee.com/explore](https://gitee.com/explore)
+4.  The most valuable open source project [GVP](https://gitee.com/gvp)
+5.  The manual of Gitee [https://gitee.com/help](https://gitee.com/help)
+6.  The most popular members  [https://gitee.com/gitee-stars/](https://gitee.com/gitee-stars/)
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(date 1716042169683)
+++ b/README.md	(date 1716042169683)
@@ -0,0 +1,37 @@
+# BookSalesManageSystem-SqlServer-Work
+
+#### 介绍
+在线图书销售管理系统-Android对接SqlServer
+
+#### 软件架构
+软件架构说明
+
+
+#### 安装教程
+
+1.  xxxx
+2.  xxxx
+3.  xxxx
+
+#### 使用说明
+
+1.  xxxx
+2.  xxxx
+3.  xxxx
+
+#### 参与贡献
+
+1.  Fork 本仓库
+2.  新建 Feat_xxx 分支
+3.  提交代码
+4.  新建 Pull Request
+
+
+#### 特技
+
+1.  使用 Readme\_XXX.md 来支持不同的语言，例如 Readme\_en.md, Readme\_zh.md
+2.  Gitee 官方博客 [blog.gitee.com](https://blog.gitee.com)
+3.  你可以 [https://gitee.com/explore](https://gitee.com/explore) 这个地址来了解 Gitee 上的优秀开源项目
+4.  [GVP](https://gitee.com/gvp) 全称是 Gitee 最有价值开源项目，是综合评定出的优秀开源项目
+5.  Gitee 官方提供的使用手册 [https://gitee.com/help](https://gitee.com/help)
+6.  Gitee 封面人物是一档用来展示 Gitee 会员风采的栏目 [https://gitee.com/gitee-stars/](https://gitee.com/gitee-stars/)
Index: app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaOssToImage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaOssToImage.kt b/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaOssToImage.kt
new file mode 100644
--- /dev/null	(date 1716042169810)
+++ b/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaOssToImage.kt	(date 1716042169810)
@@ -0,0 +1,118 @@
+package com.example.booksalesmanagement.imagetext
+
+import android.content.Context
+import android.graphics.Bitmap
+import android.util.Log
+import com.alibaba.sdk.android.oss.ClientException
+import com.alibaba.sdk.android.oss.ServiceException
+import com.alibaba.sdk.android.oss.model.GetObjectRequest
+import com.alibaba.sdk.android.oss.model.GetObjectResult
+import com.alibaba.sdk.android.oss.model.PutObjectRequest
+import com.alibaba.sdk.android.oss.model.PutObjectResult
+
+object ConnectAlibabaOssToImage {
+    //获取图片的异步回调
+    interface ImageCallback {
+        fun onImageLoaded(bitmap: Bitmap?)
+        fun onError()
+    }
+    //上传图片的异步回调
+    interface UploadCallback {
+        fun onUploadSuccess()
+        fun onUploadFailure()
+    }
+
+    /**
+     * @param context
+     * @param bookImageFileName 保存在OSS中的文件名字
+     * @param imageFilePath 图片的url
+     * @param callback 图片成功上传的回调
+     */
+    //上传图片
+    fun sendImage(context: Context, bookImageFileName: String, imageFilePath:String, callback: UploadCallback) {
+        var ossManager: OssManager? = null
+
+        ossManager = OssManager.Builder(context)
+            .bucketName("bookcoverimage")
+            .accessKeyId("LTAI5tShWwnv8iwW6fYpXaUg")
+            .accessKeySecret("aCdE7DpKSm9fiHTmqgKw3F28T6hHuo")
+            .endPoint("http://oss-cn-chengdu.aliyuncs.com")
+            .objectKey("bookImages/$bookImageFileName")
+            .localFilePath(imageFilePath)
+            .build()
+
+        //设置上传进度和状态监听器（可选）
+        ossManager?.setPushProgressListener(object : OssManager.OnPushProgressListener {
+            override fun onProgress(
+                request: PutObjectRequest?,
+                currentSize: Long,
+                totalSize: Long
+            ) {
+                // 处理上传进度
+
+            }
+        })
+
+        ossManager?.setPushStateListener(object : OssManager.OnPushStateListener {
+            override fun onSuccess(request: PutObjectRequest?, result: PutObjectResult?) {
+                // 上传成功处理
+                Log.e("TAG", "上传成功")
+                //异步执行上传成功回调
+                ossManager.cancelPushOrGet()
+                callback.onUploadSuccess()
+            }
+
+            override fun onFailure(
+                request: PutObjectRequest?,
+                clientException: ClientException?,
+                serviceException: ServiceException?
+            ) {
+                // 上传失败处理
+                Log.e("TAG", "上传失败")
+                callback.onUploadFailure()
+            }
+        })
+
+        //执行上传任务
+        ossManager?.push()
+    }
+
+
+    /**
+     * @param context
+     * @param bookImageFileName 保存在OSS中的文件名字
+     * @param callback 图片成功上传的回调
+     */
+    //获取图书图片
+    fun getImage(context:Context, bookImageFileName: String, callback: ImageCallback) {
+        var ossManager: OssManager? = null
+        ossManager = OssManager.Builder(context)
+            .bucketName("bookcoverimage")
+            .accessKeyId("LTAI5tShWwnv8iwW6fYpXaUg")
+            .accessKeySecret("aCdE7DpKSm9fiHTmqgKw3F28T6hHuo")
+            .endPoint("http://oss-cn-chengdu.aliyuncs.com")
+            .objectKey("bookImages/$bookImageFileName")
+            .build()
+
+        ossManager?.setGetStateListener(object : OssManager.OnGetStateListener {
+            override fun onSuccess(request: GetObjectRequest?, result: GetObjectResult?) {
+                Log.e("TAG", "下载成功")
+                val bitmap = ossManager.downImageBitmap
+                //执行异步回调，对返回的bitmap进行处理
+                callback.onImageLoaded(bitmap)
+                ossManager.cancelPushOrGet()
+            }
+
+            override fun onFailure(
+                request: GetObjectRequest?,
+                clientException: ClientException?,
+                serviceException: ServiceException?
+            ) {
+                callback.onError()
+            }
+        })
+        //开始下载任务
+        ossManager?.getObject()
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/MainActivity.kt b/app/src/main/java/com/example/booksalesmanagement/MainActivity.kt
new file mode 100644
--- /dev/null	(date 1716042169805)
+++ b/app/src/main/java/com/example/booksalesmanagement/MainActivity.kt	(date 1716042169805)
@@ -0,0 +1,67 @@
+package com.example.booksalesmanagement
+
+import android.content.Intent
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import android.util.Log
+import com.example.booksalesmanagement.database.ConnectionSqlServer
+import com.example.booksalesmanagement.bean.SC
+import com.example.booksalesmanagement.databinding.ActivityMainBinding
+import com.example.booksalesmanagement.imagetext.ConnectAlibabaBucketActivity
+import java.lang.StringBuilder
+import kotlin.concurrent.thread
+
+class MainActivity : AppCompatActivity() {
+    private var  _binding :ActivityMainBinding? =  null
+        private val  binding  get() = _binding!!
+
+        override fun onCreate(savedInstanceState: Bundle?) {
+            super.onCreate(savedInstanceState)
+            _binding= ActivityMainBinding.inflate(layoutInflater)
+            setContentView(binding.root)
+
+            binding.btnGetMsg.setOnClickListener {
+               // getMsgFromSqlServer()
+               // startActivity(Intent(this,BottomNavigationViewActivity::class.java))
+                startActivity(Intent(this, ConnectAlibabaBucketActivity::class.java))
+            }
+        }
+
+    private fun getMsgFromSqlServer(){
+        // 调用SQL Server数据库的代码
+        val sb = StringBuilder()
+        var SC = ArrayList<SC>()
+        var Cno : String? = null
+        thread {
+            try {
+                ConnectionSqlServer.getConnection("lp")
+                SC = ConnectionSqlServer.querySCMsg()
+                //Cno = ConnectionSqlServer.queryCourseMsg()
+            } catch (e: Exception) {
+                e.printStackTrace()
+            }
+
+            for (sc in SC) {
+                sb.append("学号：" + sc.Sno)
+                sb.append("课程号：" + sc.Cno)
+                sb.append("成绩：" + sc.Score)
+                sb.append("\n")
+            }
+
+            runOnUiThread {
+                binding.tvShowMsg.text = sb.toString()
+            }
+            //binding.tvShowMsg.text = Cno
+            Log.e("TAG", "getMsgFromSqlServer: " + sb.toString())
+            Log.e("TAG", "getMsgFromSqlServer: " + Cno)
+        }
+    }
+
+
+    override fun onDestroy() {
+            super.onDestroy()
+            _binding = null
+        }
+
+
+}
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/install.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/install.txt b/app/libs/sqljdbc_11.2/chs/install.txt
new file mode 100644
--- /dev/null	(date 1716042169748)
+++ b/app/libs/sqljdbc_11.2/chs/install.txt	(date 1716042169748)
@@ -0,0 +1,39 @@
+安装说明
+Microsoft JDBC Driver 11.2 for SQL Server
+
+
+简介
+------------
+以下是有关解压缩 sqljdbc_<version>_enu.zip 和 
+sqljdbc_<version>_enu.tar.gz 的说明。
+
+
+WINDOWS
+-------
+1.阅读 license.txt 文件。下载和使用 Microsoft JDBC Driver 11.2 for SQL Server 即表明接受此许可。
+
+2.将 sqljdbc_<version>_enu.zip 下载到一个临时目录。
+
+3.提取 sqljdbc_<version>_enu.zip
+
+4.出现提示时输入提取目录；建议
+   在 %ProgramFiles% 中解压缩此 zip 文件，并使用下面的默认目录：
+
+	Microsoft JDBC DRIVER 11.2 for SQL Server
+
+
+UNIX
+----
+1.阅读 license.txt 文件。下载和使用 Microsoft JDBC Driver 11.2 for SQL Server 即表明接受此许可。
+
+2.将 sqljdbc_<version>_enu.tar.gz 下载到一个临时目录。
+
+3.若要解压缩此压缩的 tar 文件，请导航至要解压缩驱动程序的目录中，
+   然后键入：
+
+	gzip -d sqljdbc_<version>_enu.tar.gz
+
+4.若要解压缩此 tar 文件，请将其移至要安装驱动程序的目录中， 
+   然后键入：
+
+	tar -xf sqljdbc_<version>_enu.tar
Index: app/libs/sqljdbc_11.2/chs/license.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/license.txt b/app/libs/sqljdbc_11.2/chs/license.txt
new file mode 100644
--- /dev/null	(date 1716042169748)
+++ b/app/libs/sqljdbc_11.2/chs/license.txt	(date 1716042169748)
@@ -0,0 +1,56 @@
+微软软件许可条款
+MICROSOFT JDBC DRIVER 11.2 FOR SQL SERVER
+
+这些许可条款是您与微软公司（或其关联公司）之间达成的协议。这些条款适用于上述软件和任何 Microsoft 服务或软件更新（但该等服务或更新附有新的或额外条款的情况除外，在这种情况下，那些不同的条款预期会适用，并且不会改变您或 Microsoft 的有关预更新的软件或服务的权利）。如果您遵守这些许可条款，您将拥有以下权利。
+
+1. 安装和使用权利。
+	a. 一般条款。您仅可出于上述目的以及出于内部业务的目的安装和使用任意数量的软件副本以开发和测试您的应用程序。
+	b. 第三方软件。本软件可能包含 Microsoft（而不是第三方）根据本协议的规定许可您使用的第三方应用程序。包含的任何针对第三方应用程序的声明，其目的仅用作提供信息。
+
+2. 可分发代码。该软件可能包含您可以根据本节的描述在您开发的应用程序中进行分发（即将其提供给第三方）的代码。
+	a. 分发权。如下所述的代码和测试文件如果包含在该软件内，则为“可分发代码”。
+		i. REDIST.TXT 文件。您可复制和分发软件中的 REDIST 列表上列出的对象代码形式的代码（如有），或 REDIST (https://aka.ms/jdbceularedist) 上列出的对象代码形式的代码；
+		ii. 图像库。您可以根据软件文档中的说明复制和分发图像库中的图像、图形和动画；
+		iii. 代码示例、模板和样式。您可以复制、修改和分发标记为“样本”、“模板”、“简单样式”和“草图样式”的源代码形式和对象代码形式的代码；以及
+		iv. 第三方分发。您可以允许您的应用程序分销商将您选择与您的应用程序一起分发的可分发代码的任何部分进行复制和分发。
+	b. 分发要求。对于您分发的任何代码，您必须：
+		i. 在您的应用程序中为其添加重要的主要功能；
+		ii. 要求分销商及外部最终用户同意遵守对其及 Microsoft 进行保护的条款且保护范围不得小于本协议；并且
+		iii. 对于因分发或使用您的应用程序而导致的任何索赔，为 Microsoft 提供辩护、补偿，包括支付律师费，并使 Microsoft 免受损害，但仅基于未经修改的可分发代码提出的任何索赔除外。
+	c. 分发限制。您不得：
+		iv. 以暗示您的应用程序来自 Microsoft 或得到 Microsoft 认可的方式，在您的应用程序中使用 Microsoft 的商标或商业外观；或者
+		v. 修改或分发任何可分发代码的源代码，致使其任何部分受到下述任何许可的制约：需要以源代码形式公布或分发可分发代码、该软件的任何其他部分或 Microsoft 的任何其他知识产权的许可，或者其他人有权对其进行修改的许可。
+
+3. 数据收集。该软件中的某些功能可能会从您的访问或使用该软件的应用程序的用户处收集数据。如果您使用这些功能以在您的应用程序中收集数据，您必须遵守适用的法律，包括获得任何需要的用户的同意，并保持准确通知用户有关您如何使用、收集和共享其数据的醒目的隐私政策。您同意遵守 Microsoft 隐私声明的所有适用条款（位于 [https://go.microsoft.com/fwlink/?LinkId=521839]）。
+
+4. 许可范围。该软件只授予使用许可，而非出售。Microsoft 保留所有其他权利。除非适用的法律赋予您此项限制之外的权利，否则您不得（且无权）：
+	a. 绕过本软件中的任何技术限制，这些限制只允许您以特定的方式使用软件；
+	b. 对软件进行反向工程、反向编译或反汇编；
+	c. 删除、尽量减少、阻止或修改该软件中的 Microsoft 或其供应商的任何声明；
+	d. 以违反法律或创建或传播恶意软件的任何方式使用软件；或者
+	e. 共享、发布、分发或出借该软件[（可分发代码除外，需遵从上述条款）]，或将其作为独立托管解决方案提供给他人使用，或将该软件或本协议转让给任何第三方。
+
+5. 出口限制。您必须遵守适用于该软件的所有国内和国际出口法律和法规，其中包括对目的地、最终用户和最终用途的各种限制。有关出口限制的详细信息，请访问 http://aka.ms/exporting。
+
+6. 支持服务。根据本协议， Microsoft 没有为软件提供任何支持服务的义务。提供的任何支持均“按现状”提供，“可能存在各种缺陷”，且不包含任何形式的保证。
+
+7. 更新。该软件会定期检查软件更新，并为您下载和安装这些更新。您只能从 Microsoft 或授权来源处获得软件更新。Microsoft 可能需要更新您的系统来为您提供更新资讯。您同意在无需任何额外通知的情况下接收这些自动更新。更新信息可能不涵盖或支持所有的现有软件功能、服务或外围设备。
+
+8. 完整协议。本协议，以及 Microsoft 可能针对补充、更新或第三方应用程序提供的任何其他条款，共同构成了该软件的完整协议。
+
+9. 适用法律和争议解决地点。如果您在美国或加拿大购买该软件，则您所居住的州或省（或者您的业务所在地，这里指业务主营地）的法律管辖本协议的解释、违约索赔和其他所有索赔（包括消费者保护、不正当竞争和侵权索赔），而不考虑冲突法原则。如果您在其他任何国家/地区购买该软件，则应遵守该国家/地区的法律。如果存在美国联邦管辖权地，您和 Microsoft 同意将美国华盛顿州金县的联邦法院作为所有在法院听证的争议的唯一的管辖权地和审判地。如果不存在美国联邦管辖权地，您和 Microsoft 同意将美国华盛顿州金县的高级法院作为在法院听证的所有争议的唯一管辖权地和审判地。
+
+10. 消费者权利；地区差异。本协议规定了某些合法权利。根据您所在州或国家/地区的法律规定，您可能享有其他权利（包括消费者权利）。除了您与微软的关系之外，您还可能单独享有与您的软件卖方相关的权利。如果您所在州或国家/地区的法律不允许本协议改变这些其他权利，则本协议将不改变这些其他权利。例如，如果您的软件是从下列地区之一购买的，或强制性的国家/地区法律适用，则下列条款适用于您：
+	a) 澳大利亚。您享有《澳大利亚消费者法》规定的法定保障，本协议中的任何规定均无意影响这些权利。
+	b) 加拿大。如果您在加拿大购买该软件，您可以关闭自动更新功能、断开您的设备与 Internet 的连接（但是，如果重新连接到 Internet，软件将继续检查并安装更新）或卸载该软件，从而停止接收更新。产品文档（如有）也可能指明了为特定设备或软件关闭更新的方法。
+	c) 德国和奥地利。
+		(i)	保证。获得适当许可的软件会基本上按照该软件附带的任何 Microsoft 材料说明的方式运行。但是，Microsoft 未提供任何与许可软件相关的合同保障。
+		(ii) 责任限制。如果出现基于产品责任法的故意行为、重大过失、索赔以及出现死亡或人身伤害的情况，Microsoft 将依据成文法负责。
+		根据上述条款 (ii)，Microsoft将仅对以下情况的轻微过失负责：Microsoft 违反此类实质性合同义务、未履行促使本协议正常执行的义务、危及本协议的目的的义务违反行为以及未能遵守一方可能一直相信要履行的义务（所谓的“基本义务”）。在其他轻微过失情况下，Microsoft 不对轻微过失负责。
+
+11. 保证免责条款。该软件按“现状”授予许可。您须自行承担使用该软件的风险。微软不提供任何明示的保证、保障或条件。在适用法律允许的范围内，Microsoft 排除所有默示保证，包括有关适销性、针对特定目的的适用性和不侵权的默示保证。
+
+12. 补偿的限制和损害的排除。尽管有前述免责声明，但如果您有充足的依据索取损害补偿，您最多只能向 MICROSOFT 及其供应商索取 5.00 美元的直接损害补偿。您不能因其他任何损害获得退款，包括后果性损害、利润损失、特殊损害、间接损害或附带损害。
+本限制适用于：(a) 与第三方 Internet 站点上的软件、服务、内容（包括代码）或第三方应用程序相关的任何情况；以及 (b) 在适用的法律允许的范围内，因违约、违反保证、保障或条件、严格责任、过失或其他侵权行为引起的索赔；或任何其他索赔。
+即使 MICROSOFT 知道或应该知道可能会出现损害，此项限制也同样适用。由于您所在州、省或国家/地区可能不允许排除或限制附带性损害、后果性损害或其他损害的赔偿责任，因此上述限制或排除条款可能对您不适用。
+
Index: app/src/test/java/com/example/booksalesmanagement/ExampleUnitTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/booksalesmanagement/ExampleUnitTest.kt b/app/src/test/java/com/example/booksalesmanagement/ExampleUnitTest.kt
new file mode 100644
--- /dev/null	(date 1716042169847)
+++ b/app/src/test/java/com/example/booksalesmanagement/ExampleUnitTest.kt	(date 1716042169847)
@@ -0,0 +1,17 @@
+package com.example.booksalesmanagement
+
+import org.junit.Test
+
+import org.junit.Assert.*
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+class ExampleUnitTest {
+    @Test
+    fun addition_isCorrect() {
+        assertEquals(4, 2 + 2)
+    }
+}
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/thirdpartynotices.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/thirdpartynotices.txt b/app/libs/sqljdbc_11.2/chs/thirdpartynotices.txt
new file mode 100644
--- /dev/null	(date 1716042169798)
+++ b/app/libs/sqljdbc_11.2/chs/thirdpartynotices.txt	(date 1716042169798)
@@ -0,0 +1,227 @@
+THIRD-PARTY SOFTWARE NOTICES AND INFORMATION FOR MICROSOFT JDBC DRIVER FOR SQL 
+SERVER
+
+Do Not Translate or Localize
+
+This file is based on or incorporates material from the projects listed below (Third Party IP). The original 
+copyright notice and the license under which Microsoft received such Third Party IP, are set forth below. 
+Such licenses and notices are provided for informational purposes only. Microsoft licenses the Third 
+Party IP to you under the licensing terms for the Microsoft product. Microsoft reserves all other rights 
+not expressly granted under this agreement, whether by implication, estoppel or otherwise.
+
+------------------------------------------- START OF THIRD PARTY NOTICES ----------------------------
+
+concurrentlinkedhashmap 1.4.2
+cityhash 
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
+------------End of License ----------------------------------------------
+----------------------------------------------- END OF THIRD PARTY NOTICES ------------------------------------------
+
+
+
+
+
+
+
Index: app/libs/sqljdbc_11.2/chs/release.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/release.txt b/app/libs/sqljdbc_11.2/chs/release.txt
new file mode 100644
--- /dev/null	(date 1716042169790)
+++ b/app/libs/sqljdbc_11.2/chs/release.txt	(date 1716042169790)
@@ -0,0 +1,190 @@
+版本信息
+Microsoft JDBC Driver 11.2 for SQL Server
+
+------------
+简介
+------------
+此文件包含最新或其他重要信息，是 Microsoft JDBC  
+Driver 11.2 for SQL Server 文档的补充内容。在安装 JDBC 驱动程序之前，应 
+通读此文件。
+
+你的反馈对我们非常重要，我们将力求即时对你的反馈 
+做出回复。有关使用 JDBC 驱动程序博客和在线论坛提供反馈的信息，
+请参阅 Microsoft JDBC Driver 11.2 for SQL Server 页面，网址为 https://aka.ms/mssql-jdbc-feedback
+
+
+------------
+安装
+------------
+install.txt 中提供了有关安装 JDBC 驱动程序的说明。请参阅该文件，了解 
+有关在 Windows、Linux 和 macOS 操作系统上安装 JDBC 驱动程序的详细信息。
+
+
+---------------------------
+支持的操作系统
+---------------------------
+Microsoft JDBC Driver 11.2 for SQL Server 支持的操作系统包括：
+  Windows Server 2012
+  Windows Server 2012 R2
+  Windows Server 2016
+  Windows Server 2019
+  Windows Server 2022
+  Windows 8.1
+  Windows 10
+  Windows 11
+  Linux
+  macOS
+
+上面的列表是某些受支持的操作系统的示例。JDBC 驱动程序 
+可在任何支持使用 Java 虚拟机 (JVM) 的操作系统上工作。
+
+不过，仅对 Linux 和 MacOS（Ubuntu 20.04、Ubuntu 18.04、CentOS 7、SUSE 12、
+ macOS 11）的最新操作系统测试了兼容性和支持功能。
+
+
+-----------------------
+支持的 Java 版本
+-----------------------
+Microsoft JDBC Driver 11.2 for SQL Server 已经过测试且支持最新版的 Java 
+开发套件 (JDK) 在上述受支持的操作系统上基于 Open JDK 和 Zulu 构建而来。
+支持 Java Runtime Environment (JRE) 系统库的以下系列版本：
+
+  ----------------------------------------------------------------------
+  JRE 系列版本 | 可实现最大程度支持的驱动程序 JAR
+  ----------------------------------------------------------------------
+  8+                 | mssql-jdbc-11.2.0.jre8.jar
+  11+                | mssql-jdbc-11.2.0.jre11.jar
+  17+                | mssql-jdbc-11.2.0.jre17.jar
+  18+                | mssql-jdbc-11.2.0.jre18.jar
+
+
+----------------
+版本内容
+----------------
+Microsoft JDBC Driver 11.2 for SQL Server zip 或 tar 文件将解压缩出以下文件 
+在指定位置（相对于选定的安装目录）解包以下文件：
+
+<安装目录>\sqljdbc_<版本>\<语言>\install.txt
+<安装目录>\sqljdbc_<版本>\<语言>\release.txt
+<安装目录>\sqljdbc_<版本>\<语言>\license.txt
+<安装目录>\sqljdbc_<版本>\<语言>\thirdpartynotices.txt
+<安装目录>\sqljdbc_<版本>\<语言>\mssql-jdbc-11.2.0.jre8.jar
+<安装目录>\sqljdbc_<版本>\<语言>\mssql-jdbc-11.2.0.jre11.jar
+<安装目录>\sqljdbc_<版本>\<语言>\mssql-jdbc-11.2.0.jre17.jar
+<安装目录>\sqljdbc_<版本>\<语言>\auth\x86\mssql-jdbc_auth-11.2.0.x86.dll
+<安装目录>\sqljdbc_<版本>\<语言>\auth\x64\mssql-jdbc_auth-11.2.0.x64.dll
+<安装目录>\sqljdbc_<版本>\<语言>\samples\<示例文件...>
+<安装目录>\sqljdbc_<版本>\<语言>\xa\xa_install.sql
+<安装目录>\sqljdbc_<版本>\<语言>\xa\x86\sqljdbc_xa.dll
+<安装目录>\sqljdbc_<版本>\<语言>\xa\x64\sqljdbc_xa.dll
+
+有关每个组件的详细信息，请参阅联机文档 
+Microsoft JDBC Driver for SQL Server 文档：https://aka.ms/mssql-jdbc
+
+
+-------------
+文档
+-------------
+此包中包括版本信息、安装说明以及许可条款。
+联机可找到所有其他文档。
+
+请注意，已中止脱机帮助文件。
+
+
+---------
+JAR 文件
+---------
+为支持后向兼容性和可能的升级方案，JDBC Driver 11.2 的 
+每个安装包中有三个 JAR 类库：
+	mssql-jdbc-11.2.0.jre8.jar
+	mssql-jdbc-11.2.0.jre11.jar
+	mssql-jdbc-11.2.0.jre17.jar
+	mssql-jdbc-11.2.0.jre18.jar
+
+
+----------------------
+特定于功能的文件
+----------------------
+Azure Active Directory 和集成身份验证（在 Windows 上）组件包含在  
+'auth' 目录中。
+
+JDBC 分布式事务组件包含在“xa”目录中。
+
+
+--------------------
+功能依赖关系
+--------------------
+Microsoft JDBC Driver 11.2 for SQL Server 中的一些功能依赖于 
+下列外部库：
+
+1.结合使用“Always Encrypted”与 Azure Key Vault 提供程序
+   依赖库：azure-keyvault（版本 4.3.6）和 azure-identity（版本 1.4.3）
+
+2.使用“具有安全 Enclave 的 Always Encrypted”
+   依赖库：com.google.code.gson（版本 2.8.9）
+   和 org.bouncycastle（版本 1.70）。仅 JDK 8 需要 org.bouncycastle。
+   
+3.在 Windows、Linux 和 macOS 操作系统中使用“Azure Active Directory 身份验证”
+   依赖库：azure-identity（版本 1.4.3）
+   
+4.使用“useFmtOnly”检索参数元数据
+   依赖库：antlr-runtime（版本 4.9.3）
+   
+有关在标准 Java 应用程序或 Maven 应用程序中包含这些依赖库的详细信息 
+可在此处找到：https://go.microsoft.com/fwlink/?linkid=867575
+
+-------
+示例
+-------
+说明 JDBC 驱动程序各项功能的示例应用程序包含在“samples”
+"sample"目录中。有关每个示例以及如何运行它们的详细信息，请参阅联机 
+文档。
+
+
+-----------
+更改列表
+-----------
+有关每个版本中进行的更改、修复和改进的详细列表，请参阅：https://aka.ms/mssql-jdbc-release-notes
+
+------------
+已知问题
+------------
+下面是 Microsoft JDBC Driver 11.2 for SQL Server 的已知问题：
+
+1) 与 SQL Azure 的连接断开
+
+连接到 SQL Azure 时，空闲连接在处于不活动状态一定时间后可能被某个 
+网络组件（如防火墙）终止。若要避免通过网络组件断开空闲连接，
+应在加载驱动程序的操作系统上设定以下注册表 
+设置（或其非 Windows 等效项）：
+           
+注册表设置                                                                                          推荐值
+HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\KeepAliveTime             30000
+HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\KeepAliveInterval         1000
+HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\TcpMaxDataRetransmission  10
+
+2) 结合使用 TVP 和 SQL_VARIANT 时 
+
+2.a) 日期值
+
+当使用 TVP 填充一个表时，且该表包含 sql_variant 列中存储的 datetime/smalldatetime/date 值，
+在 ResultSet 上调用 getDateTime()/getSmallDateTime()/getDate() 将不起作用，并引发以下异常：
+
+	java.lang.String 不能强制转换为 java.sql.Timestamp
+
+解决方法：改为使用 getString() 或 getObject()。
+
+2.b) 对 null 值结合使用 TVP 与 SQL_VARIANT
+
+如果使用 TVP 填充一个表，并将 NULL 值发送给 sql_variant 列类型，会引发
+异常，因为当前不支持在 TVP 中对列类型 sql_variant 插入 NULL 值。
+
+
+3) 使用 NTLM 身份验证时
+
+目前不支持同时启用扩展保护和加密连接。
+
+4) 使用 useFmtOnly 时
+
+此功能存在一些问题，是由 SQL 分析逻辑中的缺陷导致的。
+有关更多详细信息和解决方法建议，请参阅 https://aka.ms/mssql-jdbc-usefmtonly。
Index: app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeViewModel.kt b/app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeViewModel.kt
new file mode 100644
--- /dev/null	(date 1716042169809)
+++ b/app/src/main/java/com/example/booksalesmanagement/fragment/home/HomeViewModel.kt	(date 1716042169809)
@@ -0,0 +1,55 @@
+package com.example.booksalesmanagement.fragment.home
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import com.example.booksalesmanagement.bean.SC
+import com.example.booksalesmanagement.database.ConnectionSqlServer
+
+/*
+MutableLiveData是一种可变的LiveData，它的用法很简单，主要有3种读写数据的方法，分别是
+getValue()、setValue()和postValue()方法。
+    getValue()方法用于获取LiveData中包含的数据；
+    setValue()方法用于给LiveData设置数据，但是只能在主线程中调用；
+    postValue()方法用于在非主线程中给LiveData设置数据
+ */
+
+/*
+get() 方法：在 Kotlin 中，如果你定义了一个属性，你可以使用 get() 方法来获取它的值。
+当你访问 counter 属性时，实际上是调用了 get() 方法。在这个例子中，get() 方法返回了 _counter 属性。
+* */
+
+class HomeViewModel : ViewModel() {
+/*    private val _text = MutableLiveData<String>().apply {
+        value = "This is home Fragment"
+    }
+
+    val text: LiveData<String> = _text*/
+
+    val msgLiveData: LiveData<String>
+        get() = _msgLiveData
+
+    private val _msgLiveData = MutableLiveData<String>()
+
+    fun fetchDataFromServer() {
+        val sb = StringBuilder()
+        var SC = ArrayList<SC>()
+        try {
+            ConnectionSqlServer.getConnection("lp")
+            SC = ConnectionSqlServer.querySCMsg()
+        } catch (e: Exception) {
+            e.printStackTrace()
+        }
+
+        for (sc in SC) {
+            sb.append("学号：" + sc.Sno)
+            sb.append("课程号：" + sc.Cno)
+            sb.append("成绩：" + sc.Score)
+            sb.append("\n")
+        }
+
+        //postValue()方法用于在非主线程中给LiveData设置数据
+        _msgLiveData.postValue(sb.toString())
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/bean/SC.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/bean/SC.kt b/app/src/main/java/com/example/booksalesmanagement/bean/SC.kt
new file mode 100644
--- /dev/null	(date 1716042169806)
+++ b/app/src/main/java/com/example/booksalesmanagement/bean/SC.kt	(date 1716042169806)
@@ -0,0 +1,3 @@
+package com.example.booksalesmanagement.bean
+
+data class SC (val Sno:String,val Cno:String,val Score:String)
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
new file mode 100644
--- /dev/null	(date 1716042169845)
+++ b/app/src/main/res/values/colors.xml	(date 1716042169845)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+
+    <color name="colorPrimary">#cd97fa</color>
+    <color name="colorPrimaryDark">#56d760</color>
+    <color name="colorAccent">#53bbd9</color>
+</resources>
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/redist.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/redist.txt b/app/libs/sqljdbc_11.2/chs/redist.txt
new file mode 100644
--- /dev/null	(date 1716042169790)
+++ b/app/libs/sqljdbc_11.2/chs/redist.txt	(date 1716042169790)
@@ -0,0 +1,5 @@
+Distributable Code for the Microsoft JDBC Driver for SQL Server
+
+The entire package may be redistributed.
+
+For the latest version of this REDIST file, please visit https://aka.ms/jdbceularedist
Index: app/libs/sqljdbc_11.2/chs/xa/xa_install.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/xa/xa_install.sql b/app/libs/sqljdbc_11.2/chs/xa/xa_install.sql
new file mode 100644
--- /dev/null	(date 1716042169802)
+++ b/app/libs/sqljdbc_11.2/chs/xa/xa_install.sql	(date 1716042169802)
@@ -0,0 +1,92 @@
+-- This script installs the extended stored procedures that implement distributed transaction and XA support
+-- for the Microsoft JDBC Driver for SQL Server.
+-- Works only with SQL 2008 and above.
+--
+-- The JDBC XA distributed transaction components are included in the SQL Server engine in SQL Server 2017
+-- starting with cumulative update 16 and in SQL Server 2019, and can be enabled or disabled with a system
+-- stored procedure. The sqjdbc_xa.dll from the driver is not required and it is recommended to enable the
+-- server components instead for these server versions.
+
+-- Notes for SQL Administrators:
+
+-- #1. Prior to running this script you must copy the extended stored procedure dll SQLJDBC_XA.dll 
+--     to the target SQL Server's Binn folder.
+
+-- #2. Permissions to the distributed transaction support procedures for the Microsoft JDBC Driver 8.4
+--     for SQL Server are granted through the SQL Server role [SqlJDBCXAUser].  To maintain a secure default 
+--     configuration, no user is granted access to this role by default.
+
+-- Drop and re-create the extended stored procedure definitions in master.
+
+use master
+go
+
+-- Drop any existing procedure definitions.
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_init') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_init' 
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_start') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_start'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_end') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_end'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_prepare') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_prepare'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_commit') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_commit'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_rollback') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_rollback'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_forget') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_forget'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_recover') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_recover'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_rollback_ex') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_rollback_ex'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_forget_ex') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_forget_ex'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_prepare_ex') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_prepare_ex'
+if exists (select * from sys.objects where object_id = object_id('xp_sqljdbc_xa_init_ex') and OBJECTPROPERTY(object_id, N'IsExtendedProc') = 1) exec sp_dropextendedproc 'xp_sqljdbc_xa_init_ex'
+go
+
+-- Install the procedures.
+exec sp_addextendedproc 'xp_sqljdbc_xa_init', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_start', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_end', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_prepare', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_commit', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_rollback', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_forget', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_recover', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_rollback_ex', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_forget_ex', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_prepare_ex', 'SQLJDBC_XA.dll'
+exec sp_addextendedproc 'xp_sqljdbc_xa_init_ex', 'SQLJDBC_XA.dll'
+go
+
+-- Create the [SqlJDBCXAUser] role in master database.
+-- The SQL administrator can later add users to this role to allow users to participate 
+-- in Microsoft JDBC Driver 8.4 for SQL Server distributed transactions.
+if exists (select * from sys.schemas where name = 'SqlJDBCXAUser' ) 
+drop schema [SqlJDBCXAUser];
+
+if exists (select * from sys.database_principals where name = 'SqlJDBCXAUser' and type='R') 
+drop role [SqlJDBCXAUser];
+
+create role [SqlJDBCXAUser]
+go
+
+
+-- Grant privileges to [SqlJDBCXAUser] role to the extended stored procedures.
+grant execute on xp_sqljdbc_xa_init to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_start to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_end to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_prepare to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_commit to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_rollback to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_recover to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_forget to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_rollback_ex to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_forget_ex to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_prepare_ex to [SqlJDBCXAUser]
+grant execute on xp_sqljdbc_xa_init_ex to [SqlJDBCXAUser]
+go
+
+-- Add users to the [SqlJDBCXAUser] role as needed.
+
+-- Example for adding a SQL authentication user to the SqlJDBCXAUser role.
+-- exec sp_addrolemember [SqlJDBCXAUser], 'MySQLUser'
+
+-- Example for adding a windows domain user to the SqlJDBCXAUser role.
+-- exec sp_addrolemember [SqlJDBCXAUser], 'MyDomain\MyWindowsUser'
+
+print ''
+print 'SQLJDBC XA DLL installation script complete.'
+print 'Check for any error messages generated above.'
Index: app/src/main/java/com/example/booksalesmanagement/adapter/bookcover/BookCoverAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/adapter/bookcover/BookCoverAdapter.kt b/app/src/main/java/com/example/booksalesmanagement/adapter/bookcover/BookCoverAdapter.kt
new file mode 100644
--- /dev/null	(date 1716042169806)
+++ b/app/src/main/java/com/example/booksalesmanagement/adapter/bookcover/BookCoverAdapter.kt	(date 1716042169806)
@@ -0,0 +1,55 @@
+package com.example.booksalesmanagement.adapter.bookcover
+
+import android.content.Context
+import android.content.Intent
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.example.booksalesmanagement.R
+import com.example.booksalesmanagement.activity.BookProductDetailsActivity
+import com.example.booksalesmanagement.adapter.BookCoverItemBean
+
+class BookCoverAdapter(private val context: Context, private val bookList: List<BookCoverItemBean>) : RecyclerView.Adapter<BookCoverAdapter.ViewHolder>() {
+
+    inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        val bookImage: ImageView = view.findViewById(R.id.bookImage)
+        val bookName: TextView = view.findViewById(R.id.bookName)
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(context).inflate(R.layout.book_cover_item,parent,false)
+        /*使用 LayoutInflater 从 XML 布局文件中实例化一个新的视图。
+        R.layout.fruit_item 是要实例化的布局资源文件，它定义了每个 RecyclerView 项的布局。
+        parent 参数是 RecyclerView 的父容器，用于正确配置视图。
+        false 参数表示在加载布局资源时不将其附加到父容器中。*/
+
+        // 创建 ViewHolder 实例，并将其与新创建的视图相关联
+        val holder = ViewHolder(view)
+        holder.itemView.setOnClickListener {
+            val position = holder.adapterPosition
+            val book = bookList[position]
+            val intent = Intent(context,BookProductDetailsActivity::class.java).apply {
+                putExtra(BookProductDetailsActivity.BOOK_NAME,book.bookName)
+                putExtra(BookProductDetailsActivity.BOOK_IMAGE_ID,book.imageUrl)
+            }
+            context.startActivity(intent)
+            // 设置点击事件，当用户点击 RecyclerView 项时，启动 FruitActivity 并传递相关数据
+        }
+        return holder
+    }
+
+    override fun getItemCount(): Int {
+        return bookList.size
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        val book  = bookList[position]
+        holder.bookName.text = book.bookName
+        Glide.with(context).load(book.imageUrl).into(holder.bookImage)
+        //holder.fruitImage.setImageResource(fruit.imageId)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/adapter/BookCoverItemBean.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/adapter/BookCoverItemBean.kt b/app/src/main/java/com/example/booksalesmanagement/adapter/BookCoverItemBean.kt
new file mode 100644
--- /dev/null	(date 1716042169806)
+++ b/app/src/main/java/com/example/booksalesmanagement/adapter/BookCoverItemBean.kt	(date 1716042169806)
@@ -0,0 +1,4 @@
+package com.example.booksalesmanagement.adapter
+
+//Adapter中每个图书商品的封面的数据类
+data class BookCoverItemBean( val bookName:String, val imageUrl:Int,val bookPrice:Double)
Index: app/src/androidTest/java/com/example/booksalesmanagement/ExampleInstrumentedTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/booksalesmanagement/ExampleInstrumentedTest.kt b/app/src/androidTest/java/com/example/booksalesmanagement/ExampleInstrumentedTest.kt
new file mode 100644
--- /dev/null	(date 1716042169804)
+++ b/app/src/androidTest/java/com/example/booksalesmanagement/ExampleInstrumentedTest.kt	(date 1716042169804)
@@ -0,0 +1,24 @@
+package com.example.booksalesmanagement
+
+import androidx.test.platform.app.InstrumentationRegistry
+import androidx.test.ext.junit.runners.AndroidJUnit4
+
+import org.junit.Test
+import org.junit.runner.RunWith
+
+import org.junit.Assert.*
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+@RunWith(AndroidJUnit4::class)
+class ExampleInstrumentedTest {
+    @Test
+    fun useAppContext() {
+        // Context of the app under test.
+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
+        assertEquals("com.example.booksalesmanagement", appContext.packageName)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/activity/BookProductDetailsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/activity/BookProductDetailsActivity.kt b/app/src/main/java/com/example/booksalesmanagement/activity/BookProductDetailsActivity.kt
new file mode 100644
--- /dev/null	(date 1716042169806)
+++ b/app/src/main/java/com/example/booksalesmanagement/activity/BookProductDetailsActivity.kt	(date 1716042169806)
@@ -0,0 +1,51 @@
+package com.example.booksalesmanagement.activity
+
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import android.view.MenuItem
+import com.bumptech.glide.Glide
+import com.example.booksalesmanagement.databinding.ActivityBookProductDetailsBinding
+
+class BookProductDetailsActivity : AppCompatActivity() {
+
+    companion object {
+        const val BOOK_NAME = "book_name"
+        const val BOOK_IMAGE_ID = "book_image_id"
+    }
+
+    private var _binding: ActivityBookProductDetailsBinding? = null
+    private val binding get() = _binding!!
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        _binding = ActivityBookProductDetailsBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        //获取界面跳转，传递过来的图片信息
+        val bookName = intent.getStringExtra(BOOK_NAME) ?:""
+        val bookImageId = intent.getIntExtra(BOOK_IMAGE_ID,0)
+
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)//显示Home按钮
+        binding.collapsingToolbarLayout.title = bookName
+        Glide.with(this).load(bookImageId).into(binding.bookImageView)
+        binding.bookContentText.text = generateCoBookContent(bookName)
+    }
+
+    override fun onOptionsItemSelected(item: MenuItem): Boolean {
+        when(item.itemId) {
+            android.R.id.home -> {
+                finish()
+                return true
+            }
+        }
+        return super.onOptionsItemSelected(item)
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        _binding = null
+    }
+
+    private fun generateCoBookContent(fruitName: String) = fruitName.repeat(500)
+}
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
new file mode 100644
--- /dev/null	(date 1716042169845)
+++ b/app/src/main/res/values/dimens.xml	(date 1716042169845)
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
new file mode 100644
--- /dev/null	(date 1716042169846)
+++ b/app/src/main/res/values/strings.xml	(date 1716042169846)
@@ -0,0 +1,10 @@
+<resources>
+    <string name="app_name">BookSalesManagement</string>
+    <string name="title_activity_bottom_navigation_view">BottomNavigationViewActivity</string>
+    <string name="title_home">Home</string>
+    <string name="title_dashboard">Dashboard</string>
+    <string name="title_notifications">Notifications</string>
+
+    <string name="tony_green">Tony Green</string>
+    <string name="tonygreendev_gmail_com">tonygreendev@gmail.com</string>
+</resources>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1716096504016)
+++ b/.idea/misc.xml	(date 1716096504016)
@@ -0,0 +1,9 @@
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
new file mode 100644
--- /dev/null	(date 1716042169846)
+++ b/app/src/main/res/values/themes.xml	(date 1716042169846)
@@ -0,0 +1,19 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+<!--    <style name="Base.Theme.BookSalesManagement" parent="Theme.Material3.DayNight.NoActionBar">
+        &lt;!&ndash; Customize your light theme here. &ndash;&gt;
+        &lt;!&ndash; <item name="colorPrimary">@color/my_light_primary</item> &ndash;&gt;
+    </style>-->
+
+    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
+        <!-- Customize your theme here. -->
+        <item name = "colorPrimary">@color/colorPrimary</item>
+        <item name = "colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="android:colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="BookSalesManagementTheme" parent="AppTheme" >
+        <item name="android:statusBarColor">@android:color/transparent</item>
+        <!--将BookSalesManagementTheme中的状态栏的颜色指定成透明色-->
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/database/ConnectionSqlServer.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/database/ConnectionSqlServer.kt b/app/src/main/java/com/example/booksalesmanagement/database/ConnectionSqlServer.kt
new file mode 100644
--- /dev/null	(date 1716042169806)
+++ b/app/src/main/java/com/example/booksalesmanagement/database/ConnectionSqlServer.kt	(date 1716042169806)
@@ -0,0 +1,99 @@
+package com.example.booksalesmanagement.database
+
+import android.util.Log
+import com.example.booksalesmanagement.bean.SC
+import java.sql.Connection
+import java.sql.DriverManager
+import java.sql.ResultSet
+import java.sql.SQLException
+import java.sql.Statement
+
+object ConnectionSqlServer {
+    // 获取数据库连接的函数，接受数据库名作为参数
+    @Throws(SQLException::class)
+    fun getConnection(dbName: String): Connection? {
+        var conn: Connection? = null
+        try {
+            //Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver") //加载驱动
+            Class.forName("net.sourceforge.jtds.jdbc.Driver") //加载驱动
+            val ip = "10.203.132.6"
+
+            // 使用 DriverManager 建立数据库连接
+            conn = DriverManager.getConnection(
+                //"jdbc:jtds:sqlserver://$ip:1433;Database=$dbName;encrypt=true;trustServerCertificate=true", // 数据库连接 URL
+                "jdbc:jtds:sqlserver://$ip:1433/$dbName;encrypt=true;trustServerCertificate=true", // 数据库连接 URL
+                //"jdbc:sqlserver://$ip:1433;database=$dbName;encrypt=true;encrypt=true;trustServerCertificate=true", // 数据库连接 URL
+                "sa", "123456"  // 数据库用户名和密码
+            ) as Connection
+            //TextLoginActivity.conn_on = 1 //用于向主函数传参，判断连接是否成功，// 设置连接状态为成功
+        } catch (ex: SQLException) { // 捕获 SQL 异常
+            ex.printStackTrace()
+            //TextLoginActivity.conn_on = 2 // 设置连接状态为失败
+        } catch (ex: ClassNotFoundException) {
+            ex.printStackTrace()
+            //TextLoginActivity.conn_on = 2  // 设置连接状态为失败
+        }
+        return conn //返回Connection型变量conn用于后续连接
+    }
+
+    fun querySCMsg(): ArrayList<SC> {
+        var conn: Connection? = null
+        conn = getConnection("jiaoxuedb")   //获取数据库连接
+
+        val stmt = conn!!.createStatement() //使用Connection来创建一个Statment对象
+
+        val SC = ArrayList<SC>()
+
+        val sql = "SELECT Sno, Cno, Score FROM sc"
+        val resultSet = stmt.executeQuery(sql)
+
+        while (resultSet.next()) {
+
+            val Sno = resultSet.getString("Sno")
+            val Cno = resultSet.getString("Cno")
+            val Score = resultSet.getString("Score")
+
+            val sc = SC(Sno, Cno, Score)
+            SC.add(sc)
+        }
+
+        // 关闭连接和资源
+        resultSet.close()
+        stmt.close()
+        conn.close()
+
+        return SC
+    }
+
+
+    fun queryCourseMsg(): String {
+
+        var resultCno = ""
+        var conn: Connection? = null
+        var stmt: Statement? = null
+        var resultSet: ResultSet? = null
+
+        try {
+            conn = getConnection("BookSalesDB")
+            stmt = conn!!.createStatement()
+            val sql =
+                    "SELECT bookname FROM Book"  // 注意使用正确的表名和架构前缀
+            resultSet = stmt.executeQuery(sql)
+
+            if (resultSet.next()) {
+                resultCno = resultSet.getString(1) // 获取查询结果中的第一列的值
+            }
+        } catch (ex: SQLException) {
+            ex.printStackTrace()
+        } finally {
+            resultSet?.close()
+            stmt?.close()
+            conn?.close()
+        }
+
+        Log.e("queryCourseMsg", resultCno)
+        return resultCno
+    }
+
+
+}
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/samples/sparse/SparseColumns.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/sparse/SparseColumns.java b/app/libs/sqljdbc_11.2/chs/samples/sparse/SparseColumns.java
new file mode 100644
--- /dev/null	(date 1716042169798)
+++ b/app/libs/sqljdbc_11.2/chs/samples/sparse/SparseColumns.java	(date 1716042169798)
@@ -0,0 +1,131 @@
+/*=====================================================================
+File: 	 SparseColumns.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to detect column sets. It also shows a 
+	     technique for parsing a column set's XML output, to get the 
+	     data from the sparse columns.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.io.StringReader;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.ResultSetMetaData;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+
+import org.w3c.dom.Document;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+import org.xml.sax.InputSource;
+
+
+public class SparseColumns {
+
+    public static void main(String args[]) {
+
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement()) {
+
+            createColdCallingTable(stmt);
+
+            // Determine the column set column
+            String columnSetColName = null;
+            String strCmd = "SELECT name FROM sys.columns WHERE object_id=(SELECT OBJECT_ID('ColdCalling')) AND is_column_set = 1";
+
+            try (ResultSet rs = stmt.executeQuery(strCmd)) {
+                if (rs.next()) {
+                    columnSetColName = rs.getString(1);
+                    System.out.println(columnSetColName + " is the column set column!");
+                }
+            }
+
+            strCmd = "SELECT * FROM ColdCalling";
+            try (ResultSet rs = stmt.executeQuery(strCmd)) {
+
+                // Iterate through the result set
+                ResultSetMetaData rsmd = rs.getMetaData();
+
+                DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
+                DocumentBuilder db = dbf.newDocumentBuilder();
+                InputSource is = new InputSource();
+                while (rs.next()) {
+                    // Iterate through the columns
+                    for (int i = 1; i <= rsmd.getColumnCount(); ++i) {
+                        String name = rsmd.getColumnName(i);
+                        String value = rs.getString(i);
+
+                        // If this is the column set column
+                        if (name.equalsIgnoreCase(columnSetColName)) {
+                            System.out.println(name);
+
+                            // Instead of printing the raw XML, parse it
+                            if (value != null) {
+                                // Add artificial root node "sparse" to ensure XML is well formed
+                                String xml = "<sparse>" + value + "</sparse>";
+
+                                is.setCharacterStream(new StringReader(xml));
+                                Document doc = db.parse(is);
+
+                                // Extract the NodeList from the artificial root node that was added
+                                NodeList list = doc.getChildNodes();
+                                Node root = list.item(0); // This is the <sparse> node
+                                NodeList sparseColumnList = root.getChildNodes(); // These are the xml column nodes
+
+                                // Iterate through the XML document
+                                for (int n = 0; n < sparseColumnList.getLength(); ++n) {
+                                    Node sparseColumnNode = sparseColumnList.item(n);
+                                    String columnName = sparseColumnNode.getNodeName();
+                                    // Note that the column value is not in the sparseColumNode, it is the value of
+                                    // the
+                                    // first child of it
+                                    Node sparseColumnValueNode = sparseColumnNode.getFirstChild();
+                                    String columnValue = sparseColumnValueNode.getNodeValue();
+
+                                    System.out.println("\t" + columnName + "\t: " + columnValue);
+                                }
+                            }
+                        } else { // Just print the name + value of non-sparse columns
+                            System.out.println(name + "\t: " + value);
+                        }
+                    }
+                    System.out.println();// New line between rows
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void createColdCallingTable(Statement stmt) throws SQLException {
+        stmt.execute("if exists (select * from sys.objects where name = 'ColdCalling')" + "drop table ColdCalling");
+
+        String sql = "CREATE TABLE ColdCalling  (  ID int IDENTITY(1,1) PRIMARY KEY,  [Date] date,  [Time] time,  PositiveFirstName nvarchar(50) SPARSE,  PositiveLastName nvarchar(50) SPARSE,  SpecialPurposeColumns XML COLUMN_SET FOR ALL_SPARSE_COLUMNS  );";
+        stmt.execute(sql);
+
+        sql = "INSERT ColdCalling ([Date], [Time])  VALUES ('10-13-09','07:05:24')  ";
+        stmt.execute(sql);
+
+        sql = "INSERT ColdCalling ([Date], [Time], PositiveFirstName, PositiveLastName)  VALUES ('07-20-09','05:00:24', 'AA', 'B')  ";
+        stmt.execute(sql);
+
+        sql = "INSERT ColdCalling ([Date], [Time], PositiveFirstName, PositiveLastName)  VALUES ('07-20-09','05:15:00', 'CC', 'DD')  ";
+        stmt.execute(sql);
+    }
+}
Index: app/src/main/java/com/example/booksalesmanagement/bean/Book.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/bean/Book.kt b/app/src/main/java/com/example/booksalesmanagement/bean/Book.kt
new file mode 100644
--- /dev/null	(date 1716099076765)
+++ b/app/src/main/java/com/example/booksalesmanagement/bean/Book.kt	(date 1716099076765)
@@ -0,0 +1,30 @@
+package com.example.booksalesmanagement.bean
+
+import java.math.BigDecimal
+import java.sql.Timestamp
+import java.time.LocalDateTime
+
+
+/** Bean for book
+ *
+ * Primary Key：bookId、publisherId、author
+ * @param bookId 书籍id
+ * @param bookName 书籍名称
+ * @param publisherId 出版社id
+ * @param price 书籍价格
+ * @param author 作者
+ * @param bookType 书籍类型
+ * @param inventory 库存
+ * @param publicationDate 出版日期
+ */
+
+data class Book(
+    var bookId: Int,
+    var bookName: String,
+    var publisherId: Int,
+    var price: BigDecimal,
+    var author: String,
+    // var bookType: String,
+    var inventory: Int,
+    var publicationDate: Timestamp
+)
Index: app/libs/sqljdbc_11.2/chs/samples/adaptive/readLargeData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/adaptive/readLargeData.java b/app/libs/sqljdbc_11.2/chs/samples/adaptive/readLargeData.java
new file mode 100644
--- /dev/null	(date 1716042169791)
+++ b/app/libs/sqljdbc_11.2/chs/samples/adaptive/readLargeData.java	(date 1716042169791)
@@ -0,0 +1,85 @@
+/*=====================================================================
+File: 	 ReadLargeData.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to read the large data from a database and 
+         how to get the adaptive buffering mode. It also demonstrates
+         how to retrieve a large single-column value from a SQL Server 
+         database by using the getCharacterStream method.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.io.IOException;
+import java.io.Reader;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import com.microsoft.sqlserver.jdbc.SQLServerStatement;
+
+public class ReadLargeData {
+
+    public static void main(String[] args) {
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+        
+        // Create test data as an example.
+        StringBuffer buffer = new StringBuffer(4000);
+        for (int i = 0; i < 4000; i++)
+            buffer.append((char) ('A'));
+        
+        try (Connection con = DriverManager.getConnection(connectionUrl);
+                Statement stmt = con.createStatement();
+                PreparedStatement pstmt = con.prepareStatement("UPDATE Production.Document SET DocumentSummary = ? WHERE (DocumentID = 1)");) {
+
+            pstmt.setString(1, buffer.toString());
+            pstmt.executeUpdate();
+
+            // In adaptive mode, the application does not have to use a server cursor
+            // to avoid OutOfMemoryError when the SELECT statement produces very large
+            // results.
+
+            // Create and execute an SQL statement that returns some data.
+            String SQL = "SELECT Title, DocumentSummary FROM Production.Document";
+
+            // Display the response buffering mode.
+            SQLServerStatement SQLstmt = (SQLServerStatement) stmt;
+            System.out.println("Response buffering mode is: " + SQLstmt.getResponseBuffering());
+            SQLstmt.close();
+
+            // Get the updated data from the database and display it.
+            ResultSet rs = stmt.executeQuery(SQL);
+
+            while (rs.next()) {
+                Reader reader = rs.getCharacterStream(2);
+                if (reader != null) {
+                    char output[] = new char[40];
+                    while (reader.read(output) != -1) {
+                        // Do something with the chunk of the data that was
+                        // read.
+                    }
+
+                    System.out.println(rs.getString(1) + " has been accessed for the summary column.");
+                    // Close the stream.
+                    reader.close();
+                }
+            }
+        }
+        // Handle any errors that may have occurred.
+        catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: app/src/main/res/drawable/ic_home_black_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_home_black_24dp.xml b/app/src/main/res/drawable/ic_home_black_24dp.xml
new file mode 100644
--- /dev/null	(date 1716042169837)
+++ b/app/src/main/res/drawable/ic_home_black_24dp.xml	(date 1716042169837)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z" />
+</vector>
Index: app/src/main/res/drawable/ic_notifications_black_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_notifications_black_24dp.xml b/app/src/main/res/drawable/ic_notifications_black_24dp.xml
new file mode 100644
--- /dev/null	(date 1716042169838)
+++ b/app/src/main/res/drawable/ic_notifications_black_24dp.xml	(date 1716042169838)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.89,2 2,2zM18,16v-5c0,-3.07 -1.64,-5.64 -4.5,-6.32L13.5,4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.63,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2z" />
+</vector>
Index: app/libs/sqljdbc_11.2/chs/samples/adaptive/ExecuteStoredProcedures.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/adaptive/ExecuteStoredProcedures.java b/app/libs/sqljdbc_11.2/chs/samples/adaptive/ExecuteStoredProcedures.java
new file mode 100644
--- /dev/null	(date 1716042169791)
+++ b/app/libs/sqljdbc_11.2/chs/samples/adaptive/ExecuteStoredProcedures.java	(date 1716042169791)
@@ -0,0 +1,132 @@
+/*=====================================================================
+File: 	 ExecuteStoredProcedures.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to retrieve a large OUT parameter from 
+         a stored procedure and how to get the adaptive buffering mode.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.io.Reader;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import com.microsoft.sqlserver.jdbc.SQLServerCallableStatement;
+
+
+public class ExecuteStoredProcedures {
+
+    public static void main(String[] args) {
+
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+		try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement()) {
+
+			createTable(stmt);
+			createStoredProcedure(stmt);
+
+			// Create test data as an example.
+			StringBuffer buffer = new StringBuffer(4000);
+			for (int i = 0; i < 4000; i++)
+				buffer.append((char) ('A'));
+
+			try (PreparedStatement pstmt = con.prepareStatement(
+					"UPDATE Document_JDBC_Sample " + "SET DocumentSummary = ? WHERE (DocumentID = 1)")) {
+
+				pstmt.setString(1, buffer.toString());
+				pstmt.executeUpdate();
+			}
+
+			// Query test data by using a stored procedure.
+			try (SQLServerCallableStatement cstmt = (SQLServerCallableStatement) con
+					.prepareCall("{call GetLargeDataValue(?, ?, ?, ?)}")) {
+
+				cstmt.setInt(1, 1);
+				cstmt.registerOutParameter(2, java.sql.Types.INTEGER);
+				cstmt.registerOutParameter(3, java.sql.Types.CHAR);
+				cstmt.registerOutParameter(4, java.sql.Types.LONGVARCHAR);
+
+				// Display the response buffering mode.
+				System.out.println("Response buffering mode is: " + cstmt.getResponseBuffering());
+
+				cstmt.execute();
+				System.out.println("DocumentID: " + cstmt.getInt(2));
+				System.out.println("Document_Title: " + cstmt.getString(3));
+
+				try (Reader reader = cstmt.getCharacterStream(4)) {
+
+					// If your application needs to re-read any portion of the value,
+					// it must call the mark method on the InputStream or Reader to
+					// start buffering data that is to be re-read after a subsequent
+					// call to the reset method.
+					reader.mark(4000);
+
+					// Read the first half of data.
+					char output1[] = new char[2000];
+					reader.read(output1);
+					String stringOutput1 = new String(output1);
+
+					// Reset the stream.
+					reader.reset();
+
+					// Read all the data.
+					char output2[] = new char[4000];
+					reader.read(output2);
+					String stringOutput2 = new String(output2);
+
+					System.out.println("Document_Summary in half: " + stringOutput1);
+					System.out.println("Document_Summary: " + stringOutput2);
+				}
+			}
+		}
+        // Handle any errors that may have occurred.
+        catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void createStoredProcedure(Statement stmt) throws SQLException {
+        String outputProcedure = "GetLargeDataValue";
+
+        String sql = " IF EXISTS (select * from sysobjects where id = object_id(N'" + outputProcedure
+                + "') and OBJECTPROPERTY(id, N'IsProcedure') = 1)" + " DROP PROCEDURE " + outputProcedure;
+        stmt.execute(sql);
+
+        sql = "CREATE PROCEDURE " + outputProcedure + " @p0 int, @p1 int OUTPUT, @p2 char(50) OUTPUT, "
+                + "@p3 varchar(max) OUTPUT " + " AS" + " SELECT top 1 @p1=DocumentID, @p2=Title,"
+                + " @p3=DocumentSummary FROM Document_JDBC_Sample where DocumentID = @p0";
+
+        stmt.execute(sql);
+    }
+
+    private static void createTable(Statement stmt) throws SQLException {
+        stmt.execute("if exists (select * from sys.objects where name = 'Document_JDBC_Sample')"
+                + "drop table Document_JDBC_Sample");
+
+        String sql = "CREATE TABLE Document_JDBC_Sample(" + "[DocumentID] [int] NOT NULL identity,"
+                + "[Title] [char](50) NOT NULL," + "[DocumentSummary] [varchar](max) NULL)";
+
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample VALUES ('title1','summary1') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample VALUES ('title2','summary2') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample VALUES ('title3','summary3') ";
+        stmt.execute(sql);
+    }
+}
Index: app/libs/sqljdbc_11.2/chs/samples/adaptive/updateLargeData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/adaptive/updateLargeData.java b/app/libs/sqljdbc_11.2/chs/samples/adaptive/updateLargeData.java
new file mode 100644
--- /dev/null	(date 1716042169791)
+++ b/app/libs/sqljdbc_11.2/chs/samples/adaptive/updateLargeData.java	(date 1716042169791)
@@ -0,0 +1,106 @@
+/*=====================================================================
+File: 	 UpdateLargeData.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to update the large data in a database. 
+         It also demonstrates how to set the adaptive buffering mode 
+         explicitly for updatable result sets.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.io.Reader;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import com.microsoft.sqlserver.jdbc.SQLServerStatement;
+
+
+public class UpdateLargeData {
+
+    public static void main(String[] args) {
+
+    	// Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+        // Establish the connection.
+        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();
+                Statement stmt1 = con.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE);) {
+
+            createTable(stmt);
+
+            // Since the summaries could be large, we should make sure that
+            // the driver reads them incrementally from a database,
+            // even though a server cursor is used for the updatable result sets.
+
+            // The recommended way to access the Microsoft JDBC Driver for SQL Server
+            // specific methods is to use the JDBC 4.0 Wrapper functionality.
+            // The following code statement demonstrates how to use the
+            // Statement.isWrapperFor and Statement.unwrap methods
+            // to access the driver specific response buffering methods.
+
+            if (stmt.isWrapperFor(com.microsoft.sqlserver.jdbc.SQLServerStatement.class)) {
+                SQLServerStatement SQLstmt = stmt.unwrap(com.microsoft.sqlserver.jdbc.SQLServerStatement.class);
+
+                SQLstmt.setResponseBuffering("adaptive");
+                System.out.println("Response buffering mode has been set to " + SQLstmt.getResponseBuffering());
+            }
+
+            // Select all of the document summaries.
+            try (ResultSet rs = stmt1.executeQuery("SELECT Title, DocumentSummary FROM Document_JDBC_Sample")) {
+
+                // Update each document summary.
+                while (rs.next()) {
+
+                    // Retrieve the original document summary.
+                    try (Reader reader = rs.getCharacterStream("DocumentSummary")) {
+
+                        if (reader == null) {
+                            // Update the document summary.
+                            System.out.println("Updating " + rs.getString("Title"));
+                            rs.updateString("DocumentSummary", "Work in progress");
+                            rs.updateRow();
+                        }
+                    }
+                }
+            }
+        }
+        // Handle any errors that may have occurred.
+        catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void createTable(Statement stmt) throws SQLException {
+        stmt.execute("if exists (select * from sys.objects where name = 'Document_JDBC_Sample')"
+                + "drop table Document_JDBC_Sample");
+
+        String sql = "CREATE TABLE Document_JDBC_Sample (" + "[DocumentID] [int] NOT NULL identity,"
+                + "[Title] [char](50) NOT NULL," + "[DocumentSummary] [varchar](max) NULL)";
+
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample VALUES ('title1','summary1') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample (title) VALUES ('title2') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample (title) VALUES ('title3') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Document_JDBC_Sample VALUES ('title4','summary3') ";
+        stmt.execute(sql);
+    }
+}
Index: app/src/main/res/drawable/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_background.xml b/app/src/main/res/drawable/ic_launcher_background.xml
new file mode 100644
--- /dev/null	(date 1716042169837)
+++ b/app/src/main/res/drawable/ic_launcher_background.xml	(date 1716042169837)
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#3DDC84"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
Index: app/src/main/res/drawable/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_foreground.xml b/app/src/main/res/drawable/ic_launcher_foreground.xml
new file mode 100644
--- /dev/null	(date 1716042169837)
+++ b/app/src/main/res/drawable/ic_launcher_foreground.xml	(date 1716042169837)
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="85.84757"
+                android:endY="92.4963"
+                android:startX="42.9492"
+                android:startY="49.59793"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+</vector>
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/samples/datatypes/SqlXmlDataType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/datatypes/SqlXmlDataType.java b/app/libs/sqljdbc_11.2/chs/samples/datatypes/SqlXmlDataType.java
new file mode 100644
--- /dev/null	(date 1716042169796)
+++ b/app/libs/sqljdbc_11.2/chs/samples/datatypes/SqlXmlDataType.java	(date 1716042169796)
@@ -0,0 +1,258 @@
+/*=====================================================================
+File: 	 SqlXmlDataType.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to store XML data in a relational database, 
+         how to retrieve XML data from a database, and 
+         how to parse XML data with the SQLXML Java data type.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.io.IOException;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.SQLXML;
+import java.sql.Statement;
+
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.sax.SAXResult;
+import javax.xml.transform.sax.SAXSource;
+import javax.xml.transform.sax.SAXTransformerFactory;
+
+import org.xml.sax.Attributes;
+import org.xml.sax.ContentHandler;
+import org.xml.sax.Locator;
+import org.xml.sax.SAXException;
+import org.xml.sax.XMLReader;
+
+
+public class SqlXmlDataType {
+
+    public static void main(String[] args) {
+
+		// Create a variable for the connection string.
+		String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=<database>;username=<user>;password=<password>;";
+
+		// Establish the connection.
+		try (Connection con = DriverManager.getConnection(connectionUrl);
+				Statement stmt = con.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)) {
+
+			// Create initial sample data.
+			createSampleTables(stmt);
+
+			// The showGetters method demonstrates how to parse the data in the
+			// SQLXML object by using the SAX, ContentHandler and XMLReader.
+			showGetters(stmt);
+
+			// The showSetters method demonstrates how to set the xml column
+			// by using the SAX, ContentHandler, and ResultSet.
+			showSetters(con, stmt);
+
+			// The showTransformer method demonstrates how to get an XML data
+			// from one table and insert that XML data to another table
+			// by using the SAX and the Transformer.
+			showTransformer(con, stmt);
+		}
+        // Handle any errors that may have occurred.
+        catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void showGetters(Statement stmt) throws IOException, SAXException, SQLException {
+
+        // Create an instance of the custom content handler.
+        ExampleContentHandler myHandler = new ExampleContentHandler();
+
+        // Create and execute an SQL statement that returns a
+        // set of data.
+        String SQL = "SELECT * FROM TestTable1";
+
+        try (ResultSet rs = stmt.executeQuery(SQL)) {
+
+            rs.next();
+
+            SQLXML xmlSource = rs.getSQLXML("Col3");
+
+            // Send SAX events to the custom content handler.
+            SAXSource sxSource = xmlSource.getSource(SAXSource.class);
+            XMLReader xmlReader = sxSource.getXMLReader();
+            xmlReader.setContentHandler(myHandler);
+
+            System.out.println("showGetters method: Parse an XML data in TestTable1 => ");
+            xmlReader.parse(sxSource.getInputSource());
+        }
+    }
+
+    private static void showSetters(Connection con, Statement stmt) {
+
+        // Create and execute an SQL statement, retrieving an updatable result set.
+        String SQL = "SELECT * FROM TestTable1;";
+        try (ResultSet rs = stmt.executeQuery(SQL)) {
+
+            // Create an empty SQLXML object.
+            SQLXML sqlxml = con.createSQLXML();
+
+            // Set the result value from SAX events.
+            SAXResult sxResult = sqlxml.setResult(SAXResult.class);
+            ContentHandler myHandler = sxResult.getHandler();
+
+            // Set the XML elements and attributes into the result.
+            myHandler.startDocument();
+            myHandler.startElement(null, "contact", "contact", null);
+            myHandler.startElement(null, "name", "name", null);
+            myHandler.endElement(null, "name", "name");
+            myHandler.startElement(null, "phone", "phone", null);
+            myHandler.endElement(null, "phone", "phone");
+            myHandler.endElement(null, "contact", "contact");
+            myHandler.endDocument();
+
+            // Update the data in the result set.
+            rs.moveToInsertRow();
+            rs.updateString("Col2", "C");
+            rs.updateSQLXML("Col3", sqlxml);
+            rs.insertRow();
+
+            // Display the data.
+            System.out.println("showSetters method: Display data in TestTable1 => ");
+            while (rs.next()) {
+                System.out.println(rs.getString("Col1") + " : " + rs.getString("Col2"));
+                SQLXML xml = rs.getSQLXML("Col3");
+                System.out.println("XML column : " + xml.getString());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void showTransformer(Connection con, Statement stmt) throws Exception {
+
+        // Create and execute an SQL statement that returns a
+        // set of data.
+        String SQL = "SELECT * FROM TestTable1";
+        try (ResultSet rs = stmt.executeQuery(SQL)) {
+
+            rs.next();
+
+            // Get the value of the source SQLXML object from the database.
+            SQLXML xmlSource = rs.getSQLXML("Col3");
+
+            // Get a Source to read the XML data.
+            SAXSource sxSource = xmlSource.getSource(SAXSource.class);
+
+            // Create a destination SQLXML object without any data.
+            SQLXML xmlDest = con.createSQLXML();
+
+            // Get a Result to write the XML data.
+            SAXResult sxResult = xmlDest.setResult(SAXResult.class);
+
+            // Transform the Source to a Result by using the identity transform.
+            SAXTransformerFactory stf = (SAXTransformerFactory) TransformerFactory.newInstance();
+            Transformer identity = stf.newTransformer();
+            identity.transform(sxSource, sxResult);
+            // Insert the destination SQLXML object into the database.
+            try (PreparedStatement psmt = con
+                    .prepareStatement("INSERT INTO TestTable2" + " (Col2, Col3, Col4, Col5) VALUES (?, ?, ?, ?)")) {
+                psmt.setString(1, "A");
+                psmt.setString(2, "Test data");
+                psmt.setInt(3, 123);
+                psmt.setSQLXML(4, xmlDest);
+                psmt.execute();
+            }
+        }
+        // Execute the query and display the data.
+        SQL = "SELECT * FROM TestTable2";
+        try (ResultSet rs = stmt.executeQuery(SQL)) {
+
+            System.out.println("showTransformer method : Display data in TestTable2 => ");
+            while (rs.next()) {
+                System.out.println(rs.getString("Col1") + " : " + rs.getString("Col2"));
+                System.out.println(rs.getString("Col3") + " : " + rs.getInt("Col4"));
+
+                SQLXML xml = rs.getSQLXML("Col5");
+                System.out.println("XML column : " + xml.getString());
+            }
+        }
+    }
+
+    private static void createSampleTables(Statement stmt) throws SQLException {
+        // Drop the tables.
+        stmt.executeUpdate("if exists (select * from sys.objects where name = 'TestTable1')" + "drop table TestTable1");
+
+        stmt.executeUpdate("if exists (select * from sys.objects where name = 'TestTable2')" + "drop table TestTable2");
+
+        // Create empty tables.
+        stmt.execute("CREATE TABLE TestTable1 (Col1 int IDENTITY, Col2 char, Col3 xml)");
+        stmt.execute("CREATE TABLE TestTable2 (Col1 int IDENTITY, Col2 char, Col3 varchar(50), Col4 int, Col5 xml)");
+
+        // Insert two rows to the TestTable1.
+        String row1 = "<contact><name>Contact Name 1</name><phone>XXX-XXX-XXXX</phone></contact>";
+        String row2 = "<contact><name>Contact Name 2</name><phone>YYY-YYY-YYYY</phone></contact>";
+
+        stmt.executeUpdate("insert into TestTable1" + " (Col2, Col3) values('A', '" + row1 + "')");
+        stmt.executeUpdate("insert into TestTable1" + " (Col2, Col3) values('B', '" + row2 + "')");
+    }
+}
+
+/**
+ * Handles output for XML elements for the test.
+ */
+class ExampleContentHandler implements ContentHandler {
+
+    public void startElement(String namespaceURI, String localName, String qName, Attributes atts) throws SAXException {
+        System.out.println("startElement method: localName => " + localName);
+    }
+
+    public void characters(char[] text, int start, int length) throws SAXException {
+        System.out.println("characters method");
+    }
+
+    public void endElement(String namespaceURI, String localName, String qName) throws SAXException {
+        System.out.println("endElement method: localName => " + localName);
+    }
+
+    public void setDocumentLocator(Locator locator) {
+        System.out.println("setDocumentLocator method");
+    }
+
+    public void startDocument() throws SAXException {
+        System.out.println("startDocument method");
+    }
+
+    public void endDocument() throws SAXException {
+        System.out.println("endDocument method");
+    }
+
+    public void startPrefixMapping(String prefix, String uri) throws SAXException {
+        System.out.println("startPrefixMapping method: prefix => " + prefix);
+    }
+
+    public void endPrefixMapping(String prefix) throws SAXException {
+        System.out.println("endPrefixMapping method: prefix => " + prefix);
+    }
+
+    public void skippedEntity(String name) throws SAXException {
+        System.out.println("skippedEntity method: name => " + name);
+    }
+
+    public void ignorableWhitespace(char[] text, int start, int length) throws SAXException {
+        System.out.println("ignorableWhiteSpace method");
+    }
+
+    public void processingInstruction(String target, String data) throws SAXException {
+        System.out.println("processingInstruction method: target => " + target);
+    }
+}
Index: app/src/main/res/drawable/ic_dashboard_black_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_dashboard_black_24dp.xml b/app/src/main/res/drawable/ic_dashboard_black_24dp.xml
new file mode 100644
--- /dev/null	(date 1716042169836)
+++ b/app/src/main/res/drawable/ic_dashboard_black_24dp.xml	(date 1716042169836)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M3,13h8L11,3L3,3v10zM3,21h8v-6L3,15v6zM13,21h8L21,11h-8v10zM13,3v6h8L21,3h-8z" />
+</vector>
Index: app/libs/sqljdbc_11.2/chs/samples/datatypes/SpatialDataTypes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/datatypes/SpatialDataTypes.java b/app/libs/sqljdbc_11.2/chs/samples/datatypes/SpatialDataTypes.java
new file mode 100644
--- /dev/null	(date 1716042169795)
+++ b/app/libs/sqljdbc_11.2/chs/samples/datatypes/SpatialDataTypes.java	(date 1716042169795)
@@ -0,0 +1,75 @@
+/*=====================================================================
+File: 	 SpatialDataTypes.java
+Summary: This Microsoft JDBC Driver for SQL Server Sample application
+         demonstrates how to use prepared statement setter methods to
+		 set values for SQL Server Spatial Datatypes 'Geography' and 'Geometry'.
+		 It also demonstrates how to use result set getter methods to read
+		 and parse SQL Server Spatial data type values.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+import java.sql.Statement;
+import com.microsoft.sqlserver.jdbc.Geography;
+import com.microsoft.sqlserver.jdbc.Geometry;
+import com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement;
+import com.microsoft.sqlserver.jdbc.SQLServerResultSet;
+
+
+public class SpatialDataTypes {
+
+	private static String tableName = "SpatialDataTypesTable_JDBC_Sample";
+
+	public static void main(String[] args) {
+
+		// Create a variable for the connection string.
+		String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=<database>;user=<user>;password=<password>";
+		// Establish the connection.
+		try (Connection con = DriverManager.getConnection(connectionUrl);
+				Statement stmt = con.createStatement();) {
+			dropAndCreateTable(stmt);
+
+			// TODO: Implement Sample code
+			String geoWKT = "POINT(3 40 5 6)";
+			Geometry geomWKT = Geometry.STGeomFromText(geoWKT, 0);
+			Geography geogWKT = Geography.STGeomFromText(geoWKT, 4326);
+
+			try (SQLServerPreparedStatement pstmt = (SQLServerPreparedStatement) con
+					.prepareStatement(
+							"insert into " + tableName + " values (?, ?)");) {
+				pstmt.setGeometry(1, geomWKT);
+				pstmt.setGeography(2, geogWKT);
+				pstmt.execute();
+
+				SQLServerResultSet rs = (SQLServerResultSet) stmt
+						.executeQuery("select * from " + tableName);
+				rs.next();
+
+				System.out.println("Geometry data: " + rs.getGeometry(1));
+				System.out.println("Geography data: " + rs.getGeography(2));
+			}
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+	}
+
+	private static void dropAndCreateTable(Statement stmt) throws SQLException {
+		stmt.executeUpdate("if object_id('" + tableName + "','U') is not null"
+				+ " drop table " + tableName);
+
+		stmt.executeUpdate(
+				"Create table " + tableName + " (c1 geometry, c2 geography)");
+	}
+}
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew.bat b/gradlew.bat
new file mode 100644
--- /dev/null	(date 1716042169850)
+++ b/gradlew.bat	(date 1716042169850)
@@ -0,0 +1,89 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto execute
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: app/libs/sqljdbc_11.2/chs/samples/datatypes/BasicDataTypes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/datatypes/BasicDataTypes.java b/app/libs/sqljdbc_11.2/chs/samples/datatypes/BasicDataTypes.java
new file mode 100644
--- /dev/null	(date 1716042169794)
+++ b/app/libs/sqljdbc_11.2/chs/samples/datatypes/BasicDataTypes.java	(date 1716042169794)
@@ -0,0 +1,126 @@
+/*=====================================================================
+File: 	 BasicDataTypes.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to use result set getter methods to retrieve
+         basic SQL Server data type values, and how to use result set
+         update methods to update those values.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.Date;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.sql.Time;
+import java.sql.Timestamp;
+
+import com.microsoft.sqlserver.jdbc.SQLServerResultSet;
+
+import microsoft.sql.DateTimeOffset;
+
+public class BasicDataTypes {
+    private static final String tableName = "DataTypesTable";
+
+	public static void main(String[] args) {
+
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=<database>;user=<user>;password=<password>";
+
+        try (Connection con = DriverManager.getConnection(connectionUrl);
+                Statement stmt = con.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE);) {
+
+        	dropAndCreateTable(stmt);
+        	insertOriginalData(con);
+        	
+            String SQL = "SELECT * FROM " + tableName;
+            ResultSet rs = stmt.executeQuery(SQL);
+            rs.next();
+            displayRow("ORIGINAL DATA", rs);
+
+            // Update the data in the result set.
+            rs.updateString(2, "B");
+            rs.updateString(3, "Some updated text.");
+            rs.updateBoolean(4, true);
+            rs.updateDouble(5, 77.89);
+            rs.updateDouble(6, 1000.01);
+            long timeInMillis = System.currentTimeMillis();
+            Timestamp ts = new Timestamp(timeInMillis);
+            rs.updateTimestamp(7, ts);
+            rs.updateDate(8, new Date(timeInMillis));
+            rs.updateTime(9, new Time(timeInMillis));
+            rs.updateTimestamp(10, ts);
+
+            // -480 indicates GMT - 8:00 hrs
+            ((SQLServerResultSet) rs).updateDateTimeOffset(11, DateTimeOffset.valueOf(ts, -480));
+
+            rs.updateRow();
+
+            // Get the updated data from the database and display it.
+            rs = stmt.executeQuery(SQL);
+            rs.next();
+            displayRow("UPDATED DATA", rs);
+        }
+        // Handle any errors that may have occurred.
+        catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void displayRow(String title,
+            ResultSet rs) throws SQLException {
+        System.out.println(title);
+        System.out.println(rs.getInt(1) + " , " +                 // SQL integer type.
+                rs.getString(2) + " , " +                         // SQL char type.
+                rs.getString(3) + " , " +                         // SQL varchar type.
+                rs.getBoolean(4) + " , " +                        // SQL bit type.
+                rs.getDouble(5) + " , " +                         // SQL decimal type.
+                rs.getDouble(6) + " , " +                         // SQL money type.
+                rs.getTimestamp(7) + " , " +                      // SQL datetime type.
+                rs.getDate(8) + " , " +                           // SQL date type.
+                rs.getTime(9) + " , " +                           // SQL time type.
+                rs.getTimestamp(10) + " , " +                     // SQL datetime2 type.
+                ((SQLServerResultSet) rs).getDateTimeOffset(11)); // SQL datetimeoffset type.
+        System.out.println();
+    }
+
+    private static void dropAndCreateTable(Statement stmt) throws SQLException {
+        stmt.executeUpdate("if object_id('" + tableName + "','U') is not null" + " drop table " + tableName);
+
+        String sql = "create table " + tableName + " (" + "c1 int, " + "c2 char(20), " + "c3 varchar(20), " + "c4 bit, "
+                + "c5 decimal(10,5), " + "c6 money, " + "c7 datetime, " + "c8 date, " + "c9 time(7), "
+                + "c10 datetime2(7), " + "c11 datetimeoffset(7), " + ");";
+
+        stmt.execute(sql);
+    }
+
+    private static void insertOriginalData(Connection con) throws SQLException {
+        String sql = "insert into " + tableName + " values( " + "?,?,?,?,?,?,?,?,?,?,?" + ")";
+        try (PreparedStatement pstmt = con.prepareStatement(sql)) {
+            pstmt.setObject(1, 100);
+            pstmt.setObject(2, "original text");
+            pstmt.setObject(3, "original text");
+            pstmt.setObject(4, false);
+            pstmt.setObject(5, 12.34);
+            pstmt.setObject(6, 56.78);
+            pstmt.setObject(7, new java.util.Date(1453500034839L));
+            pstmt.setObject(8, new java.util.Date(1453500034839L));
+            pstmt.setObject(9, new java.util.Date(1453500034839L));
+            pstmt.setObject(10, new java.util.Date(1453500034839L));
+            pstmt.setObject(11, new java.util.Date(1453500034839L));
+            pstmt.execute();
+        }
+    }
+}
Index: app/libs/sqljdbc_11.2/chs/samples/resultsets/RetrieveResultSet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/resultsets/RetrieveResultSet.java b/app/libs/sqljdbc_11.2/chs/samples/resultsets/RetrieveResultSet.java
new file mode 100644
--- /dev/null	(date 1716042169797)
+++ b/app/libs/sqljdbc_11.2/chs/samples/resultsets/RetrieveResultSet.java	(date 1716042169797)
@@ -0,0 +1,80 @@
+/*=====================================================================
+File: 	 RetrieveResultSet.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to use a result set to retrieve a set of
+         data from a SQL Server database.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+public class RetrieveResultSet {
+
+    public static void main(String[] args) {
+
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();) {
+            createTable(stmt);
+			String SQL = "SELECT * FROM Production.Product;";
+            ResultSet rs = stmt.executeQuery(SQL);
+            displayRow("PRODUCTS", rs);
+        }
+        // Handle any errors that may have occurred.
+        catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void displayRow(String title,
+            ResultSet rs) throws SQLException {
+        System.out.println(title);
+        while (rs.next()) {
+            System.out.println(rs.getString("ProductNumber") + " : " + rs.getString("Name"));
+        }
+    }
+
+    private static void createTable(Statement stmt) throws SQLException {
+        stmt.execute("if exists (select * from sys.objects where name = 'Product_JDBC_Sample')"
+                + "drop table Product_JDBC_Sample");
+
+        String sql = "CREATE TABLE [Product_JDBC_Sample](" + "[ProductID] [int] IDENTITY(1,1) NOT NULL,"
+                + "[Name] [varchar](30) NOT NULL," + "[ProductNumber] [nvarchar](25) NOT NULL,"
+                + "[MakeFlag] [bit] NOT NULL," + "[FinishedGoodsFlag] [bit] NOT NULL," + "[Color] [nvarchar](15) NULL,"
+                + "[SafetyStockLevel] [smallint] NOT NULL," + "[ReorderPoint] [smallint] NOT NULL,"
+                + "[StandardCost] [money] NOT NULL," + "[ListPrice] [money] NOT NULL," + "[Size] [nvarchar](5) NULL,"
+                + "[SizeUnitMeasureCode] [nchar](3) NULL," + "[WeightUnitMeasureCode] [nchar](3) NULL,"
+                + "[Weight] [decimal](8, 2) NULL," + "[DaysToManufacture] [int] NOT NULL,"
+                + "[ProductLine] [nchar](2) NULL," + "[Class] [nchar](2) NULL," + "[Style] [nchar](2) NULL,"
+                + "[ProductSubcategoryID] [int] NULL," + "[ProductModelID] [int] NULL,"
+                + "[SellStartDate] [datetime] NOT NULL," + "[SellEndDate] [datetime] NULL,"
+                + "[DiscontinuedDate] [datetime] NULL," + "[rowguid] [uniqueidentifier] ROWGUIDCOL  NOT NULL,"
+                + "[ModifiedDate] [datetime] NOT NULL,)";
+
+        stmt.execute(sql);
+
+        sql = "INSERT Product_JDBC_Sample VALUES ('Adjustable Time','AR-5381','0','0',NULL,'1000','750','0.00','0.00',NULL,NULL,NULL,NULL,'0',NULL,NULL,NULL,NULL,NULL,'2008-04-30 00:00:00.000',NULL,NULL,'694215B7-08F7-4C0D-ACB1-D734BA44C0C8','2014-02-08 10:01:36.827') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Product_JDBC_Sample VALUES ('ML Bottom Bracket','BB-8107','0','0',NULL,'1000','750','0.00','0.00',NULL,NULL,NULL,NULL,'0',NULL,NULL,NULL,NULL,NULL,'2008-04-30 00:00:00.000',NULL,NULL,'694215B7-08F7-4C0D-ACB1-D734BA44C0C8','2014-02-08 10:01:36.827') ";
+        stmt.execute(sql);
+
+        sql = "INSERT Product_JDBC_Sample VALUES ('Mountain-500 Black, 44','BK-M18B-44','0','0',NULL,'1000','750','0.00','0.00',NULL,NULL,NULL,NULL,'0',NULL,NULL,NULL,NULL,NULL,'2008-04-30 00:00:00.000',NULL,NULL,'694215B7-08F7-4C0D-ACB1-D734BA44C0C8','2014-02-08 10:01:36.827') ";
+        stmt.execute(sql);
+    }
+}
Index: app/src/main/res/navigation/mobile_navigation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/mobile_navigation.xml b/app/src/main/res/navigation/mobile_navigation.xml
new file mode 100644
--- /dev/null	(date 1716042169844)
+++ b/app/src/main/res/navigation/mobile_navigation.xml	(date 1716042169844)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/mobile_navigation"
+    app:startDestination="@+id/navigation_home">
+
+    <fragment
+        android:id="@+id/navigation_home"
+        android:name="com.example.booksalesmanagement.fragment.home.HomeFragment"
+        android:label="@string/title_home"
+        tools:layout="@layout/fragment_home" />
+
+    <fragment
+        android:id="@+id/navigation_dashboard"
+        android:name="com.example.booksalesmanagement.fragment.dashboard.DashboardFragment"
+        android:label="@string/title_dashboard"
+        tools:layout="@layout/fragment_dashboard" />
+
+    <fragment
+        android:id="@+id/navigation_notifications"
+        android:name="com.example.booksalesmanagement.fragment.notifications.NotificationsFragment"
+        android:label="@string/title_notifications"
+        tools:layout="@layout/fragment_notifications" />
+</navigation>
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1716042169735)
+++ b/.gitignore	(date 1716042169735)
@@ -0,0 +1,106 @@
+<<<<<<< HEAD
+# Built application files
+*.apk
+*.aar
+*.ap_
+*.aab
+
+# Files for the ART/Dalvik VM
+*.dex
+
+# Java class files
+*.class
+
+# Generated files
+bin/
+gen/
+out/
+#  Uncomment the following line in case you need and you don't have the release build type files in your app
+# release/
+
+# Gradle files
+.gradle/
+build/
+
+# Local configuration file (sdk path, etc)
+local.properties
+
+# Proguard folder generated by Eclipse
+proguard/
+
+# Log Files
+*.log
+
+# Android Studio Navigation editor temp files
+.navigation/
+
+# Android Studio captures folder
+captures/
+
+# IntelliJ
+*.iml
+.idea/workspace.xml
+.idea/tasks.xml
+.idea/gradle.xml
+.idea/assetWizardSettings.xml
+.idea/dictionaries
+.idea/libraries
+# Android Studio 3 in .gitignore file.
+.idea/caches
+.idea/modules.xml
+# Comment next line if keeping position of elements in Navigation Editor is relevant for you
+.idea/navEditor.xml
+
+# Keystore files
+# Uncomment the following lines if you do not want to check your keystore files in.
+#*.jks
+#*.keystore
+
+# External native build folder generated in Android Studio 2.2 and later
+.externalNativeBuild
+.cxx/
+
+# Google Services (e.g. APIs or Firebase)
+# google-services.json
+
+# Freeline
+freeline.py
+freeline/
+freeline_project_description.json
+
+# fastlane
+fastlane/report.xml
+fastlane/Preview.html
+fastlane/screenshots
+fastlane/test_output
+fastlane/readme.md
+
+# Version control
+vcs.xml
+
+# lint
+lint/intermediates/
+lint/generated/
+lint/outputs/
+lint/tmp/
+# lint/reports/
+
+# Android Profiling
+*.hprof
+=======
+*.iml
+.gradle
+/local.properties
+/.idea/caches
+/.idea/libraries
+/.idea/modules.xml
+/.idea/workspace.xml
+/.idea/navEditor.xml
+/.idea/assetWizardSettings.xml
+.DS_Store
+/build
+/captures
+.externalNativeBuild
+.cxx
+local.properties
+>>>>>>> eb692a6 (text)
Index: app/src/main/java/com/example/booksalesmanagement/imagetext/OssManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/imagetext/OssManager.java b/app/src/main/java/com/example/booksalesmanagement/imagetext/OssManager.java
new file mode 100644
--- /dev/null	(date 1716042169811)
+++ b/app/src/main/java/com/example/booksalesmanagement/imagetext/OssManager.java	(date 1716042169811)
@@ -0,0 +1,340 @@
+package com.example.booksalesmanagement.imagetext;
+
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.util.Log;
+
+import com.alibaba.sdk.android.oss.ClientException;
+import com.alibaba.sdk.android.oss.OSS;
+import com.alibaba.sdk.android.oss.OSSClient;
+import com.alibaba.sdk.android.oss.ServiceException;
+import com.alibaba.sdk.android.oss.callback.OSSCompletedCallback;
+import com.alibaba.sdk.android.oss.common.auth.OSSCredentialProvider;
+import com.alibaba.sdk.android.oss.common.auth.OSSPlainTextAKSKCredentialProvider;
+import com.alibaba.sdk.android.oss.common.auth.OSSStsTokenCredentialProvider;
+import com.alibaba.sdk.android.oss.internal.OSSAsyncTask;
+import com.alibaba.sdk.android.oss.model.GetObjectRequest;
+import com.alibaba.sdk.android.oss.model.GetObjectResult;
+import com.alibaba.sdk.android.oss.model.PutObjectRequest;
+import com.alibaba.sdk.android.oss.model.PutObjectResult;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
+public class OssManager {
+    /**
+     * Context
+     */
+    private Context mContext;
+    /**
+     * bucket name
+     */
+    private String mBucketName;
+    /**
+     * access key id
+     */
+    private String mAccessKeyId;
+    /**
+     * access key secret
+     */
+    private String mAccessKeySecret;
+    /**
+     * end point url
+     */
+    private String mEndPoint;
+    /**
+     * file name or file dir
+     */
+    private String mObjectKey;
+    /**
+     * local file path
+     */
+    private String mLocalFilePath;
+    /**
+     * down image return bitmap
+     */
+    private Bitmap downImageBitmap;
+
+    /**
+     * push file progress listener
+     */
+    private OnPushProgressListener onPushProgressListener;
+    /**
+     * push file state
+     */
+    private OnPushStateListener onPushStateListener;
+
+    private OnGetStateListener onGetStateListener;
+    /**
+     * OSS async task
+     */
+    private OSSAsyncTask mOSSAsyncTask;
+
+
+
+
+    private OssManager(Context context, String bucketName, String accessKeyId, String accessKeySecret, String endPoint, String objectKey, String localFilePath) {
+        this.mContext = context;
+        this.mBucketName = bucketName;
+        this.mAccessKeyId = accessKeyId;
+        this.mAccessKeySecret = accessKeySecret;
+        this.mEndPoint = endPoint;
+        this.mObjectKey = objectKey;
+        this.mLocalFilePath = localFilePath;
+    }
+
+    /**
+     * set push file progress listener,pushing call back onProgress(PutObjectRequest request, long currentSize, long totalSize)
+     *
+     * @param listener push file progress listener
+     */
+    public void setPushProgressListener(OnPushProgressListener listener) {
+        this.onPushProgressListener = listener;
+    }
+
+    /**
+     * set push file state listener,push success call back onSuccess(PutObjectRequest request, PutObjectResult result)
+     * push failed call back onFailure(PutObjectRequest request, ClientException clientExcepion, ServiceException serviceException)
+     *
+     * @param listener push file state listener
+     */
+    public void setPushStateListener(OnPushStateListener listener) {
+        this.onPushStateListener = listener;
+    }
+
+    public void setGetStateListener(OnGetStateListener  listener) {
+        this.onGetStateListener = listener;
+    }
+
+    /**
+     * push file to oss,this method is async task
+     */
+    public void push() {
+        OSSCredentialProvider ossCredentialProvider = new OSSPlainTextAKSKCredentialProvider(mAccessKeyId, mAccessKeySecret);
+        OSS oss = new OSSClient(mContext.getApplicationContext(), mEndPoint, ossCredentialProvider);
+        onPush(oss);
+    }
+
+    /**
+     * push file to oss,this method is async task with securityToken
+     */
+    public void push(String accessKeyId, String accessKeySecret, String securityToken) {
+        if (accessKeyId == null || accessKeySecret == null || securityToken == null) return;
+        OSSCredentialProvider credentialProvider = new OSSStsTokenCredentialProvider(accessKeyId, accessKeySecret, securityToken);
+        OSS oss = new OSSClient(mContext.getApplicationContext(), mEndPoint, credentialProvider);
+        onPush(oss);
+    }
+
+    /**
+     * push
+     * @param oss OSS
+     */
+    private void onPush(OSS oss) {
+        PutObjectRequest put = new PutObjectRequest(mBucketName, mObjectKey, mLocalFilePath);
+        // 异步上传时可以设置进度回调。
+        put.setProgressCallback((request, currentSize, totalSize) -> {
+            Log.d("currentSize = " + currentSize, "totalSize = " + totalSize);
+            if (onPushProgressListener != null) {
+                onPushProgressListener.onProgress(request, currentSize, totalSize);
+            }
+        });
+
+        mOSSAsyncTask = oss.asyncPutObject(put, new OSSCompletedCallback<PutObjectRequest, PutObjectResult>() {
+            @Override
+            public void onSuccess(PutObjectRequest request, PutObjectResult result) {
+                Log.d("PutObject", "UploadSuccess");
+                Log.d("ETag", result.getETag());
+                Log.d("RequestId", result.getRequestId());
+                if (onPushStateListener != null) {
+                    onPushStateListener.onSuccess(request, result);
+                }
+            }
+
+            @Override
+            public void onFailure(PutObjectRequest request, ClientException clientException, ServiceException serviceException) {
+                // 请求异常。
+                if (clientException != null) {
+                    // 本地异常，如网络异常等。
+                    Log.e("TAG",clientException.getMessage());
+                }
+                if (serviceException != null) {
+                    // 服务异常。
+                    Log.e("ErrorCode", serviceException.getErrorCode());
+                    Log.e("RequestId", serviceException.getRequestId());
+                    Log.e("HostId", serviceException.getHostId());
+                    Log.e("RawMessage", serviceException.getRawMessage());
+
+                }
+
+                if (onPushStateListener != null) {
+                    onPushStateListener.onFailure(request, clientException, serviceException);
+                }
+            }
+        });
+    }
+
+    /**
+     * get file to oss,this method is async task
+     */
+    public void getObject() {
+        OSSCredentialProvider ossCredentialProvider = new OSSPlainTextAKSKCredentialProvider(mAccessKeyId, mAccessKeySecret);
+        OSS oss = new OSSClient(mContext.getApplicationContext(), mEndPoint, ossCredentialProvider);
+        onGet(oss);
+    }
+
+    /**
+     * onGet
+     * @param oss OSS
+     */
+    private void onGet(OSS oss) {
+        // 构造下载文件请求。
+        //GetObjectRequest get = new GetObjectRequest("<bucketName>", "<objectName>");
+        GetObjectRequest get = new GetObjectRequest(mBucketName, mObjectKey);
+
+        mOSSAsyncTask = oss.asyncGetObject(get, new OSSCompletedCallback<GetObjectRequest, GetObjectResult>() {
+            @Override
+            // GetObject请求成功，返回GetObjectResult。GetObjectResult包含一个输入流的实例。您需要自行处理返回的输入流。
+            public void onSuccess(GetObjectRequest request, GetObjectResult result) {
+                // 请求成功。
+                Log.d("asyncGetObject", "DownloadSuccess");
+                Log.d("Content-Length", "" + result.getContentLength());
+
+                InputStream inputStream = result.getObjectContent();
+                byte[] buffer = new byte[2048];
+                int len;
+
+                try {
+                    // 创建临时文件来保存下载的图片
+                    File file = File.createTempFile("temp_image", ".jpg",
+                            mContext.getApplicationContext().getCacheDir());
+                    FileOutputStream outputStream = new FileOutputStream(file);
+
+                    // 将输入流中的数据写入到临时文件中
+                    while ((len = inputStream.read(buffer)) != -1) {
+                        outputStream.write(buffer, 0, len);
+                    }
+                    outputStream.close();
+
+                    // 将临时文件加载为 Bitmap 对象
+                    Bitmap bitmap = BitmapFactory.decodeFile(file.getAbsolutePath());
+
+                    downImageBitmap = bitmap;
+
+                    Log.d("downImageBitmap", "downImageBitmapSuccess");
+
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+                if (onGetStateListener != null) {
+                    onGetStateListener.onSuccess(request, result);
+                }
+            }
+
+            @Override
+            public void onFailure(GetObjectRequest request, ClientException clientException, ServiceException serviceException) {
+                // 请求异常。
+                if (clientException != null) {
+                    // 本地异常，如网络异常等。
+                    clientException.printStackTrace();
+                }
+                if (serviceException != null) {
+                    // 服务异常。
+                    Log.e("ErrorCode", serviceException.getErrorCode());
+                    Log.e("RequestId", serviceException.getRequestId());
+                    Log.e("HostId", serviceException.getHostId());
+                    Log.e("RawMessage", serviceException.getRawMessage());
+                }
+                if (onGetStateListener != null) {
+                    onGetStateListener.onFailure(request, clientException, serviceException);
+                }
+            }
+        });
+    }
+
+    /**
+     * cancel file push task
+     */
+    public void cancelPushOrGet() {
+        if (mOSSAsyncTask != null && !mOSSAsyncTask.isCanceled() && !mOSSAsyncTask.isCompleted()) {
+            mOSSAsyncTask.cancel();
+        }
+    }
+
+    /**
+     * OssManager builder,init params
+     */
+    public static class Builder {
+
+        private Context context;
+        private String bucketName;
+        private String accessKeyId;
+        private String accessKeySecret;
+        private String endPoint;
+        private String objectKey;
+        private String localFilePath;
+
+        public Builder(Context context) {
+            this.context = context;
+        }
+
+        public Builder bucketName(String bucketName) {
+            this.bucketName = bucketName;
+            return this;
+        }
+
+        public Builder accessKeyId(String accessKeyId) {
+            this.accessKeyId = accessKeyId;
+            return this;
+        }
+
+        public Builder accessKeySecret(String accessKeySecret) {
+            this.accessKeySecret = accessKeySecret;
+            return this;
+        }
+
+        public Builder endPoint(String endPint) {
+            this.endPoint = endPint;
+            return this;
+        }
+
+        public Builder objectKey(String objectKey) {
+            this.objectKey = objectKey;
+            return this;
+        }
+
+        public Builder localFilePath(String localFilePath) {
+            this.localFilePath = localFilePath;
+            return this;
+        }
+
+        public OssManager build() {
+            return new OssManager(context, bucketName, accessKeyId, accessKeySecret, endPoint, objectKey, localFilePath);
+        }
+    }
+
+    public interface OnPushProgressListener {
+        void onProgress(PutObjectRequest request, long currentSize, long totalSize);
+    }
+
+    public interface OnPushStateListener {
+        void onSuccess(PutObjectRequest request, PutObjectResult result);
+
+        void onFailure(PutObjectRequest request, ClientException clientException, ServiceException serviceException);
+    }
+
+    public interface OnGetStateListener {
+        void onSuccess(GetObjectRequest request, GetObjectResult result);
+
+        void onFailure(GetObjectRequest  request, ClientException clientException, ServiceException serviceException);
+    }
+
+    public Bitmap getDownImageBitmap() {
+        return downImageBitmap;
+    }
+}
+
+
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
new file mode 100644
--- /dev/null	(date 1716042169848)
+++ b/gradle.properties	(date 1716042169848)
@@ -0,0 +1,25 @@
+# Project-wide Gradle settings.
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+# AndroidX package structure to make it clearer which packages are bundled with the
+# Android operating system, and which are packaged with your app's APK
+# https://developer.android.com/topic/libraries/support-library/androidx-rn
+android.useAndroidX=true
+# Kotlin code style for this project: "official" or "obsolete":
+kotlin.code.style=official
+# Enables namespacing of each library's R class so that its R class includes only the
+# resources declared in the library itself and none from the library's dependencies,
+# thereby reducing the size of the R class for that library
+android.nonTransitiveRClass=true
+
+android.enableJetifier=true
Index: app/libs/sqljdbc_11.2/chs/samples/resultsets/CacheResultSet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/resultsets/CacheResultSet.java b/app/libs/sqljdbc_11.2/chs/samples/resultsets/CacheResultSet.java
new file mode 100644
--- /dev/null	(date 1716042169797)
+++ b/app/libs/sqljdbc_11.2/chs/samples/resultsets/CacheResultSet.java	(date 1716042169797)
@@ -0,0 +1,89 @@
+/*=====================================================================
+File: 	 CacheResultSet.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to use a result set to retrieve a large set
+         of data from a SQL Server database. In addition, it
+         demonstrates how to control the amount of data that is fetched
+         from the database and cached on the client.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.util.ArrayList;
+
+import com.microsoft.sqlserver.jdbc.SQLServerResultSet;
+
+public class CacheResultSet {
+
+    @SuppressWarnings("serial")
+	public static void main(String[] args) {
+
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+        try (Connection con = DriverManager.getConnection(connectionUrl);
+                Statement stmt = con.createStatement(SQLServerResultSet.TYPE_SS_SERVER_CURSOR_FORWARD_ONLY, SQLServerResultSet.CONCUR_READ_ONLY);) {
+
+            String SQL = "SELECT * FROM Sales.SalesOrderDetail;";
+
+            for (int n : new ArrayList<Integer>() {
+                {
+                    add(1);
+                    add(10);
+                    add(100);
+                    add(1000);
+                    add(0);
+                }
+            }) {
+                // Perform a fetch for every nth row in the result set.
+                try (ResultSet rs = stmt.executeQuery(SQL)) {
+                    timerTest(n, rs);
+                }
+            }
+        }
+        // Handle any errors that may have occurred.
+        catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void timerTest(int fetchSize,
+            ResultSet rs) throws SQLException {
+
+        // Declare the variables for tracking the row count and elapsed time.
+        int rowCount = 0;
+        long startTime = 0;
+        long stopTime = 0;
+        long runTime = 0;
+
+        // Set the fetch size then iterate through the result set to
+        // cache the data locally.
+        rs.setFetchSize(fetchSize);
+        startTime = System.currentTimeMillis();
+        while (rs.next()) {
+            rowCount++;
+        }
+        stopTime = System.currentTimeMillis();
+        runTime = stopTime - startTime;
+
+        // Display the results of the timer test.
+        System.out.println("FETCH SIZE: " + rs.getFetchSize());
+        System.out.println("ROWS PROCESSED: " + rowCount);
+        System.out.println("TIME TO EXECUTE: " + runTime);
+        System.out.println();
+    }
+}
Index: app/libs/sqljdbc_11.2/chs/samples/resultsets/UpdateResultSet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/resultsets/UpdateResultSet.java b/app/libs/sqljdbc_11.2/chs/samples/resultsets/UpdateResultSet.java
new file mode 100644
--- /dev/null	(date 1716042169797)
+++ b/app/libs/sqljdbc_11.2/chs/samples/resultsets/UpdateResultSet.java	(date 1716042169797)
@@ -0,0 +1,79 @@
+/*=====================================================================
+File: 	 UpdateResultSet.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to use an updateable result set to insert,
+         update, and delete a row of data in a SQL Server database.
+----------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+public class UpdateResultSet {
+
+    public static void main(String[] args) {
+
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+        try (Connection con = DriverManager.getConnection(connectionUrl);
+                Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);) {
+
+            // Create and execute an SQL statement, retrieving an updateable result set.
+            String SQL = "SELECT * FROM HumanResources.Department;";
+            ResultSet rs = stmt.executeQuery(SQL);
+
+            // Insert a row of data.
+            rs.moveToInsertRow();
+            rs.updateString("Name", "Accounting");
+            rs.updateString("GroupName", "Executive General and Administration");
+            rs.updateString("ModifiedDate", "08/01/2006");
+            rs.insertRow();
+
+            // Retrieve the inserted row of data and display it.
+            SQL = "SELECT * FROM HumanResources.Department WHERE Name = 'Accounting';";
+            rs = stmt.executeQuery(SQL);
+            displayRow("ADDED ROW", rs);
+
+            // Update the row of data.
+            rs.first();
+            rs.updateString("GroupName", "Finance");
+            rs.updateRow();
+
+            // Retrieve the updated row of data and display it.
+            rs = stmt.executeQuery(SQL);
+            displayRow("UPDATED ROW", rs);
+
+            // Delete the row of data.
+            rs.first();
+            rs.deleteRow();
+            System.out.println("ROW DELETED");
+        }
+        // Handle any errors that may have occurred.
+        catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private static void displayRow(String title,
+            ResultSet rs) throws SQLException {
+        System.out.println(title);
+        while (rs.next()) {
+            System.out.println(rs.getString("Name") + " : " + rs.getString("GroupName"));
+            System.out.println();
+        }
+    }
+}
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
new file mode 100644
--- /dev/null	(date 1716042169848)
+++ b/build.gradle.kts	(date 1716042169848)
@@ -0,0 +1,5 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+plugins {
+    id("com.android.application") version "8.1.0" apply false
+    id("org.jetbrains.kotlin.android") version "1.8.0" apply false
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/utils/LogUtil.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/utils/LogUtil.kt b/app/src/main/java/com/example/booksalesmanagement/utils/LogUtil.kt
new file mode 100644
--- /dev/null	(date 1716042169811)
+++ b/app/src/main/java/com/example/booksalesmanagement/utils/LogUtil.kt	(date 1716042169811)
@@ -0,0 +1,37 @@
+package com.example.booksalesmanagement.utils
+
+import android.util.Log
+
+object LogUtil {
+    private const val VERBOSE = 1
+    private const val DEBUG = 2
+    private const val INFO = 3
+    private const val WARN = 4
+    private const val ERROR = 5
+    private var level = VERBOSE
+    fun v(tag: String, msg: String) {
+        if (level <= VERBOSE) {
+            Log.v(tag, msg)
+        }
+    }
+    fun d(tag: String, msg: String) {
+        if (level <= DEBUG) {
+            Log.d(tag, msg)
+        }
+    }
+    fun i(tag: String, msg: String) {
+        if (level <= INFO) {
+            Log.i(tag, msg)
+        }
+    }
+    fun w(tag: String, msg: String) {
+        if (level <= WARN) {
+            Log.w(tag, msg)
+        }
+    }
+    fun e(tag: String, msg: String) {
+        if (level <= ERROR) {
+            Log.e(tag, msg)
+        }
+    }
+}
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/samples/connections/ConnectDataSource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/connections/ConnectDataSource.java b/app/libs/sqljdbc_11.2/chs/samples/connections/ConnectDataSource.java
new file mode 100644
--- /dev/null	(date 1716042169793)
+++ b/app/libs/sqljdbc_11.2/chs/samples/connections/ConnectDataSource.java	(date 1716042169793)
@@ -0,0 +1,56 @@
+/*=====================================================================
+File: 	 ConnectDataSource.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to connect to a SQL Server database by 
+	     using a data source object.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.CallableStatement;
+import java.sql.Connection;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+
+import com.microsoft.sqlserver.jdbc.SQLServerDataSource;
+
+public class ConnectDataSource {
+
+    public static void main(String[] args) {
+
+        // Create datasource.
+        SQLServerDataSource ds = new SQLServerDataSource();
+        ds.setUser("<user>");
+        ds.setPassword("<password>");
+        ds.setServerName("<server>");
+        ds.setPortNumber(Integer.parseInt("<port>"));
+        ds.setDatabaseName("AdventureWorks");
+
+        try (Connection con = ds.getConnection();
+                CallableStatement cstmt = con.prepareCall("{call dbo.uspGetEmployeeManagers(?)}");) {
+            // Execute a stored procedure that returns some data.
+            cstmt.setInt(1, 50);
+            ResultSet rs = cstmt.executeQuery();
+
+            // Iterate through the data in the result set and display it.
+            while (rs.next()) {
+                System.out.println("EMPLOYEE: " + rs.getString("LastName") + ", " + rs.getString("FirstName"));
+                System.out.println("MANAGER: " + rs.getString("ManagerLastName") + ", " + rs.getString("ManagerFirstName"));
+                System.out.println();
+            }
+        }
+        // Handle any errors that may have occurred.
+        catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew b/gradlew
new file mode 100644
--- /dev/null	(date 1716042169850)
+++ b/gradlew	(date 1716042169850)
@@ -0,0 +1,185 @@
+#!/usr/bin/env sh
+
+#
+# Copyright 2015 the original author or authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn () {
+    echo "$*"
+}
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
+esac
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=`expr $i + 1`
+    done
+    case $i in
+        0) set -- ;;
+        1) set -- "$args0" ;;
+        2) set -- "$args0" "$args1" ;;
+        3) set -- "$args0" "$args1" "$args2" ;;
+        4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
+}
+APP_ARGS=`save "$@"`
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+exec "$JAVACMD" "$@"
Index: app/libs/sqljdbc_11.2/chs/samples/connections/ConnectURL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/connections/ConnectURL.java b/app/libs/sqljdbc_11.2/chs/samples/connections/ConnectURL.java
new file mode 100644
--- /dev/null	(date 1716042169793)
+++ b/app/libs/sqljdbc_11.2/chs/samples/connections/ConnectURL.java	(date 1716042169793)
@@ -0,0 +1,46 @@
+/*=====================================================================
+File: 	 ConnectURL.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to connect to a SQL Server database by using 
+		 a connection URL. It also demonstrates how to retrieve data 
+		 from a SQL Server database by using an SQL statement.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+public class ConnectURL {
+    public static void main(String[] args) {
+
+        // Create a variable for the connection string.
+        String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=AdventureWorks;user=<user>;password=<password>";
+
+        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement();) {
+            String SQL = "SELECT TOP 10 * FROM Person.Contact";
+            ResultSet rs = stmt.executeQuery(SQL);
+
+            // Iterate through the data in the result set and display it.
+            while (rs.next()) {
+                System.out.println(rs.getString("FirstName") + " " + rs.getString("LastName"));
+            }
+        }
+        // Handle any errors that may have occurred.
+        catch (SQLException e) {
+            e.printStackTrace();
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/dao/BookDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/dao/BookDao.kt b/app/src/main/java/com/example/booksalesmanagement/dao/BookDao.kt
new file mode 100644
--- /dev/null	(date 1716099307174)
+++ b/app/src/main/java/com/example/booksalesmanagement/dao/BookDao.kt	(date 1716099307174)
@@ -0,0 +1,75 @@
+package com.example.booksalesmanagement.dao
+
+import android.util.Log
+import com.example.booksalesmanagement.bean.Book
+import com.example.booksalesmanagement.database.ConnectionSqlServer
+import java.lang.StringBuilder
+import java.sql.Connection
+import java.sql.ResultSet
+import java.sql.SQLException
+import java.sql.Statement
+import java.sql.Timestamp
+import java.time.LocalDateTime
+
+object BookDao {
+    fun insert(book: Book) {
+
+    }
+
+    private fun Timestamp.toLocalDateTime(): LocalDateTime {
+        return this.toLocalDateTime()
+    }
+
+    fun queryAll():ArrayList<Book> {
+        var bookList = ArrayList<Book>()
+        var conn: Connection? = null
+        var stmt: Statement? = null
+        var resultSet: ResultSet? = null
+
+        try {
+            conn = ConnectionSqlServer.getConnection("BookSalesdb")
+            stmt = conn!!.createStatement()
+            val sql =
+                "SELECT * FROM Book"  // 注意使用正确的表名和架构前缀
+            resultSet = stmt.executeQuery(sql)
+
+            while (resultSet.next()) {
+                val bookId = resultSet.getInt("book_id")
+                val bookName = resultSet.getString("bookname")
+                val publisherId = resultSet.getInt("publisher_id")
+                val price = resultSet.getBigDecimal("price")
+                val author = resultSet.getString("author")
+                val inventory = resultSet.getInt("inventory")
+                val publicationDate =resultSet.getTimestamp("publication_date")
+
+                val book = Book(bookId, bookName, publisherId, price, author, inventory, publicationDate)
+                //val sc = SC(Sno, Cno, Score)
+                //SC.add(sc)
+                bookList.add(book)
+            }
+            val sb = StringBuilder()
+            for (book in bookList) {
+                sb.append("图书编号：" + book.bookId)
+                sb.append("图书名称：" + book.bookName)
+                sb.append("出版社编号：" + book.publisherId)
+                sb.append("作者：" + book.author)
+                sb.append("价格：" + book.price)
+                sb.append("库存：" + book.inventory)
+                sb.append("出版日期：" + book.publicationDate)
+                sb.append("\n")
+            }
+            Log.e("Dao", sb.toString())
+
+        } catch (ex: SQLException) {
+            ex.printStackTrace()
+        } finally {
+            resultSet?.close()
+            stmt?.close()
+            conn?.close()
+        }
+
+        //Log.e("queryCourseMsg", resultCno)
+        return bookList
+    }
+
+}
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/samples/constrained/ConstrainedDelegation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/constrained/ConstrainedDelegation.java b/app/libs/sqljdbc_11.2/chs/samples/constrained/ConstrainedDelegation.java
new file mode 100644
--- /dev/null	(date 1716042169793)
+++ b/app/libs/sqljdbc_11.2/chs/samples/constrained/ConstrainedDelegation.java	(date 1716042169793)
@@ -0,0 +1,175 @@
+/*=====================================================================
+File: 	 ConstrainedDelegation.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application 
+         that demonstrates how to establish constrained delegation connection.
+         An intermediate service is necessary to impersonate the client. 
+		 This service needs to be configured with the options:
+		 1. "Trust this user for delegation to specified services only"
+		 2. "Use any authentication protocol"
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+
+import java.security.PrivilegedActionException;
+import java.security.PrivilegedExceptionAction;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Properties;
+
+import javax.security.auth.Subject;
+import javax.security.auth.login.LoginException;
+import javax.security.auth.spi.LoginModule;
+
+import org.ietf.jgss.GSSCredential;
+import org.ietf.jgss.GSSException;
+import org.ietf.jgss.GSSManager;
+import org.ietf.jgss.GSSName;
+import org.ietf.jgss.Oid;
+
+import com.sun.security.auth.module.Krb5LoginModule;
+import com.sun.security.jgss.ExtendedGSSCredential;
+
+
+public class ConstrainedDelegation {
+
+    // Connection properties
+    private static final String CONNECTION_URI = "jdbc:sqlserver://<server>:<port>";
+
+    private static final String TARGET_USER_NAME = "User to be impersonated";
+
+    // Impersonation service properties
+    private static final String SERVICE_PRINCIPAL = "SPN";
+    private static final String KEYTAB_ROUTE = "<Route to Keytab file>";
+
+    private static final Properties driverProperties;
+    private static Oid krb5Oid;
+    private static final String KERBEROS_OID = "1.2.840.113554.1.2.2";
+
+    private static Subject serviceSubject;
+
+    static {
+
+        driverProperties = new Properties();
+        driverProperties.setProperty("integratedSecurity", "true");
+        driverProperties.setProperty("authenticationScheme", "JavaKerberos");
+
+        try {
+            krb5Oid = new Oid(KERBEROS_OID);
+        } catch (GSSException e) {
+            System.out.println("Error creating Oid: " + e);
+            System.exit(-1);
+        }
+    }
+
+    public static void main(String... args) throws Exception {
+        System.out.println("Service subject: " + doInitialLogin());
+
+        // Get impersonated user credentials thanks S4U2self mechanism
+        GSSCredential impersonatedUserCreds = impersonate();
+        System.out.println("Credentials for " + TARGET_USER_NAME + ": " + impersonatedUserCreds);
+
+        // Create a connection for target service thanks S4U2proxy mechanism
+        try (Connection con = createConnection(impersonatedUserCreds)) {
+            System.out.println("Connection succesfully: " + con);
+        }
+    }
+
+    /**
+     *
+     * Authenticate the intermediate server that is going to impersonate the client
+     *
+     * @return a subject for the intermediate server with the keytab credentials
+     * @throws PrivilegedActionException
+     *         in case of failure
+     */
+    private static Subject doInitialLogin() throws PrivilegedActionException {
+        serviceSubject = new Subject();
+
+        LoginModule krb5Module;
+        try {
+            krb5Module = (LoginModule) new Krb5LoginModule();
+        } catch (Exception e) {
+            System.out.print("Error loading Krb5LoginModule module: " + e);
+            throw new PrivilegedActionException(e);
+        }
+
+        System.setProperty("sun.security.krb5.debug", String.valueOf(true));
+
+        Map<String, String> options = new HashMap<>();
+        options.put("useKeyTab", "true");
+        options.put("storeKey", "true");
+        options.put("doNotPrompt", "true");
+        options.put("keyTab", KEYTAB_ROUTE);
+        options.put("principal", SERVICE_PRINCIPAL);
+        options.put("debug", "true");
+        options.put("isInitiator", "true");
+
+        Map<String, String> sharedState = new HashMap<>(0);
+
+        krb5Module.initialize(serviceSubject, null, sharedState, options);
+        try {
+            krb5Module.login();
+            krb5Module.commit();
+            krb5Module.logout();
+        } catch (LoginException e) {
+            System.out.print("Error authenticating with Kerberos: " + e);
+            try {
+                krb5Module.abort();
+            } catch (LoginException e1) {
+                System.out.print("Error aborting Kerberos authentication:  " + e1);
+                throw new PrivilegedActionException(e);
+            }
+            throw new PrivilegedActionException(e);
+        }
+        return serviceSubject;
+    }
+
+    /**
+     * Generate the impersonated user credentials thanks to the S4U2self mechanism
+     *
+     * @return the client impersonated GSSCredential
+     * @throws PrivilegedActionException
+     *         in case of failure
+     */
+    private static GSSCredential impersonate() throws PrivilegedActionException {
+        return Subject.doAs(serviceSubject, (PrivilegedExceptionAction<GSSCredential>) () -> {
+            GSSManager manager = GSSManager.getInstance();
+
+            GSSCredential self = manager.createCredential(null, GSSCredential.DEFAULT_LIFETIME, krb5Oid,
+                    GSSCredential.INITIATE_ONLY);
+            GSSName user = manager.createName(TARGET_USER_NAME, GSSName.NT_USER_NAME);
+            return ((ExtendedGSSCredential) self).impersonate(user);
+        });
+    }
+
+    /**
+     * Obtains a connection using an impersonated credential
+     *
+     * @param impersonatedUserCredential
+     *        impersonated user credentials
+     * @return a connection to the SQL Server opened using the given impersonated credential
+     * @throws PrivilegedActionException
+     *         in case of failure
+     */
+    private static Connection createConnection(
+            final GSSCredential impersonatedUserCredential) throws PrivilegedActionException {
+
+        return Subject.doAs(new Subject(), (PrivilegedExceptionAction<Connection>) () -> {
+            driverProperties.put("gsscredential", impersonatedUserCredential);
+            return DriverManager.getConnection(CONNECTION_URI, driverProperties);
+        });
+    }
+
+}
Index: app/src/main/res/layout/activity_connect_alibaba_bucket.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_connect_alibaba_bucket.xml b/app/src/main/res/layout/activity_connect_alibaba_bucket.xml
new file mode 100644
--- /dev/null	(date 1716048508670)
+++ b/app/src/main/res/layout/activity_connect_alibaba_bucket.xml	(date 1716048508670)
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".imagetext.ConnectAlibabaBucketActivity">
+
+    <Button
+        android:id="@+id/btn_send"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="100dp"
+        android:layout_marginBottom="583dp"
+        android:text="Button"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.179"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <Button
+        android:id="@+id/btn_get"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="99dp"
+        android:layout_marginTop="100dp"
+        android:layout_marginEnd="67dp"
+        android:layout_marginBottom="583dp"
+        android:text="Button"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/btn_send"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.042"
+        app:srcCompat="@drawable/apple" />
+
+    <Button
+        android:id="@+id/button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Button"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.05"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintVertical_bias="0.041" />
+
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="398dp"
+        android:layout_height="274dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.461"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintVertical_bias="0.811" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
new file mode 100644
--- /dev/null	(date 1716042169851)
+++ b/settings.gradle.kts	(date 1716042169851)
@@ -0,0 +1,18 @@
+pluginManagement {
+    repositories {
+        google()
+        mavenCentral()
+        gradlePluginPortal()
+    }
+}
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+
+rootProject.name = "BookSalesManagement"
+include(":app")
+ 
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucket.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucket.java b/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucket.java
new file mode 100644
--- /dev/null	(date 1716042169809)
+++ b/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucket.java	(date 1716042169809)
@@ -0,0 +1,63 @@
+/*
+package com.example.booksalesmanagement.imagetext;
+
+import android.content.Context;
+import android.util.Log;
+
+import com.alibaba.sdk.android.oss.ClientException;
+import com.alibaba.sdk.android.oss.OSS;
+import com.alibaba.sdk.android.oss.OSSClient;
+import com.alibaba.sdk.android.oss.ServiceException;
+import com.alibaba.sdk.android.oss.callback.OSSCompletedCallback;
+import com.alibaba.sdk.android.oss.common.auth.OSSCredentialProvider;
+import com.alibaba.sdk.android.oss.common.auth.OSSPlainTextAKSKCredentialProvider;
+import com.alibaba.sdk.android.oss.internal.OSSAsyncTask;
+import com.alibaba.sdk.android.oss.model.PutObjectRequest;
+import com.alibaba.sdk.android.oss.model.PutObjectResult;
+
+public class ConnectAlibabaBucket {
+    // 第一个参数：在【RAM访问控制】创建用户时分配的accessKeyId
+// 第二个参数：在【RAM访问控制】创建用户时分配的accessKeySecret
+    OSSCredentialProvider ossCredentialProvider = new OSSPlainTextAKSKCredentialProvider("LT7SHiiyuJd8saHJsdscjkesd8dekkh", "aPKvkjshkSHuw43Lkswd8JKjdsklajaJlWc");
+    private Context mContext;
+    // 第一个参数：上下文
+    // 第二个参数：在OSS控制台创建好Bucket后，会有一个EndPoint(地域节点)，比如我这里的节点是：http://oss-cn-shanghai.aliyuncs.com
+    // 第三个参数：OSSCredentialProvider
+    OSS oss = new OSSClient(mContext.getApplicationContext(), "http://oss-cn-shanghai.aliyuncs.com", ossCredentialProvider);
+    // 第二个参数：可以是一个文件路径：比如你在image-header创建了一个文件夹为images,那第二个参数传images/img.jpg
+    // 第三个参数：是文件的本地路径，比如我这里在本地路径中是姨丈图片，路径是sdcard/img/img.jpg
+    PutObjectRequest put = new PutObjectRequest("image-header", "img.jpg", "sdcard/img/img.jpg");
+    // 异步上传时可以设置进度回调。
+    put.setProgressCallback((request, currentSize, totalSize) -> {
+        Log.d("currentSize = " + currentSize, "totalSize = " + totalSize);
+    });
+    // 此处调用异步上传方法
+    OSSAsyncTask ossAsyncTask= oss.asyncPutObject(put, new OSSCompletedCallback<PutObjectRequest, PutObjectResult>() {
+        @Override
+        public void onSuccess(PutObjectRequest request, PutObjectResult result) {
+            Log.d("PutObject", "UploadSuccess");
+            Log.d("ETag", result.getETag());
+            Log.d("RequestId", result.getRequestId());
+        }
+
+        @Override
+        public void onFailure(PutObjectRequest request, ClientException clientException, ServiceException serviceException) {
+            // 请求异常。
+            if (clientException != null) {
+                // 本地异常，如网络异常等。
+                Log.e(clientException.getMessage());
+            }
+            if (serviceException != null) {
+                // 服务异常。
+                Log.e("ErrorCode", serviceException.getErrorCode());
+                Log.e("RequestId", serviceException.getRequestId());
+                Log.e("HostId", serviceException.getHostId());
+                Log.e("RawMessage", serviceException.getRawMessage());
+
+            }
+        }
+    });
+
+
+}
+*/
Index: app/libs/sqljdbc_11.2/chs/samples/alwaysencrypted/AlwaysEncrypted.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/alwaysencrypted/AlwaysEncrypted.java b/app/libs/sqljdbc_11.2/chs/samples/alwaysencrypted/AlwaysEncrypted.java
new file mode 100644
--- /dev/null	(date 1716042169792)
+++ b/app/libs/sqljdbc_11.2/chs/samples/alwaysencrypted/AlwaysEncrypted.java	(date 1716042169792)
@@ -0,0 +1,179 @@
+/*=====================================================================
+File: 	 AlwaysEncrypted.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to create Column Master Key and Column Encryption Key for use 
+		 with the Java Key Store for Always Encrypted feature.
+
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import com.microsoft.sqlserver.jdbc.SQLServerColumnEncryptionJavaKeyStoreProvider;
+import com.microsoft.sqlserver.jdbc.SQLServerColumnEncryptionKeyStoreProvider;
+import com.microsoft.sqlserver.jdbc.SQLServerException;
+
+
+public class AlwaysEncrypted {
+    // Alias of the key stored in the keystore.
+    private static String keyAlias = null;
+
+    // Name by which the column master key will be known in the database.
+    private static String columnMasterKeyName = "JDBC_CMK";
+
+    // Name by which the column encryption key will be known in the database.
+    private static String columnEncryptionKey = "JDBC_CEK";
+
+    // The location of the keystore.
+    private static String keyStoreLocation = null;
+
+    // The password of the keystore and the key.
+    private static char[] keyStoreSecret = null;
+
+    /**
+     * Name of the encryption algorithm used to encrypt the value of the column encryption key. The algorithm for the
+     * system providers must be RSA_OAEP.
+     */
+    private static String algorithm = "RSA_OAEP";
+
+    public static void main(String[] args) {
+
+        String serverName = null;
+        String portNumber = null;
+        String databaseName = null;
+        String username = null;
+        String password = null;
+
+        try (InputStreamReader in = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(in)) {
+            System.out.print("Enter server name: ");
+            serverName = br.readLine();
+            System.out.print("Enter port number: ");
+            portNumber = br.readLine();
+            System.out.print("Enter database name: ");
+            databaseName = br.readLine();
+            System.out.print("Enter username: ");
+            username = br.readLine();
+            System.out.print("Enter password: ");
+            password = br.readLine();
+
+            System.out.print("Enter the location of the keystore: ");
+            // e.g. C:\\Dev\\Always Encrypted\\keystore.jks
+            keyStoreLocation = br.readLine();
+
+            System.out.print("Enter the alias of the key stored in the keystore: ");
+            // e.g. lp-e796acea-c3bd-4a27-b657-2bb71e3517d1
+            keyAlias = br.readLine();
+
+            System.out.print("Enter the password of the keystore and the key: ");
+            // <Secret of key Store>
+            keyStoreSecret = br.readLine().toCharArray();
+
+            String connectionUrl = "jdbc:sqlserver://" + serverName + ":" + portNumber + ";" + "databaseName="
+                    + databaseName + ";username=" + username + ";password=" + password + ";";
+
+            // Open a connection to the database.
+            try (Connection connection = DriverManager.getConnection(connectionUrl);
+                    Statement stmt = connection.createStatement()) {
+                // Instantiate the Java Key Store provider.
+                SQLServerColumnEncryptionKeyStoreProvider storeProvider = new SQLServerColumnEncryptionJavaKeyStoreProvider(
+                        keyStoreLocation, keyStoreSecret);
+
+                dropKeys(stmt);
+
+                System.out.println();
+
+                /**
+                 * Create column mater key For details on syntax refer: https://msdn.microsoft.com/library/mt146393.aspx
+                 * 
+                 */
+                String createCMKSQL = "CREATE COLUMN MASTER KEY " + columnMasterKeyName + " WITH ( "
+                        + " KEY_STORE_PROVIDER_NAME = '" + storeProvider.getName() + "' , KEY_PATH =  '" + keyAlias
+                        + "' ) ";
+
+                stmt.executeUpdate(createCMKSQL);
+                System.out.println("Column Master Key created with name : " + columnMasterKeyName);
+
+                byte[] encryptedCEK = getEncryptedCEK(storeProvider);
+
+                /**
+                 * Create column encryption key For more details on the syntax refer:
+                 * https://msdn.microsoft.com/library/mt146372.aspx Encrypted CEK first needs to be converted into
+                 * varbinary_literal from bytes, for which DatatypeConverter.printHexBinary is used
+                 */
+                String createCEKSQL = "CREATE COLUMN ENCRYPTION KEY " + columnEncryptionKey + " WITH VALUES ( "
+                        + " COLUMN_MASTER_KEY = " + columnMasterKeyName + " , ALGORITHM =  '" + algorithm
+                        + "' , ENCRYPTED_VALUE =  0x" + bytesToHexString(encryptedCEK, encryptedCEK.length) + " ) ";
+
+                stmt.executeUpdate(createCEKSQL);
+                System.out.println("CEK created with name : " + columnEncryptionKey);
+            }
+        } catch (Exception e) {
+            // Handle any errors that may have occurred.
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 
+     * @param b
+     *        byte value
+     * @param length
+     *        length of the array
+     * @return
+     */
+    final static char[] hexChars = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
+
+    private static String bytesToHexString(byte[] b, int length) {
+        StringBuilder sb = new StringBuilder(length * 2);
+        for (int i = 0; i < length; i++) {
+            int hexVal = b[i] & 0xFF;
+            sb.append(hexChars[(hexVal & 0xF0) >> 4]);
+            sb.append(hexChars[(hexVal & 0x0F)]);
+        }
+        return sb.toString();
+    }
+
+    private static byte[] getEncryptedCEK(
+            SQLServerColumnEncryptionKeyStoreProvider storeProvider) throws SQLServerException {
+        /**
+         * Following arguments needed by SQLServerColumnEncryptionJavaKeyStoreProvider 1) keyStoreLocation : Path where
+         * keystore is located, including the keystore file name. 2) keyStoreSecret : Password of the keystore and the
+         * key.
+         */
+        String plainTextKey = "You need to give your plain text";
+
+        // plainTextKey has to be 32 bytes with current algorithm supported
+        byte[] plainCEK = plainTextKey.getBytes();
+
+        // This will give us encrypted column encryption key in bytes
+        byte[] encryptedCEK = storeProvider.encryptColumnEncryptionKey(keyAlias, algorithm, plainCEK);
+
+        return encryptedCEK;
+    }
+
+    private static void dropKeys(Statement stmt) throws SQLException {
+        String cekSql = " if exists (SELECT name from sys.column_encryption_keys where name='" + columnEncryptionKey
+                + "')" + " begin" + " drop column encryption key " + columnEncryptionKey + " end";
+        stmt.execute(cekSql);
+
+        cekSql = " if exists (SELECT name from sys.column_master_keys where name='" + columnMasterKeyName + "')"
+                + " begin" + " drop column master key " + columnMasterKeyName + " end";
+        stmt.execute(cekSql);
+    }
+}
Index: app/libs/sqljdbc_11.2/chs/samples/dataclassification/DataDiscoveryAndClassification.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/dataclassification/DataDiscoveryAndClassification.java b/app/libs/sqljdbc_11.2/chs/samples/dataclassification/DataDiscoveryAndClassification.java
new file mode 100644
--- /dev/null	(date 1716042169794)
+++ b/app/libs/sqljdbc_11.2/chs/samples/dataclassification/DataDiscoveryAndClassification.java	(date 1716042169794)
@@ -0,0 +1,169 @@
+/*=====================================================================
+File: 	 ExecuteStoredProcedures.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application 
+         that demonstrates how to extract 'SQL Data Discovery and 
+		 Classification' information from ResultSet.
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+import java.sql.Statement;
+
+import com.microsoft.sqlserver.jdbc.SQLServerResultSet;
+import com.microsoft.sqlserver.jdbc.dataclassification.SensitivityProperty;
+
+
+/**
+ * SQL Server feature documentation reference:
+ * https://docs.microsoft.com/en-us/sql/relational-databases/security/sql-data-discovery-and-classification?view=sql-server-2017
+ */
+public class DataDiscoveryAndClassification {
+
+    private static boolean featureSupported = false;
+
+    public static void main(String[] args) {
+
+        // Provides table name to be used for running test.
+        String tableName = "JDBC_SQL_DATA_DISCOVERY_CLASSIFICATION";
+
+        // Create a variable for the connection string.
+		String connectionUrl = "jdbc:sqlserver://<server>:<port>;databaseName=<database>;username=<user>;password=<password>;";
+
+        // Establish the connection.
+        try (Connection con = DriverManager.getConnection(connectionUrl); Statement stmt = con.createStatement()) {
+            verifySupportability(stmt);
+            if (featureSupported) {
+                createTable(stmt, tableName);
+                runTests(stmt, tableName);
+                drop_table(stmt, tableName);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * Verifies if SQL Discovery and Classification feature is applicable on target server.
+     * 
+     * @param stmt
+     *        Statement object to work with
+     */
+    private static void verifySupportability(Statement stmt) {
+        try {
+            stmt.execute("SELECT * FROM SYS.SENSITIVITY_CLASSIFICATIONS");
+            featureSupported = true;
+        } catch (SQLException e) {
+            // Error Code 208 : Object Not Found
+            if (e.getErrorCode() == 208) {
+                featureSupported = false;
+                System.err.println("This feature is not supported on the target SQL Server.");
+            }
+        }
+    }
+
+    /**
+     * Creates table for the test and sets tags for Sensitivity Classification
+     * 
+     * @param stmt
+     *        Statement to work with
+     * @param tableName
+     *        Table to be created
+     * @throws SQLException
+     *         If an exception occurs
+     */
+    private static void createTable(Statement stmt, String tableName) throws SQLException {
+        // Creates table for storing Supplier data
+        stmt.execute("CREATE TABLE " + tableName + " (" + "[Id] [int] IDENTITY(1,1) NOT NULL,"
+                + "[CompanyName] [nvarchar](40) NOT NULL," + "[ContactName] [nvarchar](50) NULL,"
+                + "[ContactTitle] [nvarchar](40) NULL," + "[City] [nvarchar](40) NULL,"
+                + "[Country] [nvarchar](40) NULL," + "[Phone] [nvarchar](30) MASKED WITH (FUNCTION = 'default()') NULL,"
+                + "[Fax] [nvarchar](30) MASKED WITH (FUNCTION = 'default()') NULL," + "CONSTRAINT [PK_" + tableName
+                + "] PRIMARY KEY CLUSTERED" + "([Id] ASC "
+                + ")WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]" + ") ON [PRIMARY]");
+
+        // Set Sensitivity Classification tags to table columns
+        stmt.execute("ADD SENSITIVITY CLASSIFICATION TO " + tableName
+                + ".CompanyName WITH (LABEL='PII', LABEL_ID='L1', INFORMATION_TYPE='Company name', INFORMATION_TYPE_ID='COMPANY')");
+        stmt.execute("ADD SENSITIVITY CLASSIFICATION TO " + tableName
+                + ".ContactName WITH (LABEL='PII', LABEL_ID='L1', INFORMATION_TYPE='Person name', INFORMATION_TYPE_ID='NAME')");
+        stmt.execute("ADD SENSITIVITY CLASSIFICATION TO " + tableName
+                + ".Phone WITH (LABEL='PII', LABEL_ID='L1', INFORMATION_TYPE='Contact Information', INFORMATION_TYPE_ID='CONTACT')");
+        stmt.execute("ADD SENSITIVITY CLASSIFICATION TO " + tableName
+                + ".Fax WITH (LABEL='PII', LABEL_ID='L1', INFORMATION_TYPE='Contact Information', INFORMATION_TYPE_ID='CONTACT')");
+    }
+
+    /**
+     * Runs query to fetch ResultSet from target table
+     * 
+     * @param stmt
+     *        Statement to work with
+     * @param tableName
+     *        Name of table to fetch results from
+     * @throws SQLException
+     *         If an exception occurs
+     */
+    private static void runTests(Statement stmt, String tableName) throws SQLException {
+        String query = "SELECT * FROM " + tableName;
+        try (SQLServerResultSet rs = (SQLServerResultSet) stmt.executeQuery(query)) {
+            printSensitivityClassification(rs);
+        }
+    }
+
+    /**
+     * Prints Sensitivity Classification data as received in ResultSet
+     * 
+     * @param rs
+     *        Active ResultSet to read data from
+     * @throws SQLException
+     *         If an exception occurs
+     */
+    private static void printSensitivityClassification(SQLServerResultSet rs) throws SQLException {
+        if (null != rs.getSensitivityClassification()) {
+            for (int columnPos = 0; columnPos < rs.getSensitivityClassification().getColumnSensitivities().size();
+                    columnPos++) {
+                for (SensitivityProperty sp : rs.getSensitivityClassification().getColumnSensitivities().get(columnPos)
+                        .getSensitivityProperties()) {
+                    if (sp.getLabel() != null) {
+                        System.out.println("Labels received for Column : " + columnPos);
+                        System.out.println("Label ID: " + sp.getLabel().getId());
+                        System.out.println("Label Name: " + sp.getLabel().getName());
+                        System.out.println();
+                    }
+
+                    if (sp.getInformationType() != null) {
+                        System.out.println("Information Types received for Column : " + columnPos);
+                        System.out.println("Information Type ID: " + sp.getInformationType().getId());
+                        System.out.println("Information Type Name: " + sp.getInformationType().getName());
+                        System.out.println();
+                    }
+                }
+            }
+        }
+    }
+
+    /**
+     * Drops the table created for test
+     * 
+     * @param stmt
+     *        Statement to work with
+     * @param tableName
+     *        Table Name to be used
+     * @throws SQLException
+     *         If an exception occurs
+     */
+    private static void drop_table(Statement stmt, String tableName) throws SQLException {
+        stmt.execute("DROP TABLE " + tableName);
+    }
+}
Index: app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucketActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucketActivity.kt b/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucketActivity.kt
new file mode 100644
--- /dev/null	(date 1716101374009)
+++ b/app/src/main/java/com/example/booksalesmanagement/imagetext/ConnectAlibabaBucketActivity.kt	(date 1716101374009)
@@ -0,0 +1,354 @@
+package com.example.booksalesmanagement.imagetext
+
+import android.annotation.SuppressLint
+import android.app.Activity
+import android.content.ContentValues
+import android.content.Intent
+import android.graphics.Bitmap
+import android.net.Uri
+import android.os.Build
+import android.os.Bundle
+import android.provider.MediaStore
+import android.util.Log
+import android.widget.Toast
+import androidx.activity.result.ActivityResultLauncher
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.appcompat.app.AppCompatActivity
+import com.alibaba.sdk.android.oss.ClientException
+import com.alibaba.sdk.android.oss.ServiceException
+import com.alibaba.sdk.android.oss.model.GetObjectRequest
+import com.alibaba.sdk.android.oss.model.GetObjectResult
+import com.alibaba.sdk.android.oss.model.PutObjectRequest
+import com.alibaba.sdk.android.oss.model.PutObjectResult
+import com.example.booksalesmanagement.R
+import com.example.booksalesmanagement.bean.Book
+import com.example.booksalesmanagement.bean.SC
+import com.example.booksalesmanagement.dao.BookDao
+import com.example.booksalesmanagement.database.ConnectionSqlServer
+import com.example.booksalesmanagement.databinding.ActivityConnectAlibabaBucketBinding
+import java.lang.StringBuilder
+import kotlin.concurrent.thread
+
+class ConnectAlibabaBucketActivity : AppCompatActivity() {
+
+    private var ossManager: OssManager? = null
+
+    private var _binding: ActivityConnectAlibabaBucketBinding? = null
+    private val binding get() = _binding!!
+
+    private lateinit var imageUri: Uri
+    private lateinit var pickImageLauncher: ActivityResultLauncher<String>
+    private lateinit var cropImageLauncher: ActivityResultLauncher<Intent>
+
+
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        _binding = ActivityConnectAlibabaBucketBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        // 初始化ActivityResultLauncher来启动相册应用
+        initPickImageLauncher()
+
+        // 初始化ActivityResultLauncher来启动裁剪应用
+        initCropImageLauncher()
+
+        binding.button.setOnClickListener {
+            getBookAllMsg()
+        }
+
+        binding.btnSend.setOnClickListener {
+            //sendImage()
+            // 启动相册应用
+            pickImageLauncher.launch("image/*")
+
+            /*  // 将Uri转换为文件路径
+              val imageFilePath = ImageUtils.getPathFromUri(this, imageUri)
+
+  *//*            val imageFilePath =
+                FileUtils.saveDrawableToInternalStorage(this, R.drawable.pear, "pear.jpg")
+            if (imageFilePath != null) {
+                // 图片保存成功，filePath 是保存的文件路径
+            } else {
+                // 图片保存失败
+            }*//*
+            ConnectAlibabaOssToImage.sendImage(
+                this,
+                "pear",
+                imageFilePath,
+                object : ConnectAlibabaOssToImage.UploadCallback {
+                    override fun onUploadSuccess() {
+                        runOnUiThread {
+                            Toast.makeText(
+                                this@ConnectAlibabaBucketActivity,
+                                "上传成功",
+                                Toast.LENGTH_SHORT
+                            ).show()
+                        }
+                    }
+
+                    override fun onUploadFailure() {
+                        TODO("Not yet implemented")
+                    }
+                })*/
+        }
+
+        binding.btnGet.setOnClickListener {
+            //getImage("img3.jpg")
+            ConnectAlibabaOssToImage.getImage(
+                this,
+                "pear",
+                object : ConnectAlibabaOssToImage.ImageCallback {
+                    override fun onImageLoaded(bitmap: Bitmap?) {
+                        runOnUiThread {
+                            Toast.makeText(
+                                this@ConnectAlibabaBucketActivity,
+                                "下载成功",
+                                Toast.LENGTH_SHORT
+                            ).show()
+                            binding.imageView.setImageBitmap(bitmap)
+                        }
+                    }
+
+                    override fun onError() {
+                        TODO("Not yet implemented")
+                    }
+
+                })
+        }
+
+    }
+
+    private fun getBookAllMsg() {
+        // 调用SQL Server数据库的代码
+        val sb = StringBuilder()
+        var bookList = ArrayList<Book>()
+        thread {
+            try {
+                bookList = BookDao.queryAll()
+            } catch (e: Exception) {
+                e.printStackTrace()
+            }
+
+            for (book in bookList) {
+                sb.append("图书编号：" + book.bookId)
+                sb.append("图书名称：" + book.bookName)
+                sb.append("出版社编号：" + book.publisherId)
+                sb.append("作者：" + book.author)
+                sb.append("价格：" + book.price)
+                sb.append("库存：" + book.inventory)
+                sb.append("出版日期：" + book.publicationDate)
+                sb.append("\n")
+            }
+
+            runOnUiThread {
+                binding.textView.text = sb.toString()
+            }
+            //binding.tvShowMsg.text = Cno
+            Log.e("TAG", "getMsgFromSqlServer: " + sb.toString())
+        }
+    }
+
+    private fun initCropImageLauncher() {
+        // 初始化ActivityResultLauncher来启动裁剪应用
+        cropImageLauncher =
+            registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->
+                if (result.resultCode == Activity.RESULT_OK && result.data != null) {
+                    val extras = result.data!!.extras //这行代码获取了从裁剪应用返回的 Intent 中的额外数据，通常包含了裁剪后的图片数据
+                    val croppedBitmap = extras?.getParcelable<Bitmap>("data")
+                    imageUri = bitmapToUri(croppedBitmap)
+                    //将Uri转换为文件路径
+                    val imageFilePath = ImageUtils.getPathFromUri(this, imageUri)
+
+                    ConnectAlibabaOssToImage.sendImage(this, "pear", imageFilePath,
+                        object : ConnectAlibabaOssToImage.UploadCallback {
+                            override fun onUploadSuccess() {
+                                runOnUiThread {
+                                    Toast.makeText(
+                                        this@ConnectAlibabaBucketActivity,
+                                        "上传成功",
+                                        Toast.LENGTH_SHORT
+                                    ).show()
+                                }
+                            }
+
+                            override fun onUploadFailure() {
+                                TODO("Not yet implemented")
+                            }
+                        })
+                }
+            }
+    }
+
+    private fun initPickImageLauncher() {
+        // 初始化ActivityResultLauncher来启动相册应用
+        pickImageLauncher =
+            registerForActivityResult(ActivityResultContracts.GetContent()) { result: Uri? ->
+                result?.let {
+                    imageUri = it
+                    startCropImage()
+                }
+            }
+    }
+
+    private fun bitmapToUri(bitmap: Bitmap?): Uri {
+        val context = applicationContext
+        val imagesDir = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
+            MediaStore.Images.Media.getContentUri(MediaStore.VOLUME_EXTERNAL_PRIMARY)
+        } else {
+            TODO("VERSION.SDK_INT < Q")
+        }
+        val resolver = context.contentResolver
+        val contentValues = ContentValues().apply {
+            put(MediaStore.Images.Media.DISPLAY_NAME, "cropped_image.jpg")
+            put(MediaStore.Images.Media.MIME_TYPE, "image/jpeg")
+        }
+        val imageUri = resolver.insert(imagesDir, contentValues)!!
+        imageUri?.let {
+            val outputStream = resolver.openOutputStream(it)
+            outputStream?.use { stream ->
+                bitmap?.compress(Bitmap.CompressFormat.JPEG, 100, stream)
+            }
+        }
+        return imageUri
+    }
+
+    private fun startCropImage() {
+        imageUri.let { uri ->
+            val cropIntent = Intent("com.android.camera.action.CROP").apply {
+                setDataAndType(uri, "image/*") //设置了要裁剪的图片的数据和类型。uri 是图片的 Uri 地址，"image/*" 表示裁剪的是图片
+                putExtra("scale", true);// 设置缩放
+                putExtra(
+                    "scaleUpIfNeeded",
+                    true
+                );// 去黑边 ;设置了是否在裁剪时扩展图像以适应裁剪框。设置为 true 表示在需要时扩展图像以适应裁剪框
+                putExtra("circleCrop", true);//字面意思是圆形的裁剪框。但是目测也需要手机的支持。
+                putExtra("crop", "true") //这行代码启用了裁剪功能
+                putExtra("aspectX", 1) //这两行代码设置了裁剪框的宽高比。在这里，它们都被设置为 1，表示裁剪框是正方形的
+                putExtra("aspectY", 1)
+                putExtra("outputX", 450) // 期望的裁剪输出图片宽度
+                putExtra("outputY", 450) // 期望的裁剪输出图片高度
+                putExtra("return-data", true) //设置了裁剪后的数据是否返回到调用者。设置为 true 表示裁剪后的图片数据会返回到调用者
+            }
+            cropImageLauncher.launch(cropIntent)
+        }
+    }
+
+    private fun getImage(bookImage: String) {
+        ossManager = OssManager.Builder(this)
+            .bucketName("bookcoverimage")
+            .accessKeyId("LTAI5tShWwnv8iwW6fYpXaUg")
+            .accessKeySecret("aCdE7DpKSm9fiHTmqgKw3F28T6hHuo")
+            .endPoint("http://oss-cn-chengdu.aliyuncs.com")
+            .objectKey("images/$bookImage")
+            .build()
+
+        var getBitmap: Bitmap? = null
+
+        ossManager?.setGetStateListener(object : OssManager.OnGetStateListener {
+            override fun onSuccess(request: GetObjectRequest?, result: GetObjectResult?) {
+                // 下载成功处理
+                Log.e("TAG", "下载成功")
+                // 将临时文件加载为 Bitmap 对象
+                getBitmap = ossManager?.downImageBitmap
+
+                /*                // 在 UI 线程上更新 ImageView
+                                runOnUiThread {
+                                    binding.imageView.setImageBitmap(getBitmap)
+                                    ossManager?.cancelPushOrGet()
+                                }*/
+
+            }
+
+            override fun onFailure(
+                request: GetObjectRequest?,
+                clientException: ClientException?,
+                serviceException: ServiceException?
+            ) {
+
+            }
+        })
+
+        ossManager?.getObject()
+
+
+        /*        val getBitMap = ossManager?.downImageBitmap
+                binding.imageView.setImageBitmap(getBitMap)*/
+    }
+
+    @SuppressLint("ResourceType")
+    private fun sendImage() {
+        // 获取资源 ID
+        val resourceId = R.drawable._pear
+
+        /*        // 将资源转换为 InputStream
+                val inputStream = resources.openRawResource(resourceId).toString()
+
+                val imagePath =
+                    "android.resource://$packageName/drawable-xxhdpi/_pear.jpg"
+
+                //String videoPath = "android.resource://" + getPackageName() + "/" + R.raw.builder_video_five;
+                // 设置图片的Url地址
+                val videoUrl =
+                    "https://typroamarkdown.oss-cn-chengdu.aliyuncs.com/image-20230721115005028.png" // 替换为你的网络视频地址*/
+
+        val filePath = FileUtils.saveDrawableToInternalStorage(this, R.drawable.pear, "pear.jpg")
+        if (filePath != null) {
+            // 图片保存成功，filePath 是保存的文件路径
+        } else {
+            // 图片保存失败
+        }
+
+
+        ossManager = OssManager.Builder(this)
+            .bucketName("bookcoverimage")
+            .accessKeyId("LTAI5tShWwnv8iwW6fYpXaUg")
+            .accessKeySecret("aCdE7DpKSm9fiHTmqgKw3F28T6hHuo")
+            .endPoint("http://oss-cn-chengdu.aliyuncs.com")
+            .objectKey("images/img3.jpg")
+            .localFilePath(filePath)
+            .build()
+
+        //设置上传进度和状态监听器（可选）
+        ossManager?.setPushProgressListener(object : OssManager.OnPushProgressListener {
+            override fun onProgress(
+                request: PutObjectRequest?,
+                currentSize: Long,
+                totalSize: Long
+            ) {
+                // 处理上传进度
+
+            }
+        })
+
+        ossManager?.setPushStateListener(object : OssManager.OnPushStateListener {
+            override fun onSuccess(request: PutObjectRequest?, result: PutObjectResult?) {
+                // 上传成功处理
+                Log.e("TAG", "上传成功")
+                ossManager?.cancelPushOrGet()
+            }
+
+            override fun onFailure(
+                request: PutObjectRequest?,
+                clientException: ClientException?,
+                serviceException: ServiceException?
+            ) {
+                // 上传失败处理
+
+            }
+        })
+
+// 执行上传任务
+        ossManager?.push()
+
+
+    }
+
+
+    override fun onDestroy() {
+        super.onDestroy()
+        _binding = null
+    }
+
+
+}
\ No newline at end of file
Index: app/libs/sqljdbc_11.2/chs/samples/azureactivedirectoryauthentication/AzureActiveDirectoryAuthentication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/libs/sqljdbc_11.2/chs/samples/azureactivedirectoryauthentication/AzureActiveDirectoryAuthentication.java b/app/libs/sqljdbc_11.2/chs/samples/azureactivedirectoryauthentication/AzureActiveDirectoryAuthentication.java
new file mode 100644
--- /dev/null	(date 1716042169792)
+++ b/app/libs/sqljdbc_11.2/chs/samples/azureactivedirectoryauthentication/AzureActiveDirectoryAuthentication.java	(date 1716042169792)
@@ -0,0 +1,111 @@
+/*=====================================================================
+File: 	 AzureActiveDirectoryAuthentication.java
+Summary: This Microsoft JDBC Driver for SQL Server sample application
+         demonstrates how to establidh secure connection to Azure Database, 
+		 Azure Data Warehouse and any other cloud database.
+		 
+		 Users can use 'ActiveDirectoryPassword' or 'ActiveDirectoryIntegrated' 
+		 Authentication modes as per their needs. This test can be used to 
+		 establish connection by both modes on any operating system, if required 
+		 setup is provided for Active Directory Integrated Authentication.
+		 
+		 For testing 'ActiveDirectoryIntegrated' Authentication, do one of 
+		 the following:
+           1. Generate Kerberos Ticket and validate its availability with klist tool
+           2. Place sqljdbc_auth.dll in the same directory as the pom.xml file. 
+              (Only applicable for Windows OS)
+			  
+		 For testing 'ActiveDirectoryPassword' Authentication, none of the above 
+		 setup is required.
+
+---------------------------------------------------------------------
+This file is part of the Microsoft JDBC Driver for SQL Server Code Samples.
+Copyright (C) Microsoft Corporation.  All rights reserved.
+ 
+This source code is intended only as a supplement to Microsoft
+Development Tools and/or on-line documentation.  See these other
+materials for detailed information regarding Microsoft code samples.
+ 
+THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF
+ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+PARTICULAR PURPOSE.
+=====================================================================*/
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.sql.Connection;
+import java.sql.ResultSet;
+import java.sql.Statement;
+
+import com.microsoft.sqlserver.jdbc.SQLServerDataSource;
+
+
+public class AzureActiveDirectoryAuthentication {
+
+    public static void main(String[] args) {
+
+        String serverName = null;
+        String portNumber = null;
+        String databaseName = null;
+        String username = null;
+        String password = null;
+        String authentication = null;
+        String hostNameInCertificate = null;
+
+        try (InputStreamReader in = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(in)) {
+
+            System.out.println("For testing 'ActiveDirectoryIntegrated' Authentication, do one of the following:");
+            System.out.println("   1. Generate Kerberos Ticket and validate its availability with klist tool, or");
+            System.out.println("   2. Place sqljdbc_auth.dll in the same directory as the pom.xml file.");
+            System.out.println(
+                    "For testing 'ActiveDirectoryPassword' Authentication, none of the above setup is not required.");//
+            System.out.println();
+
+            // Start capturing database info
+            System.out.print("Enter server name: ");
+            serverName = br.readLine();
+            System.out.print("Enter port number: ");
+            portNumber = br.readLine();
+            System.out.print("Enter database name: ");
+            databaseName = br.readLine();
+            System.out.print("Enter username: ");
+            username = br.readLine();
+            System.out.print("Enter password: ");
+            password = br.readLine();
+            System.out.print("Enter authentication: "); // e.g. ActiveDirectoryPassword / ActiveDirectoryIntegrated
+            authentication = br.readLine();
+            System.out.print("Enter host name in certificate: "); // e.g. *.database.windows.net
+            hostNameInCertificate = br.readLine();
+
+            // Establish the connection.
+            SQLServerDataSource ds = new SQLServerDataSource();
+            ds.setServerName(serverName);
+            ds.setPortNumber(Integer.parseInt(portNumber));
+            ds.setDatabaseName(databaseName);
+            ds.setUser(username);
+            ds.setPassword(password);
+            ds.setAuthentication(authentication);
+            ds.setHostNameInCertificate(hostNameInCertificate);
+
+            try (Connection con = ds.getConnection(); Statement stmt = con.createStatement();) {
+                System.out.println();
+                System.out.println("Connection established successfully.");
+
+                // Create and execute an SQL statement that returns user name.
+                String SQL = "SELECT SUSER_SNAME()";
+                try (ResultSet rs = stmt.executeQuery(SQL)) {
+
+                    // Iterate through the data in the result set and display it.
+                    while (rs.next()) {
+                        System.out.println("user name: " + rs.getString(1));
+                    }
+                }
+            }
+        }
+        // Handle any errors that may have occurred.
+        catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
new file mode 100644
--- /dev/null	(date 1716042169737)
+++ b/.idea/kotlinc.xml	(date 1716042169737)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="KotlinJpsPluginSettings">
+    <option name="version" value="1.8.0" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/example/booksalesmanagement/imagetext/ImageUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/booksalesmanagement/imagetext/ImageUtils.kt b/app/src/main/java/com/example/booksalesmanagement/imagetext/ImageUtils.kt
new file mode 100644
--- /dev/null	(date 1716042169810)
+++ b/app/src/main/java/com/example/booksalesmanagement/imagetext/ImageUtils.kt	(date 1716042169810)
@@ -0,0 +1,19 @@
+package com.example.booksalesmanagement.imagetext
+
+import android.content.Context
+import android.net.Uri
+import android.provider.MediaStore
+
+object ImageUtils {
+    fun getPathFromUri(context: Context, uri: Uri): String {
+        val projection = arrayOf(MediaStore.Images.Media.DATA)
+        val cursor = context.contentResolver.query(uri, projection, null, null, null)
+        cursor?.use {
+            if (it.moveToFirst()) {
+                val columnIndex = it.getColumnIndexOrThrow(MediaStore.Images.Media.DATA)
+                return it.getString(columnIndex)
+            }
+        }
+        return "null"
+    }
+}
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1716042169735)
+++ b/.idea/.gitignore	(date 1716042169735)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1716042169735)
+++ b/.idea/compiler.xml	(date 1716042169735)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="17" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/dbnavigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dbnavigator.xml b/.idea/dbnavigator.xml
new file mode 100644
--- /dev/null	(date 1716042169736)
+++ b/.idea/dbnavigator.xml	(date 1716042169736)
@@ -0,0 +1,633 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DBNavigator.Project.DDLFileAttachmentManager">
+    <mappings />
+    <preferences />
+  </component>
+  <component name="DBNavigator.Project.DataEditorManager">
+    <record-view-column-sorting-type value="BY_INDEX" />
+    <value-preview-text-wrapping value="true" />
+    <value-preview-pinned value="false" />
+  </component>
+  <component name="DBNavigator.Project.DatabaseBrowserManager">
+    <autoscroll-to-editor value="true" />
+    <autoscroll-from-editor value="true" />
+    <show-object-properties value="true" />
+    <loaded-nodes />
+  </component>
+  <component name="DBNavigator.Project.DatabaseConsoleManager">
+    <connection id="ed04f00f-7843-43f9-ab2f-77b8e37cd01b">
+      <console name="Connection" type="STANDARD" schema="" session="Main"><![CDATA[select * from jiaoxuedb]]></console>
+    </connection>
+    <connection id="f3efe383-c6d2-4e29-bfa7-7e13f544c7b6">
+      <console name="Connection 1" type="STANDARD" schema="" session="Main" />
+    </connection>
+  </component>
+  <component name="DBNavigator.Project.DatabaseEditorStateManager">
+    <last-used-providers />
+  </component>
+  <component name="DBNavigator.Project.DatabaseFileManager">
+    <open-files />
+  </component>
+  <component name="DBNavigator.Project.DatabaseSessionManager">
+    <connection id="ed04f00f-7843-43f9-ab2f-77b8e37cd01b" />
+    <connection id="f3efe383-c6d2-4e29-bfa7-7e13f544c7b6" />
+  </component>
+  <component name="DBNavigator.Project.ExecutionManager">
+    <retain-sticky-names value="false" />
+  </component>
+  <component name="DBNavigator.Project.MethodExecutionManager">
+    <method-browser />
+    <execution-history>
+      <group-entries value="true" />
+      <execution-inputs />
+    </execution-history>
+    <argument-values-cache />
+  </component>
+  <component name="DBNavigator.Project.ObjectQuickFilterManager">
+    <last-used-operator value="EQUAL" />
+    <filters />
+  </component>
+  <component name="DBNavigator.Project.Settings">
+    <connections>
+      <connection id="ed04f00f-7843-43f9-ab2f-77b8e37cd01b" active="true" signed="true">
+        <database>
+          <name value="Connection" />
+          <description value="" />
+          <database-type value="GENERIC" />
+          <config-type value="CUSTOM" />
+          <database-version value="15.0" />
+          <driver-source value="EXTERNAL" />
+          <driver-library value="E:\Download\jtds-1.2.7.jar\jtds-1.2.7.jar" />
+          <driver value="net.sourceforge.jtds.jdbc.Driver" />
+          <url-type value="CUSTOM" />
+          <url value="" />
+          <type value="USER_PASSWORD" />
+          <user value="sa" />
+          <deprecated-pwd value="MTIzNDU2" />
+        </database>
+        <properties>
+          <auto-commit value="false" />
+        </properties>
+        <ssh-settings>
+          <active value="false" />
+          <proxy-host value="" />
+          <proxy-port value="22" />
+          <proxy-user value="" />
+          <deprecated-proxy-pwd value="" />
+          <auth-type value="PASSWORD" />
+          <key-file value="" />
+          <key-passphrase value="" />
+        </ssh-settings>
+        <ssl-settings>
+          <active value="false" />
+          <certificate-authority-file value="" />
+          <client-certificate-file value="" />
+          <client-key-file value="" />
+        </ssl-settings>
+        <details>
+          <charset value="UTF-8" />
+          <session-management value="true" />
+          <ddl-file-binding value="true" />
+          <database-logging value="true" />
+          <connect-automatically value="false" />
+          <restore-workspace value="true" />
+          <restore-workspace-deep value="false" />
+          <environment-type value="default" />
+          <connectivity-timeout value="30" />
+          <idle-time-to-disconnect value="30" />
+          <idle-time-to-disconnect-pool value="5" />
+          <credential-expiry-time value="10" />
+          <max-connection-pool-size value="7" />
+          <alternative-statement-delimiter value="" />
+        </details>
+        <debugger>
+          <compile-dependencies value="true" />
+          <tcp-driver-tunneling value="false" />
+          <tcp-host-address value="" />
+          <tcp-port-from value="4000" />
+          <tcp-port-to value="4999" />
+          <debugger-type value="ASK" />
+        </debugger>
+        <object-filters hide-empty-schemas="true" hide-pseudo-columns="false" hide-audit-columns="false">
+          <object-type-filter use-master-settings="true">
+            <object-type name="SCHEMA" enabled="true" />
+            <object-type name="USER" enabled="true" />
+            <object-type name="ROLE" enabled="true" />
+            <object-type name="PRIVILEGE" enabled="true" />
+            <object-type name="CHARSET" enabled="true" />
+            <object-type name="TABLE" enabled="true" />
+            <object-type name="VIEW" enabled="true" />
+            <object-type name="MATERIALIZED_VIEW" enabled="true" />
+            <object-type name="NESTED_TABLE" enabled="true" />
+            <object-type name="COLUMN" enabled="true" />
+            <object-type name="INDEX" enabled="true" />
+            <object-type name="CONSTRAINT" enabled="true" />
+            <object-type name="DATASET_TRIGGER" enabled="true" />
+            <object-type name="DATABASE_TRIGGER" enabled="true" />
+            <object-type name="SYNONYM" enabled="true" />
+            <object-type name="SEQUENCE" enabled="true" />
+            <object-type name="PROCEDURE" enabled="true" />
+            <object-type name="FUNCTION" enabled="true" />
+            <object-type name="PACKAGE" enabled="true" />
+            <object-type name="TYPE" enabled="true" />
+            <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+            <object-type name="ARGUMENT" enabled="true" />
+            <object-type name="DIMENSION" enabled="true" />
+            <object-type name="CLUSTER" enabled="true" />
+            <object-type name="DBLINK" enabled="true" />
+          </object-type-filter>
+          <object-name-filters />
+        </object-filters>
+      </connection>
+      <connection id="f3efe383-c6d2-4e29-bfa7-7e13f544c7b6" active="true" signed="true">
+        <database>
+          <name value="Connection 1" />
+          <description value="" />
+          <database-type value="GENERIC" />
+          <config-type value="CUSTOM" />
+          <database-version value="9999.0" />
+          <driver-source value="EXTERNAL" />
+          <driver-library value="E:\Download\jtds-1.3.1-dist\jtds-1.3.1.jar" />
+          <driver value="net.sourceforge.jtds.jdbc.Driver" />
+          <url-type value="CUSTOM" />
+          <url value="jdbc:jtds:sqlserver://10.203.132.6:1433;Database;encrypt=true;trustServerCertificate=true" />
+          <type value="USER_PASSWORD" />
+          <user value="sa" />
+          <deprecated-pwd value="MTIzNDU2" />
+        </database>
+        <properties>
+          <auto-commit value="true" />
+        </properties>
+        <ssh-settings>
+          <active value="false" />
+          <proxy-host value="" />
+          <proxy-port value="22" />
+          <proxy-user value="" />
+          <deprecated-proxy-pwd value="" />
+          <auth-type value="PASSWORD" />
+          <key-file value="" />
+          <key-passphrase value="" />
+        </ssh-settings>
+        <ssl-settings>
+          <active value="false" />
+          <certificate-authority-file value="" />
+          <client-certificate-file value="" />
+          <client-key-file value="" />
+        </ssl-settings>
+        <details>
+          <charset value="UTF-8" />
+          <session-management value="true" />
+          <ddl-file-binding value="true" />
+          <database-logging value="true" />
+          <connect-automatically value="true" />
+          <restore-workspace value="true" />
+          <restore-workspace-deep value="false" />
+          <environment-type value="default" />
+          <connectivity-timeout value="30" />
+          <idle-time-to-disconnect value="30" />
+          <idle-time-to-disconnect-pool value="5" />
+          <credential-expiry-time value="10" />
+          <max-connection-pool-size value="7" />
+          <alternative-statement-delimiter value="" />
+        </details>
+        <debugger>
+          <compile-dependencies value="true" />
+          <tcp-driver-tunneling value="false" />
+          <tcp-host-address value="" />
+          <tcp-port-from value="4000" />
+          <tcp-port-to value="4999" />
+          <debugger-type value="ASK" />
+        </debugger>
+        <object-filters hide-empty-schemas="true" hide-pseudo-columns="true" hide-audit-columns="true">
+          <object-type-filter use-master-settings="true">
+            <object-type name="SCHEMA" enabled="true" />
+            <object-type name="USER" enabled="true" />
+            <object-type name="ROLE" enabled="true" />
+            <object-type name="PRIVILEGE" enabled="true" />
+            <object-type name="CHARSET" enabled="true" />
+            <object-type name="TABLE" enabled="true" />
+            <object-type name="VIEW" enabled="true" />
+            <object-type name="MATERIALIZED_VIEW" enabled="true" />
+            <object-type name="NESTED_TABLE" enabled="true" />
+            <object-type name="COLUMN" enabled="true" />
+            <object-type name="INDEX" enabled="true" />
+            <object-type name="CONSTRAINT" enabled="true" />
+            <object-type name="DATASET_TRIGGER" enabled="true" />
+            <object-type name="DATABASE_TRIGGER" enabled="true" />
+            <object-type name="SYNONYM" enabled="true" />
+            <object-type name="SEQUENCE" enabled="true" />
+            <object-type name="PROCEDURE" enabled="true" />
+            <object-type name="FUNCTION" enabled="true" />
+            <object-type name="PACKAGE" enabled="true" />
+            <object-type name="TYPE" enabled="true" />
+            <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+            <object-type name="ARGUMENT" enabled="true" />
+            <object-type name="DIMENSION" enabled="true" />
+            <object-type name="CLUSTER" enabled="true" />
+            <object-type name="DBLINK" enabled="true" />
+          </object-type-filter>
+          <object-name-filters />
+        </object-filters>
+      </connection>
+    </connections>
+    <browser-settings>
+      <general>
+        <display-mode value="TABBED" />
+        <navigation-history-size value="100" />
+        <show-object-details value="false" />
+      </general>
+      <filters>
+        <object-type-filter>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="true" />
+          <object-type name="ROLE" enabled="true" />
+          <object-type name="PRIVILEGE" enabled="true" />
+          <object-type name="CHARSET" enabled="true" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED_VIEW" enabled="true" />
+          <object-type name="NESTED_TABLE" enabled="true" />
+          <object-type name="COLUMN" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET_TRIGGER" enabled="true" />
+          <object-type name="DATABASE_TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="true" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="TYPE_ATTRIBUTE" enabled="true" />
+          <object-type name="ARGUMENT" enabled="true" />
+          <object-type name="DIMENSION" enabled="true" />
+          <object-type name="CLUSTER" enabled="true" />
+          <object-type name="DBLINK" enabled="true" />
+        </object-type-filter>
+      </filters>
+      <sorting>
+        <object-type name="COLUMN" sorting-type="NAME" />
+        <object-type name="FUNCTION" sorting-type="NAME" />
+        <object-type name="PROCEDURE" sorting-type="NAME" />
+        <object-type name="ARGUMENT" sorting-type="POSITION" />
+        <object-type name="TYPE ATTRIBUTE" sorting-type="POSITION" />
+      </sorting>
+      <default-editors>
+        <object-type name="VIEW" editor-type="SELECTION" />
+        <object-type name="PACKAGE" editor-type="SELECTION" />
+        <object-type name="TYPE" editor-type="SELECTION" />
+      </default-editors>
+    </browser-settings>
+    <navigation-settings>
+      <lookup-filters>
+        <lookup-objects>
+          <object-type name="SCHEMA" enabled="true" />
+          <object-type name="USER" enabled="false" />
+          <object-type name="ROLE" enabled="false" />
+          <object-type name="PRIVILEGE" enabled="false" />
+          <object-type name="CHARSET" enabled="false" />
+          <object-type name="TABLE" enabled="true" />
+          <object-type name="VIEW" enabled="true" />
+          <object-type name="MATERIALIZED VIEW" enabled="true" />
+          <object-type name="INDEX" enabled="true" />
+          <object-type name="CONSTRAINT" enabled="true" />
+          <object-type name="DATASET TRIGGER" enabled="true" />
+          <object-type name="DATABASE TRIGGER" enabled="true" />
+          <object-type name="SYNONYM" enabled="false" />
+          <object-type name="SEQUENCE" enabled="true" />
+          <object-type name="PROCEDURE" enabled="true" />
+          <object-type name="FUNCTION" enabled="true" />
+          <object-type name="PACKAGE" enabled="true" />
+          <object-type name="TYPE" enabled="true" />
+          <object-type name="DIMENSION" enabled="false" />
+          <object-type name="CLUSTER" enabled="false" />
+          <object-type name="DBLINK" enabled="true" />
+        </lookup-objects>
+        <force-database-load value="false" />
+        <prompt-connection-selection value="true" />
+        <prompt-schema-selection value="true" />
+      </lookup-filters>
+    </navigation-settings>
+    <dataset-grid-settings>
+      <general>
+        <enable-zooming value="true" />
+        <enable-column-tooltip value="true" />
+      </general>
+      <sorting>
+        <nulls-first value="true" />
+        <max-sorting-columns value="4" />
+      </sorting>
+      <audit-columns>
+        <column-names value="" />
+        <visible value="true" />
+        <editable value="false" />
+      </audit-columns>
+    </dataset-grid-settings>
+    <dataset-editor-settings>
+      <text-editor-popup>
+        <active value="false" />
+        <active-if-empty value="false" />
+        <data-length-threshold value="100" />
+        <popup-delay value="1000" />
+      </text-editor-popup>
+      <values-actions-popup>
+        <show-popup-button value="true" />
+        <element-count-threshold value="1000" />
+        <data-length-threshold value="250" />
+      </values-actions-popup>
+      <general>
+        <fetch-block-size value="100" />
+        <fetch-timeout value="30" />
+        <trim-whitespaces value="true" />
+        <convert-empty-strings-to-null value="true" />
+        <select-content-on-cell-edit value="true" />
+        <large-value-preview-active value="true" />
+      </general>
+      <filters>
+        <prompt-filter-dialog value="true" />
+        <default-filter-type value="BASIC" />
+      </filters>
+      <qualified-text-editor text-length-threshold="300">
+        <content-types>
+          <content-type name="Text" enabled="true" />
+          <content-type name="Properties" enabled="true" />
+          <content-type name="XML" enabled="true" />
+          <content-type name="DTD" enabled="true" />
+          <content-type name="HTML" enabled="true" />
+          <content-type name="XHTML" enabled="true" />
+          <content-type name="Java" enabled="true" />
+          <content-type name="SQL" enabled="true" />
+          <content-type name="PL/SQL" enabled="true" />
+          <content-type name="JSON" enabled="true" />
+          <content-type name="JSON5" enabled="true" />
+          <content-type name="Groovy" enabled="true" />
+          <content-type name="AIDL" enabled="true" />
+          <content-type name="YAML" enabled="true" />
+          <content-type name="Manifest" enabled="true" />
+        </content-types>
+      </qualified-text-editor>
+      <record-navigation>
+        <navigation-target value="VIEWER" />
+      </record-navigation>
+    </dataset-editor-settings>
+    <code-editor-settings>
+      <general>
+        <show-object-navigation-gutter value="false" />
+        <show-spec-declaration-navigation-gutter value="true" />
+        <enable-spellchecking value="true" />
+        <enable-reference-spellchecking value="false" />
+      </general>
+      <confirmations>
+        <save-changes value="false" />
+        <revert-changes value="true" />
+        <exit-on-changes value="ASK" />
+      </confirmations>
+    </code-editor-settings>
+    <code-completion-settings>
+      <filters>
+        <basic-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="false" />
+            <filter-element type="OBJECT" id="view" selected="false" />
+            <filter-element type="OBJECT" id="materialized view" selected="false" />
+            <filter-element type="OBJECT" id="index" selected="false" />
+            <filter-element type="OBJECT" id="constraint" selected="false" />
+            <filter-element type="OBJECT" id="trigger" selected="false" />
+            <filter-element type="OBJECT" id="synonym" selected="false" />
+            <filter-element type="OBJECT" id="sequence" selected="false" />
+            <filter-element type="OBJECT" id="procedure" selected="false" />
+            <filter-element type="OBJECT" id="function" selected="false" />
+            <filter-element type="OBJECT" id="package" selected="false" />
+            <filter-element type="OBJECT" id="type" selected="false" />
+            <filter-element type="OBJECT" id="dimension" selected="false" />
+            <filter-element type="OBJECT" id="cluster" selected="false" />
+            <filter-element type="OBJECT" id="dblink" selected="false" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </basic-filter>
+        <extended-filter>
+          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
+          <filter-element type="RESERVED_WORD" id="function" selected="true" />
+          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
+          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
+          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
+          <filter-element type="OBJECT" id="schema" selected="true" />
+          <filter-element type="OBJECT" id="user" selected="true" />
+          <filter-element type="OBJECT" id="role" selected="true" />
+          <filter-element type="OBJECT" id="privilege" selected="true" />
+          <user-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </user-schema>
+          <public-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </public-schema>
+          <any-schema>
+            <filter-element type="OBJECT" id="table" selected="true" />
+            <filter-element type="OBJECT" id="view" selected="true" />
+            <filter-element type="OBJECT" id="materialized view" selected="true" />
+            <filter-element type="OBJECT" id="index" selected="true" />
+            <filter-element type="OBJECT" id="constraint" selected="true" />
+            <filter-element type="OBJECT" id="trigger" selected="true" />
+            <filter-element type="OBJECT" id="synonym" selected="true" />
+            <filter-element type="OBJECT" id="sequence" selected="true" />
+            <filter-element type="OBJECT" id="procedure" selected="true" />
+            <filter-element type="OBJECT" id="function" selected="true" />
+            <filter-element type="OBJECT" id="package" selected="true" />
+            <filter-element type="OBJECT" id="type" selected="true" />
+            <filter-element type="OBJECT" id="dimension" selected="true" />
+            <filter-element type="OBJECT" id="cluster" selected="true" />
+            <filter-element type="OBJECT" id="dblink" selected="true" />
+          </any-schema>
+        </extended-filter>
+      </filters>
+      <sorting enabled="true">
+        <sorting-element type="RESERVED_WORD" id="keyword" />
+        <sorting-element type="RESERVED_WORD" id="datatype" />
+        <sorting-element type="OBJECT" id="column" />
+        <sorting-element type="OBJECT" id="table" />
+        <sorting-element type="OBJECT" id="view" />
+        <sorting-element type="OBJECT" id="materialized view" />
+        <sorting-element type="OBJECT" id="index" />
+        <sorting-element type="OBJECT" id="constraint" />
+        <sorting-element type="OBJECT" id="trigger" />
+        <sorting-element type="OBJECT" id="synonym" />
+        <sorting-element type="OBJECT" id="sequence" />
+        <sorting-element type="OBJECT" id="procedure" />
+        <sorting-element type="OBJECT" id="function" />
+        <sorting-element type="OBJECT" id="package" />
+        <sorting-element type="OBJECT" id="type" />
+        <sorting-element type="OBJECT" id="dimension" />
+        <sorting-element type="OBJECT" id="cluster" />
+        <sorting-element type="OBJECT" id="dblink" />
+        <sorting-element type="OBJECT" id="schema" />
+        <sorting-element type="OBJECT" id="role" />
+        <sorting-element type="OBJECT" id="user" />
+        <sorting-element type="RESERVED_WORD" id="function" />
+        <sorting-element type="RESERVED_WORD" id="parameter" />
+      </sorting>
+      <format>
+        <enforce-code-style-case value="true" />
+      </format>
+    </code-completion-settings>
+    <execution-engine-settings>
+      <statement-execution>
+        <fetch-block-size value="100" />
+        <execution-timeout value="20" />
+        <debug-execution-timeout value="600" />
+        <focus-result value="false" />
+        <prompt-execution value="false" />
+      </statement-execution>
+      <script-execution>
+        <command-line-interfaces />
+        <execution-timeout value="300" />
+      </script-execution>
+      <method-execution>
+        <execution-timeout value="30" />
+        <debug-execution-timeout value="600" />
+        <parameter-history-size value="10" />
+      </method-execution>
+    </execution-engine-settings>
+    <operation-settings>
+      <transactions>
+        <uncommitted-changes>
+          <on-project-close value="ASK" />
+          <on-disconnect value="ASK" />
+          <on-autocommit-toggle value="ASK" />
+        </uncommitted-changes>
+        <multiple-uncommitted-changes>
+          <on-commit value="ASK" />
+          <on-rollback value="ASK" />
+        </multiple-uncommitted-changes>
+      </transactions>
+      <session-browser>
+        <disconnect-session value="ASK" />
+        <kill-session value="ASK" />
+        <reload-on-filter-change value="false" />
+      </session-browser>
+      <compiler>
+        <compile-type value="KEEP" />
+        <compile-dependencies value="ASK" />
+        <always-show-controls value="false" />
+      </compiler>
+    </operation-settings>
+    <ddl-file-settings>
+      <extensions>
+        <mapping file-type-id="VIEW" extensions="vw" />
+        <mapping file-type-id="TRIGGER" extensions="trg" />
+        <mapping file-type-id="PROCEDURE" extensions="prc" />
+        <mapping file-type-id="FUNCTION" extensions="fnc" />
+        <mapping file-type-id="PACKAGE" extensions="pkg" />
+        <mapping file-type-id="PACKAGE_SPEC" extensions="pks" />
+        <mapping file-type-id="PACKAGE_BODY" extensions="pkb" />
+        <mapping file-type-id="TYPE" extensions="tpe" />
+        <mapping file-type-id="TYPE_SPEC" extensions="tps" />
+        <mapping file-type-id="TYPE_BODY" extensions="tpb" />
+      </extensions>
+      <general>
+        <lookup-ddl-files value="true" />
+        <create-ddl-files value="false" />
+        <synchronize-ddl-files value="true" />
+        <use-qualified-names value="false" />
+        <make-scripts-rerunnable value="true" />
+      </general>
+    </ddl-file-settings>
+    <general-settings>
+      <regional-settings>
+        <date-format value="MEDIUM" />
+        <number-format value="UNGROUPED" />
+        <locale value="SYSTEM_DEFAULT" />
+        <use-custom-formats value="false" />
+      </regional-settings>
+      <environment>
+        <environment-types>
+          <environment-type id="development" name="Development" description="Development environment" color="-2430209/-12296320" readonly-code="false" readonly-data="false" />
+          <environment-type id="integration" name="Integration" description="Integration environment" color="-2621494/-12163514" readonly-code="true" readonly-data="false" />
+          <environment-type id="production" name="Production" description="Productive environment" color="-11574/-10271420" readonly-code="true" readonly-data="true" />
+          <environment-type id="other" name="Other" description="" color="-1576/-10724543" readonly-code="false" readonly-data="false" />
+        </environment-types>
+        <visibility-settings>
+          <connection-tabs value="true" />
+          <dialog-headers value="true" />
+          <object-editor-tabs value="true" />
+          <script-editor-tabs value="false" />
+          <execution-result-tabs value="true" />
+        </visibility-settings>
+      </environment>
+    </general-settings>
+  </component>
+  <component name="DBNavigator.Project.StatementExecutionManager">
+    <execution-variables />
+    <execution-variable-types />
+  </component>
+</project>
\ No newline at end of file
